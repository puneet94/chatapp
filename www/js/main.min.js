!function(e){"use strict";function t(t,o,n,a){n.tabs.position("bottom"),n.scrolling.jsScrolling(!1),n.views.transition("platform"),t.otherwise("/home/post/nearby"),e.extend(a,{autoDismiss:!0,maxOpened:1})}var o=e.module("petal",["ionic","ngAnimate","satellizer","ngFileUpload","btford.socket-io","ngCordova","toastr","petal.home","petal.post","petal.chat","petal.user","petal.people","petal.message"]);o.config(["$urlRouterProvider","$stateProvider","$ionicConfigProvider","toastrConfig",t]),o.run(["$rootScope","$state","$ionicPlatform","$ionicLoading","RequestsService","$cordovaPushV5","$ionicHistory",function(e,t,o,n,a,s,i){function r(){o.registerBackButtonAction(function(t){return e.backButtonPressedOnceToExit?ionic.Platform.exitApp():i.backView()?i.goBack():(e.backButtonPressedOnceToExit=!0,window.plugins.toast.showShortCenter("Press back button again to exit",function(e){},function(e){}),window.setTimeout(function(){e.backButtonPressedOnceToExit=!1},2e3)),t.preventDefault(),!1},101)}function c(){a.register(),e.$on("$cordovaPushV5:notificationReceived",function(e,t){console.log(t),console.log(e)}),e.$on("$cordovaPushV5:errorOcurred",function(e,t){})}o.ready(function(){window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0),c(),r()),window.StatusBar&&StatusBar.styleDefault(),window.onerror=function(e,t,o){return!1},e.$on("$stateChangeError",function(){t.go("home.post.nearby"),n.hide()})})}])}(window.angular),function(e){"use strict";function t(e){e.state("home.chat",{url:"/chat",abstract:!0,views:{"chat-tab":{templateUrl:"app/chat/views/chatParent.html",controller:"ChatParentController",controllerAs:"ppc"}}}).state("home.chat.all",{url:"/all",views:{"chat-tab":{templateUrl:"app/chat/views/allChat.html",controller:"AllChatController",controllerAs:"acc"}}}).state("home.chat.revealed",{url:"/revealed",views:{"chat-tab":{templateUrl:"app/chat/views/revealedChat.html",controller:"RevealedChatController",controllerAs:"rpc"}}}).state("home.chat.messageroom",{url:"/messageRoom",views:{"chat-tab":{templateUrl:"app/message/views/messageRoomList.html",controller:"MessageRoomListController",controllerAs:"mrlc"}}}).state("chatBox",{url:"/chatBox/:user",templateUrl:"app/chat/views/chatBox.html",controller:"ChatBoxController",controllerAs:"cbc",resolve:{blocked:["$stateParams","blockService","$q",o]}})}function o(e,t,o){var n=o.defer();return t.check(e.user).then(function(e){n.resolve(e.data.blocked)}).catch(function(){n.resolve()}),n.promise}e.module("petal.chat",["ngFileUpload"]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e,t){var n="https://banana-surprise-31332.herokuapp.com/authenticate";t.facebook({clientId:"1134208830041632",url:n+"/auth/facebook",redirectUri:"https://banana-surprise-31332.herokuapp.com/"}),t.google({clientId:"742676837265-33jntkd60p87gkrh48nqe6cdd8ntsfl5.apps.googleusercontent.com",url:n+"/auth/google",redirectUri:"http://localhost:8100"}),e.state("authenticate",{url:"/authenticate",controller:"AuthenticationController",controllerAs:"ac",templateUrl:"app/home/views/authenticationPage.html"}).state("home",{url:"/home",abstract:!0,templateUrl:"app/home/views/tabs.html",controller:"HomeController",controllerAs:"hc",resolve:{redirectIfUserNotAuthenticated:["$q","$auth","$state","$timeout",o]}})}function o(e,t,o,n){var a=e.defer();return t.isAuthenticated()?a.resolve():n(function(){o.go("authenticate")}),a.promise}e.module("petal.home",[]).config(["$stateProvider","$authProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("messageRoomInterest",{url:"/messageRoom/interest/:interest",templateUrl:"app/message/views/messageRoom.html",controller:"MessageRoomController",controllerAs:"mrc",resolve:{messageRoom:["$stateParams","$q",o]}}).state("messageRoomPost",{url:"/messageRoom/post/:postId",templateUrl:"app/message/views/messageRoom.html",controller:"MessageRoomController",controllerAs:"mrc",resolve:{messageRoom:["$stateParams","$q","messageRoomService",o]}})}function o(e,t,o){var n=t.defer(),a={};return e.postId?a.postId=e.postId:a.interest=e.interest,o.getMessageRoom(a).then(function(e){n.resolve(e.data.foundMessageRoom)}).catch(function(e){console.log("Resolve mesage Room"),console.log(e)}),n.promise}e.module("petal.message",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("home.people",{url:"/people",abstract:!0,views:{"people-tab":{templateUrl:"app/people/views/peopleParent.html",controller:"PeopleParentController",controllerAs:"ppc"}}}).state("home.people.all",{url:"/all",views:{"people-tab":{templateUrl:"app/people/views/allPeople.html",controller:"AllPeopleController",controllerAs:"apc"}}}).state("home.people.revealed",{url:"/revealed",views:{"people-tab":{templateUrl:"app/people/views/revealedPeople.html",controller:"RevealedPeopleController",controllerAs:"rpc"}}}).state("home.people.received",{url:"/received",views:{"people-tab":{templateUrl:"app/people/views/receivedPeople.html",controller:"ReceivedPeopleController",controllerAs:"rpc"}}}).state("home.people.nearby",{url:"/nearby",views:{"people-tab":{templateUrl:"app/people/views/nearbyPeople.html",controller:"NearbyPeopleController",controllerAs:"npc"}}})}e.module("petal.people",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("home.post",{url:"/post",abstract:!0,views:{"post-tab":{templateUrl:"app/post/views/postParent.html",controller:"PostParentController",controllerAs:"ppc"}}}).state("home.post.all",{url:"/all",views:{"post-tab":{templateUrl:"app/post/views/allPost.html",controller:"AllPostController",controllerAs:"apc"}}}).state("home.post.latest",{url:"/latest",views:{"post-tab":{templateUrl:"app/post/views/latestPost.html",controller:"LatestPostController",controllerAs:"lpc"}}}).state("home.post.popular",{url:"/popular",views:{"post-tab":{templateUrl:"app/post/views/popularPost.html",controller:"PopularPostController",controllerAs:"ppc"}}}).state("home.post.nearby",{url:"/nearby",views:{"post-tab":{templateUrl:"app/post/views/nearbyPost.html",controller:"NearbyPostController",controllerAs:"npc"}}}).state("postSubmit",{url:"/submit",templateUrl:"app/post/views/createPost.html",controller:"CreatePostController",controllerAs:"cpc"}).state("singlePost",{url:"/post/:id",templateUrl:"app/post/views/singlePost.html",controller:"SinglePostController",controllerAs:"spc"})}e.module("petal.post",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e,t,o){var n=o.defer();return t.check(e.user).then(function(e){e.data.blocked===!0?(window.alert("Blocked profile"),window.history.back()):n.resolve()}).catch(function(){n.resolve()}),n.promise}function o(e,t,o){var n=o.defer();return t.check(e.user).then(function(e){n.resolve(e.data.status)}).catch(function(){}),n.promise}e.module("petal.user",[]).config(["$stateProvider",function(e){e.state("home.user",{url:"/user",abstract:!0,views:{"user-tab":{templateUrl:"app/user/views/userParentPage.html",controller:"UserParentController",controllerAs:"upc"}}}).state("home.user.userMePage",{url:"/userMePage",views:{"user-tab":{templateUrl:"app/user/views/userMePage.html",controller:"UserMePageController",controllerAs:"umpc"}}}).state("home.userPage",{url:"/userPage/:user",resolve:{blocked:["$stateParams","blockService","$q",t],friends:["$stateParams","revealService","$q",o]},views:{"extra-tab":{templateUrl:"app/user/views/userProfilePage.html",controller:"UserPageController",controllerAs:"upc"}}}).state("home.userEditPage",{url:"/userEditPage",views:{"extra-tab":{templateUrl:"app/user/views/userEditPage.html",controller:"UserEditPageController",controllerAs:"uepc"}}})}])}(window.angular),function(e){"use strict";function t(t,o,n,a,s){function i(e){var t={};t.creator2=e.user,t.newChat=!0,t.lastMessage={user:e.user._id,_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.chatRoomsList.length;o++)if(t.creator2._id==p.chatRoomsList[o].creator2._id&&t.lastMessage._id!==p.chatRoomsList[o].lastMessage._id)return p.chatRoomsList.splice(o,1),void p.chatRoomsList.unshift(t)}function r(){u()}function c(){p.params.page+=1,l()}function l(){n.getAllChatRooms(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.chatRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.chatRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.chatRoomsList=[],l()}var p=this;p.getAllChatRooms=l,p.loadMoreChats=c,p.pullRefreshChats=r,u(),s.on("newMessageReceived",i),p.chatPage=function(e){o.go("chatBox",{user:e})}}e.module("petal.chat").controller("AllChatController",["$scope","$state","chatService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(t,o,n,a,s,i,r,c,l,u,p,d,f){function m(){b.params.page+=1,v()}function h(){l.getUser(b.receiverUserID).then(function(e){b.receiverUser=e.data}).catch(function(e){console.log(e)})}function g(){o(function(){c.scrollBottom(!0)})}function v(){r.getChatMessages(b.chatRoomId,b.params).then(function(t){e.forEach(t.data.docs,function(e){b.chatList.unshift(e)})}).catch(function(e){console.log(e)}).finally(function(){g(),t.$broadcast("scroll.refreshComplete"),p.hide()})}function w(){n.emit("addToChatRoom",{roomId:b.chatRoomId}),n.on("messageReceived",function(e){b.chatList.push(e),g(),b.messageLoading=!1})}var b=this;b.isBlocked=f,b.isBlocked===!0&&window.alert("blocked profile"),b.currentUser=s.getUser()._id,b.receiverUserID=a.user,b.chatList=[],b.chatRoomId="",b.loadMoreChats=m,b.scrollBottom=g,b.messageLoading=!1,b.messageTryCount=0,b.params={page:1,limit:5},function(){p.show(),r.getChatRoom(b.receiverUserID).then(function(e){b.chatRoom=e.data,b.chatRoomId=e.data._id,w(),v()},function(e){console.log(e)}),h()}(),b.clickSubmit=function(e){b.messageLoading=!0,b.focusInput=!0,window.cordova&&(window.cordova.plugins.Keyboard.show(),window.cordova.plugins.Keyboard.isVisible=!0),g();var t={message:b.myMsg,receiver:a.user,roomId:b.chatRoomId};r.sendChatMessage(t).then(function(e){b.myMsg="",b.chatList.push(e.data.message),g(),b.messageTryCount=0}).catch(function(e){b.messageTryCount+=1,b.messageTryCount<=3&&b.clickSubmit()}).finally(function(){b.messageLoading=!1}),e.preventDefault()},b.submitUpload=function(){b.messageLoading=!0,b.file.upload=u.upload({url:i.baseURL+"upload/singleUpload",data:{file:b.file}}),b.file.upload.then(function(e){b.file.result=e.data,b.uploadedImage=e.data,b.cancelUpload();var t={message:b.uploadedImage,receiver:a.user,roomId:b.chatRoomId,type:"img"};r.sendChatMessage(t).then(function(e){g(),b.chatList.push(e.data.message),b.messageLoading=!1}).catch(function(e){console.log(e)})})},b.cancelUpload=function(){b.showTempImage=!1,b.tempImageUrl=""},b.uploadSingleImage=function(e,t){b.file=e,b.errFile=t&&t[0],e&&(b.showTempImage=!0,b.tempImageUrl=e,g())},b.leaveChatBox=function(){n.emit("removeFromRoom",{roomId:b.chatRoomId}),r.updateChatRoom(b.chatRoomId).then(function(e){}).catch(function(e){}).finally(function(){}),d.history.back()}}e.module("petal.chat").controller("ChatBoxController",["$scope","$timeout","Socket","$stateParams","userData","homeService","chatService","$ionicScrollDelegate","userService","Upload","$ionicLoading","$window","blocked",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.chat").controller("ChatParentController",[t])}(window.angular),function(e){"use strict";function t(t,o,n,a,s){function i(){u()}function r(e){var t={};t.creator2=e.user,t.newChat=!0,t.lastMessage={user:e.user._id,_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.chatRoomsList.length;o++)if(t.creator2._id==p.chatRoomsList[o].creator2._id&&t.lastMessage._id!==p.chatRoomsList[o].lastMessage._id)return p.chatRoomsList.splice(o,1),void p.chatRoomsList.unshift(t)}function c(){p.params.page+=1,l()}function l(){n.getRevealedChatRooms(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.chatRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.chatRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.chatRoomsList=[],l()}var p=this;p.getRevealedChatRooms=l,p.loadMoreChats=c,p.pullRefreshChats=i,u(),s.on("newMessageReceived",r)}e.module("petal.chat").controller("RevealedChatController",["$scope","$state","chatService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(e,t,o){function n(t){return e.post(o.baseURL+"chatRoom/delete/"+t)}function a(t){return e.post(o.baseURL+"chat/create/"+t.roomId,t)}function s(t,n){return e.get(o.baseURL+"chat/getChats/"+t,{params:n})}function i(t){return e.get(o.baseURL+"chatRoom/get/"+t)}function r(t){return t.revealed=!1,e.get(o.baseURL+"chatRoom/all/",{params:t})}function c(t){return t.revealed=!0,e.get(o.baseURL+"chatRoom/all/",{params:t})}function l(t){return e.post(o.baseURL+"chatRoom/update/"+t)}var u=this;u.sendChatMessage=a,u.getChatMessages=s,u.getChatRoom=i,u.getAllChatRooms=r,u.getRevealedChatRooms=c,u.updateChatRoom=l,u.deleteChatRoom=n}e.module("petal.chat").service("chatService",["$http","$stateParams","homeService",t])}(window.angular),function(e){"use strict";function t(e,t){return e({prefix:"",ioSocket:io.connect(t.baseURL)})}e.module("petal.chat").factory("Socket",["socketFactory","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o){return e({prefix:"",ioSocket:io.connect(o.baseURL+t.getUser()._id)})}e.module("petal.chat").factory("SocketUserService",["socketFactory","userData","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i,r){function c(e){n.setUser(e),a.setUserLocation(),i.register(),e.device_token?o.go("home.post.popular"):o.go("home.userEditPage")}function l(e){s.show(),t.authenticate(e).then(function(e){c(e.data.user)}).catch(function(e){s.hide()}).finally(function(){})}function u(){r.fromTemplateUrl("app/home/views/policy.html",{scope:e}).then(function(t){e.modal=t,e.modal.show()})}function p(){t.logout(),n.removeUser(),o.go("authenticate")}var d=this;d.isAuth=t.isAuthenticated(),d.isAuth&&o.go("home.post.all"),window.cordova&&(d.webSignIn=!0),d.authLogout=p,d.loadPostModal=u,d.socialAuthenticate=l,e.googleSignIn=function(){s.show({template:"Logging in..."}),window.plugins.googleplus.login({webClientId:"792068565007-rdm7nrlfmc29jvlqo5l0tkgu6ci0vboa.apps.googleusercontent.com"},function(e){var o={};o.id=e.userId,o.displayName=e.displayName,o.imageUrl=e.imageUrl,i.googleSignIn(o).then(function(e){t.setToken(e.data.token),c(e.data.user)}).catch(function(e){console.log("error"),console.log(e),s.hide()})},function(e){alert("missed"),console.log(e),s.hide()})}}e.module("petal.home").controller("AuthenticationController",["$scope","$auth","$state","userData","userLocationService","$ionicLoading","RequestsService","$ionicModal",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i){function r(e){var n=e.message;e.type&&"img"==e.type&&(n="New image");var s=e.user.anonName||e.user.facebookName||e.user.googleName;e.user._id==o.getUser()._id||("chatBox"==t.current.name?t.params.user!=e.user._id&&a.info("<p>"+s+"</p><p>"+n+"</p>",{allowHtml:!0,onTap:function(){t.go("chatBox",{user:e.user._id})}}):(a.info("<p>"+s+"</p><p>"+n+"</p>",{allowHtml:!0,onTap:function(){t.go("chatBox",{user:e.user._id})}}),l.badgeValue=1))}function c(){l.badgeValue=""}var l=this;l.badgeValue="",l.chatClicked=c,i.slideHeader=!1,i.slideHeaderPrevious=0,n.on("connect",function(){n.emit("addToSingleRoom",{roomId:o.getUser()._id}),n.on("newMessageReceived",r)}),l.goForward=function(){var e=s.selectedIndex();e!=-1&&(1===e?s.select(e+2):s.select(e+1))},l.goBack=function(){var e=s.selectedIndex();e!==-1&&0!==e&&(3===e?s.select(e-2):s.select(e-1))}}e.module("petal.home").controller("HomeController",["$scope","$state","userData","Socket","toastr","$ionicTabsDelegate","$rootScope",t])}(window.angular),function(e){"use strict";function t(){return{templateUrl:"app/home/views/ionicCustomSpinner.html"}}e.module("petal.home").directive("distanceView",["postService","$timeout",function(e,t){return{restrict:"E",templateUrl:"app/home/views/distanceViewTemplate.html",scope:{positionCords:"="},replace:!0,link:function(o){function n(){o.positionCords?(o.distanceObj={latitude:o.positionCords[1],longitude:o.positionCords[0]},e.getDistance(o.distanceObj).then(function(e){o.distanceObj.distance=e+" mi"}).catch(function(e){o.distanceObj.distance=""})):(o.distanceObj={},o.distanceObj.distance="")}t(n,1e3)}}}]).directive("ionicCustomSpinner",[t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"A",link:function(t,o){o.bind("scroll",function(t){var o=t.srcElement.scrollTop;e.slideHeader=o-0>150,e.slideHeaderPrevious>o-0&&(e.slideHeader=!1),e.slideHeaderPrevious=o-0,e.$apply()})}}}var o=function(e){return{restrict:"A",scope:{imageModal:"@"},link:function(t,o){function n(e){a().then(function(){t.currentImage=e,t.modal.show()})}function a(){return e.fromTemplateUrl("app/chat/views/chatImageModal.html",{scope:t}).then(function(e){t.modal=e})}o.bind("click",function(e){n(t.imageModal),e.stopPropagation()})}}};e.module("petal.home").directive("keepScroll",["$state","$timeout","ScrollPositions","$ionicScrollDelegate",function(e,t,o,n){return{restrict:"A",link:function(a){a.$on("$stateChangeStart",function(){o[e.current.name]=n.getScrollPosition()}),t(function(){var t;(t=o[e.current.name])&&n.scrollTo(t.left,t.top)})}}}]).factory("ScrollPositions",[function(){return{}}]).directive("isFocused",["$timeout",function(e){return{scope:{trigger:"@isFocused"},link:function(t,o){t.$watch("trigger",function(t){"true"===t&&e(function(){o[0].focus(),o.on("blur",function(){o[0].focus()})})})}}}]).directive("lazyImg",function(){return{replace:!0,template:'<div class="lazy-img"><div class="sm"><img src="{{imgSmall}}" class="small"/></div><div style="padding-bottom: 75%;"></div><img src="{{imgLarge}}" class="large"/></div>',scope:{imgLarge:"@srcLarge",imgSmall:"@srcSmall"},link:function(e,t){var o=new Image,n=new Image;o.src=e.imgSmall,o.onload=function(){t.children(".sm").find("img").css("opacity","1"),n.src=e.imgLarge,n.onload=function(){t.find("img").css("opacity","1")}}}}}).directive("imageModal",["$ionicModal",o]).directive("watchScroll",["$rootScope",t])}(window.angular),function(e){"use strict";function t(e,t){function o(t){return e.post(s.baseURL+"upload/deleteUpload",{data:{public_id:t}})}function n(t){return console.log(t),e.get(s.baseURL+"upload/getImages",{params:{imageText:t}})}function a(e){return t.upload({url:s.baseURL+"upload/singleUploadId",data:{file:e}})}this.baseURL="https://petalchat-imanjithreddy.c9users.io/",this.deleteUpload=o,this.submitUpload=a,this.getImages=n;var s=this}e.module("petal.home").service("homeService",["$http","Upload",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s){function i(){var e=o.defer(),i={android:{senderID:"679461840115",vibrate:"true"},browser:{},ios:{alert:"true",badge:"true",sound:"true"},windows:{}};return a.initialize(i).then(function(){a.onNotification(function(){console.log("insideeee notification"),console.log(arguments)}),a.onError(),s.isAuthenticated()&&a.register().then(function(o){t.post(c+"notification/register",{device_token:o}).then(function(t){e.resolve(t)}).catch(function(t){e.reject(t)}).finally(function(){n.hide()})})}),e.promise}function r(e){return t.post(c+"authenticate/auth/nativeGoogle",{profile:e})}var c=e.baseURL;return{googleSignIn:r,register:i}}e.module("petal.home").service("RequestsService",["homeService","$http","$q","$ionicLoading","$cordovaPushV5","$auth",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){var s=e.localStorage,i={},r={setUser:function(e){if(e)s.setItem("user",JSON.stringify(e));else{var t=o.getPayload().sub;if(t)return n.get(a.baseURL+"user/get/"+t).then(function(e){s.setItem("user",JSON.stringify(e.data))})}},getUser:function(){return JSON.parse(s.getItem("user"))},removeUser:function(){i=null,s.removeItem("user")},isUserExists:function(){return!!r.getUser()}};return r}e.module("petal.home").factory("userData",["$window","$state","$auth","$http","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a,s,i,r,c,l,u,p,d,f){function m(){b.params.page+=1,v()}function h(){l.getUser(b.receiverUserID).then(function(e){b.receiverUser=e.data}).catch(function(e){console.log(e)})}function g(){o(function(){c.scrollBottom(!0)})}function v(){r.getMessages(b.messageRoomId,b.params).then(function(t){e.forEach(t.data.docs,function(e){b.messageList.unshift(e)})}).catch(function(e){console.log(e)}).finally(function(){g(),t.$broadcast("scroll.refreshComplete"),p.hide()})}function w(){n.emit("addToMessagetRoom",{roomId:b.messageRoomId}),n.on("roomMessageReceived",function(e){b.messageList.push(e),g(),b.messageLoading=!1})}var b=this;b.isBlocked=f,b.currentUser=s.getUser()._id,b.messageList=[],b.messageRoomId="",b.loadMoreMessages=m,b.scrollBottom=g,b.messageLoading=!1,b.params={page:1,limit:5},function(){p.show(),r.getMessageRoom(b.receiverUserID).then(function(e){b.messageRoom=e.data,b.messageRoomId=e.data._id,w(),v()},function(e){console.log(e)}),h()}(),b.clickSubmit=function(e){b.messageLoading=!0,b.focusInput=!0,window.cordova&&(window.cordova.plugins.Keyboard.show(),window.cordova.plugins.Keyboard.isVisible=!0),g();var t={message:b.myMsg,receiver:a.user,roomId:b.messageRoomId};r.sendMessage(t).then(function(e){b.myMsg="",b.messageList.push(e.data.message),g(),b.messageTryCount=0}).catch(function(e){b.messageTryCount+=1,b.messageTryCount<=3&&b.clickSubmit()}).finally(function(){b.messageLoading=!1}),e.preventDefault()},b.submitUpload=function(){b.messageLoading=!0,b.file.upload=u.upload({url:i.baseURL+"upload/singleUpload",data:{file:b.file}}),b.file.upload.then(function(e){b.file.result=e.data,b.uploadedImage=e.data,b.cancelUpload();var t={message:b.uploadedImage,receiver:a.user,roomId:b.messageRoomId,type:"img"};r.sendMessage(t).then(function(e){g(),b.messageList.push(e.data.message),b.messageLoading=!1}).catch(function(e){console.log(e)})})},b.cancelUpload=function(){b.showTempImage=!1,b.tempImageUrl=""},b.uploadSingleImage=function(e,t){b.file=e,b.errFile=t&&t[0],e&&(b.showTempImage=!0,b.tempImageUrl=e,g())},b.leaveMessageRoom=function(){n.emit("removeFromMessageRoom",{roomId:b.messageRoomId}),d.history.back()}}e.module("petal.message").controller("MessageRoomController",["$scope","$timeout","Socket","$stateParams","userData","homeService","messageRoomService","$ionicScrollDelegate","userService","Upload","$ionicLoading","$window","blocked",t])}(window.angular),function(e){"use strict";function t(t,o,n,a,s){function i(e){var t={};t.newMessage=!0,t.lastMessage={_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.messageRoomsList.length;o++)if(t.creator2._id==p.messageRoomsList[o].creator2._id&&t.lastMessage._id!==p.messageRoomsList[o].lastMessage._id)return p.messageRoomsList.splice(o,1),void p.messageRoomsList.unshift(t)}function r(){u()}function c(){p.params.page+=1,l()}function l(){n.getMessageRooms().then(function(t){e.forEach(t.data.docs,function(e){p.messageRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.messageRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.messageRoomsList=[],l()}var p=this;p.getAllMessageRooms=l,p.loadMoreMessages=c,p.pullRefreshMessages=r,u(),s.on("newRoomMessageReceived",i),p.messageRoomPage=function(e){e.interest?o.go("messageRoomInterest",{interest:e.interest}):o.go("messageRoomPost",{postId:e.post})}}e.module("petal.message").controller("MessageRoomListController",["$scope","$state","messageRoomService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(e,t,o){function n(t){return e.post(o.baseURL+"message/create/"+t.roomId,t)}function a(t,n){return e.get(o.baseURL+"message/getMessages/"+t,{params:n})}function s(t){return e.get(o.baseURL+"messageRoom/getRoom/",{params:t})}function i(){return e.get(o.baseURL+"messageRoom/getRooms/")}var r=this;r.sendMessage=n,r.getMessages=a,r.getMessageRoom=s,r.getMessageRooms=i}e.module("petal.message").service("messageRoomService",["$http","$stateParams","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){u()}function i(){p.peopleSearchText="",p.showSearchCross=!1,u()}function r(e){p.showSearchCross=!0,e&&(p.peopleSearchText=e),u()}function c(){p.params.page+=1,l()}function l(){n.getAllUsers(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.peopleList.push(e)}),p.initialSearchCompleted=!0,t.data.total>p.peopleList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.peopleList=[],p.params={limit:25,page:1},p.peopleSearchText&&(p.params.interest=p.peopleSearchText),l()}var p=this;p.getAllPeople=l,p.pullRefreshPeople=s,p.loadMorePeople=c,p.searchCrossSubmit=i,p.peopleSearchTextSubmit=r,u()}e.module("petal.people").controller("AllPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){l()}function i(){u.params.page+=1,c()}function r(){l()}function c(){n.getNearbyUsers(u.params).then(function(o){e.forEach(o.data.docs,function(e){u.peopleList.push(e)}),u.noPeople=!o.data.total,u.initialSearchCompleted=!0,o.data.total>u.peopleList.length?u.canLoadMoreResults=!0:u.canLoadMoreResults=!1,t.$broadcast("scroll.infiniteScrollComplete")}).catch(function(e){console.log(e)}).finally(function(){u.initialSearchCompleted=!0,t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function l(){u.canLoadMoreResults=!1,u.initialSearchCompleted=!1,u.peopleList=[],u.params={limit:25,page:1,distance:u.distance},c()}var u=this;u.getNearbyPeople=c,u.pullRefreshPeople=s,u.loadMorePeople=i,u.releaseRange=r,u.distance=10,l()}e.module("petal.people").controller("NearbyPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.people").controller("PeopleParentController",[t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getReceivedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.noPeople=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:10,page:1},r()}var l=this;l.getReceivedPeople=r,l.pullRefreshPeople=s,l.loadMorePeople=i,c()}e.module("petal.people").controller("ReceivedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getRequestedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:25,page:1},r()}var l=this;l.getRequestedPeople=r,l.pullRefreshPeople=s,l.loadMorePeople=i,c()}e.module("petal.people").controller("RequestedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getRevealedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.noPeople=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:25,page:1},r()}var l=this;l.getRevealedPeople=r,l.pullRefreshPeople=s,l.loadMorePeople=i,c()}e.module("petal.people").controller("RevealedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"E",templateUrl:"app/people/views/peopleListTemplate.html",replace:!0,scope:{listType:"@listType",peopleList:"=peopleList",peopleSearchTextSubmit:"&peopleSearchTextSubmit"},controller:["$scope",function(t){t.currentUser=e.getUser(),t.setPeopleSearch=function(e,o){t.peopleSearchTextSubmit&&(t.peopleSearchTextSubmit({interest:e}),o.stopPropagation())},t.removeAfterDecided=function(e){t.peopleList.splice(e,1)}}]}}e.module("petal.people").directive("peopleList",["userData",t])}(window.angular),function(e){"use strict";function t(t,o){return{restrict:"E",templateUrl:"app/people/views/receivedPeopleList.html",replace:!0,controllerAs:"rpc",scope:{},controller:["$scope",function(n){function a(){t.getReceivedUsers(i.params).then(function(t){e.forEach(t.data.docs,function(e){i.peopleList.push(e)}),i.noPeople=!t.data.total,i.initialSearchCompleted=!0,t.data.total>i.peopleList.length?i.canLoadMoreResults=!0:i.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){n.$broadcast("scroll.infiniteScrollComplete"),o.hide()})}function s(){i.params.page+=1,a()}var i=this;i.getReceivedPeople=a,i.loadMorePeople=s,function(){i.canLoadMoreResults=!1,i.initialSearchCompleted=!1,i.peopleList=[],i.params={limit:10,page:1},a()}()}]}}e.module("petal.people").directive("receivedPeopleList",["peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o){return{restrict:"E",templateUrl:"app/people/views/requestedPeopleList.html",replace:!0,controllerAs:"rpc",scope:{},controller:["$scope",function(n){function a(){t.getRequestedUsers(i.params).then(function(t){e.forEach(t.data.docs,function(e){i.peopleList.push(e)}),i.noPeople=!t.data.total,i.initialSearchCompleted=!0,t.data.total>i.peopleList.length?i.canLoadMoreResults=!0:i.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){n.$broadcast("scroll.infiniteScrollComplete"),o.hide()})}function s(){i.params.page+=1,a()}var i=this;i.getRequestedPeople=a,i.loadMorePeople=s,function(){i.canLoadMoreResults=!1,i.initialSearchCompleted=!1,i.peopleList=[],i.params={limit:10,page:1},a()}()}]}}e.module("petal.people").directive("requestedPeopleList",["peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o){return{restrict:"A",scope:{deleteChat:"@",afterCallback:"&"},link:function(n,a){a.bind("click",function(a){e.show({titleText:"Delete ",buttons:[{
text:'<i class="icon ion-share"></i> Delete Chat '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.deleteChatRoom(n.deleteChat).then(function(e){n.afterCallback&&n.afterCallback(),window.alert(e.data),o.go("home.chat.all")}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),a.stopPropagation()})}}}function o(e){return{scope:{userBlock:"@",chatDelete:"@",blockId:"@"},link:function(t,o){t.userBlock="true"===t.userBlock,t.afterCallback=function(){t.popover.remove(),window.history.back()},o.bind("click",function(o){e.fromTemplateUrl("app/user/views/settingsTemplate.html",{scope:t}).then(function(e){t.popover=e,t.popover.show(o)}),o.stopPropagation()})}}}function n(e){return{scope:{chatPage:"@"},link:function(t,o){o.bind("click",function(o){e.go("chatBox",{user:t.chatPage}),o.stopPropagation()})}}}function a(e){return{scope:{userPage:"@"},link:function(t,o){o.bind("click",function(o){e.go("home.userPage",{user:t.userPage}),o.stopPropagation()})}}}function s(e,t){return{restrict:"A",scope:{afterCallback:"&",cancelReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Cancel Reveal Request'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.cancel(o.cancelReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function i(e,t){return{restrict:"A",scope:{afterCallback:"&",decideReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Accept Reveal Request'},{text:'<i class="icon ion-share"></i> Deny Reveal Request'}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e?t.accept(o.decideReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}):1===e&&t.ignore(o.decideReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function r(e,t){return{restrict:"A",scope:{afterCallback:"&",deleteReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Delete Reveal '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.finish(o.deleteReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function c(e,t){return{restrict:"A",scope:{afterCallback:"&",sendReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Send Reveal Request'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.initiate(o.sendReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function l(e,t){return{restrict:"A",scope:{createBlock:"@",afterCallback:"&"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Block User",buttons:[{text:'<i class="icon ion-share"></i> Block'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.create(o.createBlock).then(function(e){window.alert("user blocked"),o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function u(e,t){return{restrict:"A",scope:{afterCallback:"&",deleteBlock:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Block",buttons:[{text:'<i class="icon ion-share"></i> Unblock User '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.remove(o.deleteBlock).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}e.module("petal.people").directive("cancelReveal",["$ionicActionSheet","revealService",s]).directive("decideReveal",["$ionicActionSheet","revealService",i]).directive("deleteReveal",["$ionicActionSheet","revealService",r]).directive("sendReveal",["$ionicActionSheet","revealService",c]).directive("createBlock",["$ionicActionSheet","blockService",l]).directive("deleteBlock",["$ionicActionSheet","blockService",u]).directive("deleteChat",["$ionicActionSheet","chatService","$state",t]).directive("chatPage",["$state",n]).directive("userSettings",["$ionicPopover",o]).directive("userPage",["$state",a])}(window.angular),function(e){"use strict";function t(e,t,o,n){function a(o){return o.all=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function s(o){return o.revealed=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function i(o){return o.received=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function r(o){return o.requested=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function c(o,n){e.get(t.baseURL+"user/getUsers",{params:n}).then(function(e){o.resolve(e)}).catch(function(e){o.reject(e)})}function l(a){1==a.page&&o.setUserLocation(),a.nearby=!0;var s=n.defer();return o.getUserLocation().then(function(o){a.latitude=o.latitude,a.longitude=o.longitude,e.get(t.baseURL+"user/getUsers",{params:a}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}).catch(function(e){window.console.log(e),c(s,a)}),s.promise}this.getAllUsers=a,this.getRevealedUsers=s,this.getNearbyUsers=l,this.getRequestedUsers=r,this.getReceivedUsers=i,this.getNearbyUsers=l}e.module("petal.people").service("peopleService",["$http","homeService","userLocationService","$q",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.get(t.baseURL+"upvote/get/"+o)}function n(o){return e.post(t.baseURL+"upvote/create/"+o)}function a(o){return e.post(t.baseURL+"upvote/delete/"+o)}this.createUpvote=n,this.deleteUpvote=a,this.getUpvote=o}e.module("petal.post").service("upvoteService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){u()}function i(){p.postSearchText="",p.showSearchCross=!1,u()}function r(e){p.showSearchCross=!0,e&&(p.postSearchText=e),p.postSearchText&&u()}function c(){p.params.page+=1,l()}function l(){p.noPosts=!1,n.getAllPosts(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.postsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.postsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).catch(function(e){}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.postsList=[],p.params={limit:5,page:1},p.postSearchText&&(p.params.interest=p.postSearchText),l()}var p=this;p.getAllPosts=l,p.pullRefreshPosts=s,p.loadMorePosts=c,p.postSearchTextSubmit=r,p.searchCrossSubmit=i,p.params={limit:3,page:1},u()}e.module("petal.post").controller("AllPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){function s(){n.show(),o.submitPost(i.post).then(function(e){n.hide(),t.go("home.post.latest")}).catch(function(e){console.log("post controller error"),console.log(e)}).finally(function(){n.hide()})}var i=this;i.submitPost=s,i.post={},n.hide(),i.goBack=function(){window.history.back()},e.$watch(function(){return i.post.content},function(e,t){e&&e.length>300&&(i.post.content=t)}),i.selectRandomImage=function(e){i.post.image=e},i.loadRandomImages=function(e){i.loadingRandomImage=!0,i.randomImages=[],a.getImages(e).then(function(e){i.randomImages=e.data,i.loadingRandomImage=!1}).catch(function(e){console.log("images err"),console.log(e)})},i.cancelUpload=function(){i.post.imageId&&a.deleteUpload(i.post.imageId).then(function(e){i.post.image="",i.post.imageId=""})},i.submitUpload=function(e,t){i.post.imageId&&i.cancelUpload(),i.loadingImage=!0,i.file=e,i.errFile=t&&t[0],i.file&&a.submitUpload(i.file).then(function(e){i.post.image=e.data.image,i.post.imageId=e.data.imageId,i.loadingImage=!1})}}e.module("petal.post").controller("CreatePostController",["$scope","$state","postService","$ionicLoading","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getLatestPosts(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.postsList.push(e)}),l.noPosts=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.postsList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.postsList=[],l.params={limit:3,page:1},r()}var l=this;l.getLatestPosts=r,l.pullRefreshPosts=s,l.loadMorePosts=i,c()}e.module("petal.post").controller("LatestPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){l()}function i(){l()}function r(){u.params.page+=1,c()}function c(){n.getNearbyPosts(u.params).then(function(t){e.forEach(t.data.docs,function(e){u.postsList.push(e)}),u.noPosts=!t.data.total,u.initialSearchCompleted=!0,t.data.total>u.postsList.length?u.canLoadMoreResults=!0:u.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide(),u.initialSearchCompleted=!0})}function l(){u.canLoadMoreResults=!1,u.initialSearchCompleted=!1,u.postsList=[],u.params={limit:10,page:1,distance:u.distance},c()}var u=this;u.getNearbyPosts=c,u.pullRefreshPosts=s,u.loadMorePosts=r,u.releaseRange=i,u.distance=10,l()}e.module("petal.post").controller("NearbyPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getPopularPosts(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.postsList.push(e)}),t.data.total||(l.noPosts=!0),l.initialSearchCompleted=!0,t.data.total>l.postsList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.postsList=[],l.params={limit:3,page:1},r()}var l=this;l.getPopularPosts=r,l.pullRefreshPosts=s,l.loadMorePosts=i,c()}e.module("petal.post").controller("PopularPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e){}e.module("petal.post").controller("PostParentController",["$rootScope",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s){function i(){o.getPost(n.id).then(function(e){p.post=e.data,p.distanceObj={latitude:p.post.loc[1],longitude:p.post.loc[0],diatance:0},u()})}function r(){s.getUpvote(p.currentPost).then(function(e){p.postUpvoted=e.data||!1}).catch(function(e){console.log(e)})}function c(){s.createUpvote(p.currentPost).then(function(e){r()}).catch(function(e){console.log(e)})}function l(){s.deleteUpvote(p.currentPost).then(function(e){r()}).catch(function(e){console.log(e)})}function u(){o.getDistance(p.distanceObj)}var p=this;p.getSinglePost=i,p.submitPostUpvote=c,p.deletePostUpvote=l,p.getPostDistance=u,p.back=function(){window.history.back()},function(){p.currentPost=n.id,i(),r()}()}e.module("petal.post").controller("SinglePostController",["$scope","$state","postService","$stateParams","$ionicHistory","upvoteService",t])}(window.angular),function(e){"use strict";function t(t,o){return{restrict:"A",scope:{postSearchModal:"@"},link:function(n,a){function s(){n.postSearchData.postsList=[];var e={interest:n.postSearchData.postSearchModal,page:1,limit:50};n.getPosts(e)}function i(){return t.fromTemplateUrl("app/post/views/postSearchModal.html",{scope:n}).then(function(e){n.modal=e})}n.postSearchData={},n.postSearchData.postSearchModal=n.postSearchModal,n.postSearchData.postsList=[],n.modalsList=[],n.clickPostSearch=s,n.showPostModal=function(){i().then(function(){n.modal.show()}),n.$on("modal.hidden",function(){n.modal.remove()})},n.getPosts=function(t){o.getAllPosts(t).then(function(t){e.forEach(t.data.docs,function(e){n.postSearchData.postsList.push(e)}),n.postSearchData.noPosts=!t.data.total,n.postSearchData.initialSearchCompleted=!0,t.data.total>n.postSearchData.postsList.length?n.postSearchData.canLoadMoreResults=!0:n.postSearchData.canLoadMoreResults=!1})},a.bind("click",function(e){var t={interest:n.postSearchData.postSearchModal,page:1,limit:50};n.showPostModal(),e.stopPropagation(),n.getPosts(t)})}}}e.module("petal.post").directive("postSearchModal",["$ionicModal","postService",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){return{restrict:"E",templateUrl:"app/post/views/postsListTemplate.html",scope:{postsList:"=postsList",postSearchTextSubmit:"&postSearchTextSubmit"},replace:!0,link:function(o){function n(t){o.modal.hide(),e.go("home.userPage",{user:t})}function s(){return a.fromTemplateUrl("app/post/views/postModal.html",{scope:o}).then(function(e){o.modal=e})}o.getTime=function(e){return moment(e).fromNow()},o.currentUser=t.getUser(),o.setPostSearch=function(e){o.postSearchTextSubmit&&o.postSearchTextSubmit({interest:e})},o.userPage=n,o.postModal={},o.postModal.userPage=n,o.showPostModal=function(e){o.postModal.post=e,o.postModal.post.views+=1,s().then(function(){o.modal.show()}),o.$on("modal.hidden",function(){o.modal.remove()})}}}}e.module("petal.post").directive("postsList",["$state","userData","postService","upvoteService","$ionicModal",t])}(window.angular),function(e){"use strict";function t(e,t,o){return{restrict:"E",templateUrl:"app/post/views/postUpvoteTemplate.html",scope:{postId:"=postId",upvotesLength:"=upvotesLength"},replace:!0,link:function(e){function o(){t.getUpvote(e.postId).then(function(t){e.postUpvoted=t.data,e.loadingUpvote=!1}).catch(function(e){console.log("check error"),console.log(e)})}function n(){e.postUpvoted=!0,t.createUpvote(e.postId).then(function(){e.upvotesLength+=1}).catch(function(e){console.log("submit error"),console.log(e)})}function a(){e.postUpvoted=!1,t.deleteUpvote(e.postId).then(function(){e.upvotesLength-=1}).catch(function(e){window.alert(e)})}e.checkPostUpvote=o,e.submitPostUpvote=n,e.deletePostUpvote=a,function(){e.loadingUpvote=!0,o()}()}}}e.module("petal.post").directive("postUpvote",["$state","upvoteService","$timeout",t])}(window.angular),function(e){"use strict";function t(e,t,o,n){function a(o){return e.get(t.baseURL+"post/getPosts",{params:o})}function s(o,n){e.get(t.baseURL+"post/getPosts",{params:n}).then(function(e){console.log("without position"),o.resolve(e)}).catch(function(e){o.reject(e)})}function i(a){a.nearby=!0;var i=n.defer();return 1==a.page&&o.setUserLocation(),o.getUserLocation().then(function(o){a.latitude=o.latitude,a.longitude=o.longitude,e.get(t.baseURL+"post/getPosts",{params:a}).then(function(e){i.resolve(e)}).catch(function(e){i.reject(e)})}).catch(function(e){window.console.log(e),s(i,a)}),i.promise}function r(o){return o.sort="-time",e.get(t.baseURL+"post/getPosts",{params:o})}function c(o){return o.sort="-upvotesLength",e.get(t.baseURL+"post/getPosts",{params:o})}function l(a){var s=n.defer();return console.log("entered submit post"),o.getUserLocation().then(function(o){a.latitude=o.latitude,a.longitude=o.longitude,e.post(t.baseURL+"post/create",{post:a}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}).catch(function(o){e.post(t.baseURL+"post/create",{post:a}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}),s.promise}function u(o){return e.delete(t.baseURL+"post/delete/"+o)}function p(o){return e.get(t.baseURL+"post/get/"+o)}function d(e){var t=n.defer(),a=e.latitude,s=e.longitude;return o.getUserLocation().then(function(e){var o=e.latitude,n=e.longitude,i=f(o-a),r=f(n-s),c=Math.sin(i/2)*Math.sin(i/2)+Math.cos(f(a))*Math.cos(f(o))*Math.sin(r/2)*Math.sin(r/2),l=2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),u=6371*l;t.resolve(Math.ceil(u))}).catch(function(e){console.log(e)}),t.promise}function f(e){return e*(Math.PI/180)}this.getAllPosts=a,this.getNearbyPosts=i,this.getLatestPosts=r,this.getPopularPosts=c,this.submitPost=l,this.deletePost=u,this.getPost=p,this.getDistance=d}e.module("petal.post").service("postService",["$http","homeService","userLocationService","$q",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i){function r(){l.user=n.getUser(),e.editForm.user=l.user,l.user.interests.length&&(e.editForm.user.interests="!"+l.user.interests.join("!"))}function c(){i.hide(),e.editForm={},r()}var l=this;l.activate=c,c(),e.editForm.submitUser=function(){i.show(),a.updateUser(e.editForm.user).then(function(e){window.alert("updated user"),t.go("home.user.userMePage")}).catch(function(e){}).finally(function(){n.setUser(),i.hide()})},e.editForm.uploadUserPicture=function(t,n){e.loadingImage=!0,l.file=t,l.errFile=n&&n[0],t&&(l.file.upload=s.upload({url:o.baseURL+"upload/singleUpload",data:{file:l.file}}),l.file.upload.then(function(t){l.file.result=t.data,e.editForm.user.picture=t.data,e.loadingImage=!1}))}}e.module("petal.user").controller("UserEditPageController",["$scope","$state","homeService","userData","userService","Upload","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i,r){function c(e){i.open("https://www.facebook.com/"+e,"_system")}function l(){n.setUser().then(function(){w.user=n.getUser()}).catch(function(e){window.console.log(e)}).finally(function(){r.hide()})}function u(){w.params={page:1,limit:100,user:n.getUser()._id},s.getLatestPosts(w.params).then(function(e){w.postsList=e.data.docs})}function p(e){w.activeTab=e}function d(e){return e===w.activeTab}function f(e){w.subActiveTab=e}function m(e){return e===w.subActiveTab}function h(){o.logout(),t.go("authenticate")}function g(){l(),v(),e.$broadcast("scroll.refreshComplete"),u()}function v(){a.getRequestedUsers({page:1,limit:25}).then(function(e){w.peopleList=e.data.docs,w.total=e.data.total})}var w=this;w.logout=h,w.activate=g,w.activeTab=1,w.activateTab=p,w.isTabActive=d,w.subActiveTab=1,w.subActivateTab=f,w.isSubTabActive=m,w.openFacebook=c,g()}e.module("petal.user").controller("UserMePageController",["$scope","$state","$auth","userData","peopleService","postService","$window","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i,r,c){function l(e){r.open("https://www.facebook.com/"+e,"_system")}function u(e){r.open("https://plus.google.com/"+e,"_system")}function p(){v.params={page:1,limit:100,user:a.user},i.getLatestPosts(v.params).then(function(e){v.postsList=e.data.docs})}function d(e){v.activeTab=e}function f(e){return e===v.activeTab}function m(){n.check(a.user).then(function(e){v.revealChoice=e.data.status})}function h(){r.history.back()}function g(){o.getUser(a.user).then(function(e){v.user=e.data}).catch(function(e){}).finally(function(){c.hide()})}var v=this;v.checkReveal=m,v.goBack=h,v.activateTab=d,v.isTabActive=f,v.openFacebook=l,v.openGoogle=u,function(){g(),v.revealChoice=s,v.activeTab=1,p()}()}e.module("petal.user").controller("UserPageController",["$state","$auth","userService","revealService","$stateParams","friends","postService","$window","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o){alert(o)}e.module("petal.user").controller("UserPagePostsController",["$state","$stateParams","friends",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.user").controller("UserParentController",[t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"E",replace:!0,templateUrl:"app/user/views/blockedList.html",link:function(t){t.afterCallback=function(e){t.peopleList.splice(e,1)},e.getBlocks().then(function(e){window.console.log(e),t.peopleList=e.data})}}}e.module("petal.user").directive("blockedList",["blockService",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.post(t.baseURL+"block/create",{secondUser:o})}function n(o){return e.post(t.baseURL+"block/delete",{secondUser:o})}function a(o){return e.get(t.baseURL+"block/get/"+o)}function s(){return e.get(t.baseURL+"block/getBlocks/")}this.create=o,this.remove=n,this.getBlocks=s,this.check=a}e.module("petal.user").service("blockService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(e,t){function o(e){return{secondUser:e}}function n(o){return e.post(t.baseURL+"reveal/initiate",{secondUser:o})}function a(o){return e.post(t.baseURL+"reveal/accept",{secondUser:o})}function s(o){return e.post(t.baseURL+"reveal/ignore",{secondUser:o})}function i(o){return e.post(t.baseURL+"reveal/cancel",{secondUser:o})}function r(n){var a=o(n);return e.get(t.baseURL+"reveal/received",{params:a})}function c(n){var a=o(n);return e.get(t.baseURL+"reveal/requested",{params:a})}function l(n){var a=o(n);return e.get(t.baseURL+"reveal/revealed",{params:a})}function u(o){return e.post(t.baseURL+"reveal/finish",{secondUser:o})}function p(n){var a=o(n);return e.get(t.baseURL+"reveal/check",{params:a})}this.initiate=n,this.accept=a,this.ignore=s,this.cancel=i,this.received=r,this.requested=c,this.revealed=l,this.finish=u,this.check=p}e.module("petal.user").service("revealService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){function s(){var t=o.defer(),a={timeout:3e3,enableHighAccuracy:!1};return e.getCurrentPosition(a).then(function(e){var o={latitude:e.coords.latitude,longitude:e.coords.longitude};t.resolve(o)}).catch(function(){n.post("https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyA5bqvCp1wYX7FGKiDyd3w0DzvJZoPwQrQ").then(function(e){var o={latitude:e.data.location.lat,longitude:e.data.location.lng};t.resolve(o)}).catch(function(e){window.console.log("error from google"),window.console.log(e),t.reject("Not able to acces your location.Make sure location is enabled.")})}),t.promise}function i(){var o={timeout:3e3,enableHighAccuracy:!1};e.getCurrentPosition(o).then(function(e){var o={latitude:e.coords.latitude,longitude:e.coords.longitude};t.updateUser(o)}).catch(function(e){n.post("https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyA5bqvCp1wYX7FGKiDyd3w0DzvJZoPwQrQ").then(function(e){var o={latitude:e.data.location.lat,longitude:e.data.location.lng};t.updateUser(o)}).catch(function(){3==e.code?a.warning("Not able to acces your location.Make sure location is enabled.","Warning",{maxOpened:1}):2!=e.code&&1!=e.code||a.warning("Not able to acces your location.Make sure location is enabled.","Warning",{maxOpened:1})})})}this.getUserLocation=s,this.setUserLocation=i}e.module("petal.user").service("userLocationService",["$cordovaGeolocation","userService","$q","$http","toastr",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.get(t.baseURL+"user/get/"+o)}function n(o){return e.post(t.baseURL+"user/update/",{user:o})}this.updateUser=n,this.getUser=o}e.module("petal.user").service("userService",["$http","homeService",t])}(window.angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5tb2R1bGUuanMiLCJjaGF0L2NoYXRNb2R1bGUuanMiLCJob21lL2hvbWVNb2R1bGUuanMiLCJtZXNzYWdlL21lc3NhZ2VNb2R1bGUuanMiLCJwZW9wbGUvcGVvcGxlTW9kdWxlLmpzIiwicG9zdC9wb3N0TW9kdWxlLmpzIiwidXNlci91c2VyTW9kdWxlLmpzIiwiY2hhdC9jb250cm9sbGVyL2FsbENoYXRDb250cm9sbGVyLmpzIiwiY2hhdC9jb250cm9sbGVyL2NoYXRCb3hDb250cm9sbGVyLmpzIiwiY2hhdC9jb250cm9sbGVyL2NoYXRQYXJlbnRDb250cm9sbGVyLmpzIiwiY2hhdC9jb250cm9sbGVyL3JldmVhbGVkQ2hhdENvbnRyb2xsZXIuanMiLCJjaGF0L3NlcnZpY2UvY2hhdFNlcnZpY2UuanMiLCJjaGF0L3NlcnZpY2Uvc29ja2V0LmpzIiwiY2hhdC9zZXJ2aWNlL3NvY2tldFVzZXJTZXJ2aWNlLmpzIiwiaG9tZS9jb250cm9sbGVyL2F1dGhlbnRpY2F0aW9uQ29udHJvbGxlci5qcyIsImhvbWUvY29udHJvbGxlci9ob21lQ29udHJvbGxlci5qcyIsImhvbWUvZGlyZWN0aXZlL2Rpc3RhbmNlVmlld0RpcmVjdGl2ZS5qcyIsImhvbWUvZGlyZWN0aXZlL2tlZXBTY3JvbGxEaXJlY3RpdmUuanMiLCJob21lL3NlcnZpY2UvaG9tZVNlcnZpY2UuanMiLCJob21lL3NlcnZpY2Uvbm90aWZpY2F0aW9uU2VydmljZS5qcyIsImhvbWUvc2VydmljZS91c2VyZGF0YS5qcyIsIm1lc3NhZ2UvY29udHJvbGxlci9tZXNzYWdlUm9vbUNvbnRyb2xsZXIuanMiLCJtZXNzYWdlL2NvbnRyb2xsZXIvbWVzc2FnZVJvb21MaXN0Q29udHJvbGxlci5qcyIsIm1lc3NhZ2Uvc2VydmljZS9tZXNzYWdlUm9vbVNlcnZpY2UuanMiLCJwZW9wbGUvY29udHJvbGxlci9hbGxQZW9wbGVDb250cm9sbGVyLmpzIiwicGVvcGxlL2NvbnRyb2xsZXIvbmVhcmJ5UGVvcGxlQ29udHJvbGxlci5qcyIsInBlb3BsZS9jb250cm9sbGVyL3Blb3BsZVBhcmVudENvbnRyb2xsZXIuanMiLCJwZW9wbGUvY29udHJvbGxlci9yZWNlaXZlZFBlb3BsZUNvbnRyb2xsZXIuanMiLCJwZW9wbGUvY29udHJvbGxlci9yZXF1ZXN0ZWRQZW9wbGVDb250cm9sbGVyLmpzIiwicGVvcGxlL2NvbnRyb2xsZXIvcmV2ZWFsZWRQZW9wbGVDb250cm9sbGVyLmpzIiwicGVvcGxlL2RpcmVjdGl2ZS9wZW9wbGVMaXN0RGlyZWN0aXZlLmpzIiwicGVvcGxlL2RpcmVjdGl2ZS9yZWNlaXZlZFBlb3BsZUxpc3QuanMiLCJwZW9wbGUvZGlyZWN0aXZlL3JlcXVlc3RlZFBlb3BsZUxpc3QuanMiLCJwZW9wbGUvZGlyZWN0aXZlL3JldmVhbERpcmVjdGl2ZS5qcyIsInBlb3BsZS9zZXJ2aWNlL3Blb3BsZVNlcnZpY2UuanMiLCJwZW9wbGUvc2VydmljZS91cHZvdGVTZXJ2aWNlLmpzIiwicG9zdC9jb250cm9sbGVyL2FsbFBvc3RDb250cm9sbGVyLmpzIiwicG9zdC9jb250cm9sbGVyL2NyZWF0ZVBvc3RDb250cm9sbGVyLmpzIiwicG9zdC9jb250cm9sbGVyL2xhdGVzdFBvc3RDb250cm9sbGVyLmpzIiwicG9zdC9jb250cm9sbGVyL25lYXJieVBvc3RDb250cm9sbGVyLmpzIiwicG9zdC9jb250cm9sbGVyL3BvcHVsYXJQb3N0Q29udHJvbGxlci5qcyIsInBvc3QvY29udHJvbGxlci9wb3N0UGFyZW50Q29udHJvbGxlci5qcyIsInBvc3QvY29udHJvbGxlci9zaW5nbGVQb3N0Q29udHJvbGxlci5qcyIsInBvc3QvZGlyZWN0aXZlL3Bvc3RTZWFyY2hNb2RhbC5qcyIsInBvc3QvZGlyZWN0aXZlL3Bvc3RzTGlzdERpcmVjdGl2ZS5qcyIsInBvc3QvZGlyZWN0aXZlL3Bvc3RVcHZvdGVEaXJlY3RpdmUuanMiLCJwb3N0L3NlcnZpY2UvcG9zdFNlcnZpY2UuanMiLCJ1c2VyL2NvbnRyb2xsZXIvdXNlckVkaXRQYWdlQ29udHJvbGxlci5qcyIsInVzZXIvY29udHJvbGxlci91c2VyTWVQYWdlQ29udHJvbGxlci5qcyIsInVzZXIvY29udHJvbGxlci91c2VyUGFnZUNvbnRyb2xsZXIuanMiLCJ1c2VyL2NvbnRyb2xsZXIvdXNlclBhZ2VQb3N0c0NvbnRyb2xsZXIuanMiLCJ1c2VyL2NvbnRyb2xsZXIvdXNlclBhcmVudENvbnRyb2xsZXIuanMiLCJ1c2VyL2RpcmVjdGl2ZS9ibG9ja2VkTGlzdERpcmVjdGl2ZS5qcyIsInVzZXIvc2VydmljZS9ibG9ja1NlcnZpY2UuanMiLCJ1c2VyL3NlcnZpY2UvcmV2ZWFsU2VydmljZS5qcyIsInVzZXIvc2VydmljZS91c2VyTG9jYXRpb25TZXJ2aWNlLmpzIiwidXNlci9zZXJ2aWNlL3VzZXJTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJjb25maWdGdW5jdGlvbiIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRzdGF0ZVByb3ZpZGVyIiwiJGlvbmljQ29uZmlnUHJvdmlkZXIiLCJ0b2FzdHJDb25maWciLCJ0YWJzIiwicG9zaXRpb24iLCJzY3JvbGxpbmciLCJqc1Njcm9sbGluZyIsInZpZXdzIiwidHJhbnNpdGlvbiIsIm90aGVyd2lzZSIsImV4dGVuZCIsImF1dG9EaXNtaXNzIiwibWF4T3BlbmVkIiwiYXBwIiwibW9kdWxlIiwiY29uZmlnIiwicnVuIiwiJHJvb3RTY29wZSIsIiRzdGF0ZSIsIiRpb25pY1BsYXRmb3JtIiwiJGlvbmljTG9hZGluZyIsIlJlcXVlc3RzU2VydmljZSIsIiRjb3Jkb3ZhUHVzaFY1IiwiJGlvbmljSGlzdG9yeSIsImJhY2tCdXR0b25FeGl0IiwicmVnaXN0ZXJCYWNrQnV0dG9uQWN0aW9uIiwiZSIsImJhY2tCdXR0b25QcmVzc2VkT25jZVRvRXhpdCIsImlvbmljIiwiUGxhdGZvcm0iLCJleGl0QXBwIiwiYmFja1ZpZXciLCJnb0JhY2siLCJ3aW5kb3ciLCJwbHVnaW5zIiwidG9hc3QiLCJzaG93U2hvcnRDZW50ZXIiLCJhIiwiYiIsInNldFRpbWVvdXQiLCJwcmV2ZW50RGVmYXVsdCIsIm5vdGlmaWNhdGlvbkZ1bmN0aW9uIiwicmVnaXN0ZXIiLCIkb24iLCJldmVudCIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwicmVhZHkiLCJjb3Jkb3ZhIiwiS2V5Ym9hcmQiLCJoaWRlS2V5Ym9hcmRBY2Nlc3NvcnlCYXIiLCJkaXNhYmxlU2Nyb2xsIiwiU3RhdHVzQmFyIiwic3R5bGVEZWZhdWx0Iiwib25lcnJvciIsImVycm9yTXNnIiwidXJsIiwibGluZU51bWJlciIsImdvIiwiaGlkZSIsInN0YXRlIiwiYWJzdHJhY3QiLCJjaGF0LXRhYiIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsImNvbnRyb2xsZXJBcyIsInJlc29sdmUiLCJibG9ja2VkIiwiJHN0YXRlUGFyYW1zIiwiYmxvY2tTZXJ2aWNlIiwiJHEiLCJkZWZlciIsImNoZWNrIiwidXNlciIsInRoZW4iLCJyZXNwb25zZSIsImNhdGNoIiwicHJvbWlzZSIsIiRhdXRoUHJvdmlkZXIiLCJhdXRoZW50aWNhdGVVcmwiLCJyZWRpcmVjdFVybDIiLCJmYWNlYm9vayIsImNsaWVudElkIiwicmVkaXJlY3RVcmkiLCJnb29nbGUiLCJyZWRpcmVjdElmVXNlck5vdEF1dGhlbnRpY2F0ZWQiLCIkYXV0aCIsIiR0aW1lb3V0IiwiaXNBdXRoZW50aWNhdGVkIiwibWVzc2FnZVJvb20iLCJtZXNzYWdlUm9vbVNlcnZpY2UiLCJwYXJhbXMiLCJwb3N0SWQiLCJpbnRlcmVzdCIsImdldE1lc3NhZ2VSb29tIiwiZm91bmRNZXNzYWdlUm9vbSIsInBlb3BsZS10YWIiLCJwb3N0LXRhYiIsImFsZXJ0IiwiaGlzdG9yeSIsImJhY2siLCJmcmllbmRzIiwicmV2ZWFsU2VydmljZSIsInN0YXR1cyIsInVzZXItdGFiIiwiZXh0cmEtdGFiIiwiQWxsQ2hhdENvbnRyb2xsZXIiLCIkc2NvcGUiLCJjaGF0U2VydmljZSIsIlNvY2tldCIsIm1lc3NhZ2VSZWNlaXZlZCIsIm1lc3NhZ2UiLCJuZXdDaGF0Um9vbSIsImNyZWF0b3IyIiwibmV3Q2hhdCIsImxhc3RNZXNzYWdlIiwiX2lkIiwidHlwZSIsImNoIiwiYWNjIiwiY2hhdFJvb21zTGlzdCIsImxlbmd0aCIsInNwbGljZSIsInVuc2hpZnQiLCJwdWxsUmVmcmVzaENoYXRzIiwiYWN0aXZhdGUiLCJsb2FkTW9yZUNoYXRzIiwicGFnZSIsImdldEFsbENoYXRSb29tcyIsImZvckVhY2giLCJkb2NzIiwidmFsdWUiLCJwdXNoIiwibm9Qb3N0cyIsInRvdGFsIiwiaW5pdGlhbFNlYXJjaENvbXBsZXRlZCIsImNhbkxvYWRNb3JlUmVzdWx0cyIsImZpbmFsbHkiLCIkYnJvYWRjYXN0IiwibGltaXQiLCJ0aGlzIiwib24iLCJjaGF0UGFnZSIsInVzZXJJZCIsIkNoYXRCb3hDb250cm9sbGVyIiwidXNlckRhdGEiLCJob21lU2VydmljZSIsIiRpb25pY1Njcm9sbERlbGVnYXRlIiwidXNlclNlcnZpY2UiLCJVcGxvYWQiLCIkd2luZG93IiwiY2JjIiwiZ2V0Q2hhdE1lc3NhZ2VzIiwiZ2V0UmVjZWl2ZXIiLCJnZXRVc2VyIiwicmVjZWl2ZXJVc2VySUQiLCJyZWNlaXZlclVzZXIiLCJlcnIiLCJzY3JvbGxCb3R0b20iLCJjaGF0Um9vbUlkIiwicmVzIiwiY2hhdCIsImNoYXRMaXN0Iiwic29ja2V0Sm9pbiIsImVtaXQiLCJyb29tSWQiLCJtZXNzYWdlTG9hZGluZyIsImlzQmxvY2tlZCIsImN1cnJlbnRVc2VyIiwibWVzc2FnZVRyeUNvdW50Iiwic2hvdyIsImdldENoYXRSb29tIiwiY2hhdFJvb20iLCJjbGlja1N1Ym1pdCIsIiRldmVudCIsImZvY3VzSW5wdXQiLCJpc1Zpc2libGUiLCJjaGF0T2JqIiwibXlNc2ciLCJyZWNlaXZlciIsInNlbmRDaGF0TWVzc2FnZSIsInN1Ym1pdFVwbG9hZCIsImZpbGUiLCJ1cGxvYWQiLCJiYXNlVVJMIiwicmVzdWx0IiwidXBsb2FkZWRJbWFnZSIsImNhbmNlbFVwbG9hZCIsInNob3dUZW1wSW1hZ2UiLCJ0ZW1wSW1hZ2VVcmwiLCJ1cGxvYWRTaW5nbGVJbWFnZSIsImVyckZpbGVzIiwiZXJyRmlsZSIsImxlYXZlQ2hhdEJveCIsInVwZGF0ZUNoYXRSb29tIiwiQ2hhdFBhcmVudENvbnRyb2xsZXIiLCJSZXZlYWxlZENoYXRDb250cm9sbGVyIiwiZ2V0UmV2ZWFsZWRDaGF0Um9vbXMiLCJSZXZpZXdTZXJ2aWNlIiwiJGh0dHAiLCJkZWxldGVDaGF0Um9vbSIsImlkIiwicG9zdCIsImdldCIsInJldmVhbGVkIiwicnMiLCJzZXJ2aWNlIiwiU29ja2V0RmFjdG9yeSIsInNvY2tldEZhY3RvcnkiLCJwcmVmaXgiLCJpb1NvY2tldCIsImlvIiwiY29ubmVjdCIsImZhY3RvcnkiLCJzb2NrZXRGYWN0b3J5RnVuY3Rpb24iLCJBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIiLCJ1c2VyTG9jYXRpb25TZXJ2aWNlIiwiJGlvbmljTW9kYWwiLCJzdWNjZXNzZnVsQXV0aGVudGljYXRpb24iLCJzZXRVc2VyIiwic2V0VXNlckxvY2F0aW9uIiwiZGV2aWNlX3Rva2VuIiwic29jaWFsQXV0aGVudGljYXRlIiwicHJvdmlkZXIiLCJhdXRoZW50aWNhdGUiLCJsb2FkUG9zdE1vZGFsIiwiZnJvbVRlbXBsYXRlVXJsIiwic2NvcGUiLCJtb2RhbCIsImF1dGhMb2dvdXQiLCJsb2dvdXQiLCJyZW1vdmVVc2VyIiwicGhjIiwiaXNBdXRoIiwid2ViU2lnbkluIiwiZ29vZ2xlU2lnbkluIiwidGVtcGxhdGUiLCJnb29nbGVwbHVzIiwibG9naW4iLCJ3ZWJDbGllbnRJZCIsInVzZXJfZGF0YSIsInByb2ZpbGUiLCJkaXNwbGF5TmFtZSIsImltYWdlVXJsIiwic2V0VG9rZW4iLCJ0b2tlbiIsIm1zZyIsIkhvbWVDb250cm9sbGVyIiwidG9hc3RyIiwiJGlvbmljVGFic0RlbGVnYXRlIiwibWVzc2FnZVN0cmluZyIsInVzZXJOYW1lIiwiYW5vbk5hbWUiLCJmYWNlYm9va05hbWUiLCJnb29nbGVOYW1lIiwiY3VycmVudCIsIm5hbWUiLCJpbmZvIiwiYWxsb3dIdG1sIiwib25UYXAiLCJoYyIsImJhZGdlVmFsdWUiLCJjaGF0Q2xpY2tlZCIsInNsaWRlSGVhZGVyIiwic2xpZGVIZWFkZXJQcmV2aW91cyIsImdvRm9yd2FyZCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsInNlbGVjdCIsImlvbmljQ3VzdG9tU3Bpbm5lciIsImRpcmVjdGl2ZSIsInBvc3RTZXJ2aWNlIiwicmVzdHJpY3QiLCJwb3NpdGlvbkNvcmRzIiwicmVwbGFjZSIsImxpbmsiLCJnZXREaXN0YW5jZSIsImRpc3RhbmNlT2JqIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJkaXN0YW5jZSIsIndhdGNoU2Nyb2xsIiwiZWxlbSIsImJpbmQiLCJzY3JvbGxUb3AiLCJzcmNFbGVtZW50IiwiJGFwcGx5IiwiaW1hZ2VNb2RhbCIsInNob3dJbWFnZU1vZGFsIiwiaW1hZ2UiLCJsb2FkTW9kYWwiLCJjdXJyZW50SW1hZ2UiLCJzdG9wUHJvcGFnYXRpb24iLCJTY3JvbGxQb3NpdGlvbnMiLCJnZXRTY3JvbGxQb3NpdGlvbiIsIm9mZnNldCIsInNjcm9sbFRvIiwibGVmdCIsInRvcCIsInRyaWdnZXIiLCJlbGVtZW50IiwiJHdhdGNoIiwiZm9jdXMiLCJpbWdMYXJnZSIsImltZ1NtYWxsIiwiSW1hZ2UiLCJzcmMiLCJvbmxvYWQiLCJjaGlsZHJlbiIsImZpbmQiLCJjc3MiLCJIb21lU2VydmljZSIsImRlbGV0ZVVwbG9hZCIsInRoYXQiLCJwdWJsaWNfaWQiLCJnZXRJbWFnZXMiLCJpbWFnZVRleHQiLCJkZWZlcnJlZCIsIm9wdGlvbnMiLCJhbmRyb2lkIiwic2VuZGVySUQiLCJ2aWJyYXRlIiwiYnJvd3NlciIsImlvcyIsImJhZGdlIiwic291bmQiLCJ3aW5kb3dzIiwiaW5pdGlhbGl6ZSIsIm9uTm90aWZpY2F0aW9uIiwiYXJndW1lbnRzIiwib25FcnJvciIsInJlZ2lzdHJhdGlvbklkIiwiYmFzZV91cmwiLCJyZWplY3QiLCJzdG9yYWdlIiwibG9jYWxTdG9yYWdlIiwiY2FjaGVkVXNlciIsIm9iajEiLCJzZXRJdGVtIiwiSlNPTiIsInN0cmluZ2lmeSIsImdldFBheWxvYWQiLCJzdWIiLCJwYXJzZSIsImdldEl0ZW0iLCJyZW1vdmVJdGVtIiwiaXNVc2VyRXhpc3RzIiwiTWVzc2FnZVJvb21Db250cm9sbGVyIiwibG9hZE1vcmVNZXNzYWdlcyIsImdldE1lc3NhZ2VzIiwibWVzc2FnZVJvb21JZCIsIm1lc3NhZ2VMaXN0IiwibWVzc2FnZU9iaiIsInNlbmRNZXNzYWdlIiwibGVhdmVNZXNzYWdlUm9vbSIsIk1lc3NhZ2VSb29tTGlzdENvbnRyb2xsZXIiLCJuZXdNZXNzYWdlUm9vbSIsIm5ld01lc3NhZ2UiLCJtZXNzYWdlUm9vbXNMaXN0IiwicHVsbFJlZnJlc2hNZXNzYWdlcyIsImdldEFsbE1lc3NhZ2VSb29tcyIsImdldE1lc3NhZ2VSb29tcyIsIm1lc3NhZ2VSb29tUGFnZSIsIk1lc3NhZ2VSb29tU2VydmljZSIsIkFsbFBlb3BsZUNvbnRyb2xsZXIiLCJwZW9wbGVTZXJ2aWNlIiwicHVsbFJlZnJlc2hQZW9wbGUiLCJzZWFyY2hDcm9zc1N1Ym1pdCIsImFwYyIsInBlb3BsZVNlYXJjaFRleHQiLCJzaG93U2VhcmNoQ3Jvc3MiLCJwZW9wbGVTZWFyY2hUZXh0U3VibWl0IiwibG9hZE1vcmVQZW9wbGUiLCJnZXRBbGxQZW9wbGUiLCJnZXRBbGxVc2VycyIsInBlb3BsZUxpc3QiLCJOZWFyYnlQZW9wbGVDb250cm9sbGVyIiwiZ2V0TmVhcmJ5UGVvcGxlIiwicmVsZWFzZVJhbmdlIiwiZ2V0TmVhcmJ5VXNlcnMiLCJub1Blb3BsZSIsIlBlb3BsZVBhcmVudENvbnRyb2xsZXIiLCJSZWNlaXZlZFBlb3BsZUNvbnRyb2xsZXIiLCJnZXRSZWNlaXZlZFBlb3BsZSIsImdldFJlY2VpdmVkVXNlcnMiLCJSZXF1ZXN0ZWRQZW9wbGVDb250cm9sbGVyIiwiZ2V0UmVxdWVzdGVkUGVvcGxlIiwiZ2V0UmVxdWVzdGVkVXNlcnMiLCJSZXZlYWxlZFBlb3BsZUNvbnRyb2xsZXIiLCJnZXRSZXZlYWxlZFBlb3BsZSIsImdldFJldmVhbGVkVXNlcnMiLCJsaXN0VHlwZSIsInNldFBlb3BsZVNlYXJjaCIsInJlbW92ZUFmdGVyRGVjaWRlZCIsImluZGV4IiwicmVjZWl2ZWRQZW9wbGVMaXN0IiwicnBjIiwicmVxdWVzdGVkUGVvcGxlTGlzdCIsImRlbGV0ZUNoYXQiLCIkaW9uaWNBY3Rpb25TaGVldCIsImFmdGVyQ2FsbGJhY2siLCJ0aXRsZVRleHQiLCJidXR0b25zIiwidGV4dCIsImNhbmNlbFRleHQiLCJjYW5jZWwiLCJidXR0b25DbGlja2VkIiwidXNlclNldHRpbmdzIiwiJGlvbmljUG9wb3ZlciIsInVzZXJCbG9jayIsImNoYXREZWxldGUiLCJibG9ja0lkIiwicG9wb3ZlciIsInJlbW92ZSIsInVzZXJQYWdlIiwiY2FuY2VsUmV2ZWFsIiwiZGVjaWRlUmV2ZWFsIiwiYWNjZXB0IiwiaWdub3JlIiwiZGVsZXRlUmV2ZWFsIiwiZmluaXNoIiwic2VuZFJldmVhbCIsImluaXRpYXRlIiwiY3JlYXRlQmxvY2siLCJjcmVhdGUiLCJkZWxldGVCbG9jayIsIlBlb3BsZVNlcnZpY2UiLCJhbGwiLCJyZWNlaXZlZCIsInJlcXVlc3RlZCIsImdldEZpbHRlcmVkVXNlcnMiLCJ1c2VycyIsIm5lYXJieSIsImdldFVzZXJMb2NhdGlvbiIsIlVwdm90ZVNlcnZpY2UiLCJnZXRVcHZvdGUiLCJjcmVhdGVVcHZvdGUiLCJkZWxldGVVcHZvdGUiLCJBbGxQb3N0Q29udHJvbGxlciIsInB1bGxSZWZyZXNoUG9zdHMiLCJwb3N0U2VhcmNoVGV4dCIsInBvc3RTZWFyY2hUZXh0U3VibWl0IiwibG9hZE1vcmVQb3N0cyIsImdldEFsbFBvc3RzIiwicG9zdHNMaXN0IiwiQ3JlYXRlUG9zdENvbnRyb2xsZXIiLCJzdWJtaXRQb3N0IiwiY3BjIiwiY29udGVudCIsIm5ld1ZhbCIsIm9sZFZhbCIsInNlbGVjdFJhbmRvbUltYWdlIiwiaW1nIiwibG9hZFJhbmRvbUltYWdlcyIsImxvYWRpbmdSYW5kb21JbWFnZSIsInJhbmRvbUltYWdlcyIsImltYWdlSWQiLCJsb2FkaW5nSW1hZ2UiLCJMYXRlc3RQb3N0Q29udHJvbGxlciIsImdldExhdGVzdFBvc3RzIiwiTmVhcmJ5UG9zdENvbnRyb2xsZXIiLCJnZXROZWFyYnlQb3N0cyIsIlBvcHVsYXJQb3N0Q29udHJvbGxlciIsImdldFBvcHVsYXJQb3N0cyIsIlBvc3RQYXJlbnRDb250cm9sbGVyIiwiU2luZ2xlUG9zdENvbnRyb2xsZXIiLCJ1cHZvdGVTZXJ2aWNlIiwiZ2V0U2luZ2xlUG9zdCIsImdldFBvc3QiLCJsb2MiLCJkaWF0YW5jZSIsImdldFBvc3REaXN0YW5jZSIsImNoZWNrUG9zdFVwdm90ZSIsImN1cnJlbnRQb3N0IiwicG9zdFVwdm90ZWQiLCJzdWJtaXRQb3N0VXB2b3RlIiwiZGVsZXRlUG9zdFVwdm90ZSIsInBvc3RTZWFyY2hNb2RhbCIsImNsaWNrUG9zdFNlYXJjaCIsInBvc3RTZWFyY2hEYXRhIiwiZ2V0UG9zdHMiLCJtb2RhbHNMaXN0Iiwic2hvd1Bvc3RNb2RhbCIsImdldFRpbWUiLCJ0aW1lIiwibW9tZW50IiwiZnJvbU5vdyIsInNldFBvc3RTZWFyY2giLCJwb3N0TW9kYWwiLCJwb3N0VXB2b3RlIiwidXB2b3Rlc0xlbmd0aCIsImxvYWRpbmdVcHZvdGUiLCJQb3N0U2VydmljZSIsImdldEZpbHRlcmVkUG9zdHMiLCJwb3N0cyIsImVycjIiLCJzb3J0IiwiZGVsZXRlUG9zdCIsImRlbGV0ZSIsInBvc09iaiIsImxhdDEiLCJsb24xIiwibGF0MiIsImxvbjIiLCJkTGF0IiwiZGVnMnJhZCIsImRMb24iLCJNYXRoIiwic2luIiwiY29zIiwiYyIsImF0YW4yIiwic3FydCIsImQiLCJjZWlsIiwiZGVnIiwiUEkiLCJVc2VyRWRpdFBhZ2VDb250cm9sbGVyIiwidW1wYyIsImVkaXRGb3JtIiwiaW50ZXJlc3RzIiwiam9pbiIsInN1Ym1pdFVzZXIiLCJ1cGRhdGVVc2VyIiwidXBsb2FkVXNlclBpY3R1cmUiLCJwaWN0dXJlIiwiVXNlck1lUGFnZUNvbnRyb2xsZXIiLCJvcGVuRmFjZWJvb2siLCJvcGVuIiwiZ2V0VXNlclBvc3RzIiwiYWN0aXZhdGVUYWIiLCJ0YWJJbmRleCIsImFjdGl2ZVRhYiIsImlzVGFiQWN0aXZlIiwic3ViQWN0aXZhdGVUYWIiLCJzdWJUYWJJbmRleCIsInN1YkFjdGl2ZVRhYiIsImlzU3ViVGFiQWN0aXZlIiwiZ2V0UmVxdWVzdGVkTGlzdCIsIlVzZXJQYWdlQ29udHJvbGxlciIsIm9wZW5Hb29nbGUiLCJ1cGMiLCJjaGVja1JldmVhbCIsInJldmVhbENob2ljZSIsIlVzZXJQYWdlUG9zdHNDb250cm9sbGVyIiwiVXNlclBhcmVudENvbnRyb2xsZXIiLCJibG9ja2VkTGlzdCIsImdldEJsb2NrcyIsIkJsb2NrU2VydmljZSIsInNlY29uZFVzZXIiLCJSZXZlYWxTZXJ2aWNlIiwiZ2V0UGFyYW1zIiwiVXNlckxvY2F0aW9uU2VydmljZSIsIiRjb3Jkb3ZhR2VvbG9jYXRpb24iLCJ0aW1lb3V0IiwiZW5hYmxlSGlnaEFjY3VyYWN5IiwiZ2V0Q3VycmVudFBvc2l0aW9uIiwicG9zaXRpb25zIiwiY29vcmRzIiwibG9jYXRpb24iLCJsYXQiLCJsbmciLCJjb2RlIiwid2FybmluZyIsIlVzZXJTZXJ2aWNlIl0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFBQSxHQUVBLFlBUUEsU0FBQUMsR0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMsR0FDQUQsRUFBQUUsS0FBQUMsU0FBQSxVQUNBSCxFQUFBSSxVQUFBQyxhQUFBLEdBQ0FMLEVBQUFNLE1BQUFDLFdBQUEsWUFDQVQsRUFBQVUsVUFBQSxxQkFDQVosRUFBQWEsT0FBQVIsR0FDQVMsYUFBQSxFQUNBQyxVQUFBLElBWkEsR0FBQUMsR0FBQWhCLEVBQUFpQixPQUFBLFNBQUEsUUFBQSxZQUFBLGFBQUEsZUFBQSxtQkFDQSxZQUFBLFNBQUEsYUFBQSxhQUFBLGFBQUEsYUFBQSxlQUFBLGlCQUVBRCxHQUFBRSxRQUFBLHFCQUFBLGlCQUFBLHVCQUFBLGVBQUFqQixJQWVBZSxFQUFBRyxLQUFBLGFBQUEsU0FB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d2pCLEdBQUE3VyxFQUFBckQsR0FPQSxRQUFBUSxHQUFBK0MsR0FDQSxNQUFBRixHQUFBSSxJQUFBekQsRUFBQXNDLFFBQUEsWUFBQWlCLEdBSUEsUUFBQWtVLEdBQUFsYyxHQUNBLE1BQUE4SCxHQUFBRyxLQUFBeEQsRUFBQXNDLFFBQUEsZ0JBQUEvRyxLQUFBQSxJQVpBbUUsS0FBQStYLFdBQUFBLEVBRUEvWCxLQUFBYyxRQUFBQSxFQVRBOUosRUFBQWlCLE9BQUEsY0FDQWlNLFFBQUEsZUFBQSxRQUFBLGNBQUFzVyxLQXdCQXBoQixPQUFBcEMiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cclxuXHR2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ3BldGFsJywgWydpb25pYycsICduZ0FuaW1hdGUnLCdzYXRlbGxpemVyJywgJ25nRmlsZVVwbG9hZCcsICdidGZvcmQuc29ja2V0LWlvJyxcclxuXHRcdCduZ0NvcmRvdmEnLCAndG9hc3RyJywgJ3BldGFsLmhvbWUnLCAncGV0YWwucG9zdCcsICdwZXRhbC5jaGF0JywgJ3BldGFsLnVzZXInLCAncGV0YWwucGVvcGxlJywncGV0YWwubWVzc2FnZSdcclxuXHRdKTtcclxuXHRhcHAuY29uZmlnKFsnJHVybFJvdXRlclByb3ZpZGVyJywgJyRzdGF0ZVByb3ZpZGVyJywgJyRpb25pY0NvbmZpZ1Byb3ZpZGVyJywgJ3RvYXN0ckNvbmZpZycsIGNvbmZpZ0Z1bmN0aW9uXSk7XHJcblxyXG5cdGZ1bmN0aW9uIGNvbmZpZ0Z1bmN0aW9uKCR1cmxSb3V0ZXJQcm92aWRlciwgJHN0YXRlUHJvdmlkZXIsICRpb25pY0NvbmZpZ1Byb3ZpZGVyLCB0b2FzdHJDb25maWcpIHtcclxuXHRcdCRpb25pY0NvbmZpZ1Byb3ZpZGVyLnRhYnMucG9zaXRpb24oXCJib3R0b21cIik7XHJcblx0XHQkaW9uaWNDb25maWdQcm92aWRlci5zY3JvbGxpbmcuanNTY3JvbGxpbmcoZmFsc2UpO1xyXG5cdFx0JGlvbmljQ29uZmlnUHJvdmlkZXIudmlld3MudHJhbnNpdGlvbigncGxhdGZvcm0nKTtcclxuXHRcdCR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9ob21lL3Bvc3QvbmVhcmJ5Jyk7XHJcblx0XHRhbmd1bGFyLmV4dGVuZCh0b2FzdHJDb25maWcsIHtcclxuXHRcdFx0YXV0b0Rpc21pc3M6IHRydWUsXHJcblx0XHRcdG1heE9wZW5lZDogMSxcclxuXHRcdH0pO1xyXG5cdFx0XHJcblxyXG5cdH1cclxuXHJcblx0YXBwLnJ1bihbJyRyb290U2NvcGUnLCAnJHN0YXRlJywgJyRpb25pY1BsYXRmb3JtJywgJyRpb25pY0xvYWRpbmcnLCAnUmVxdWVzdHNTZXJ2aWNlJywgJyRjb3Jkb3ZhUHVzaFY1JywgJyRpb25pY0hpc3RvcnknLCBmdW5jdGlvbigkcm9vdFNjb3BlLCAkc3RhdGUsICRpb25pY1BsYXRmb3JtLCAkaW9uaWNMb2FkaW5nLCBSZXF1ZXN0c1NlcnZpY2UsICRjb3Jkb3ZhUHVzaFY1LCAkaW9uaWNIaXN0b3J5KSB7XHJcblxyXG5cdFx0JGlvbmljUGxhdGZvcm0ucmVhZHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdC8vIEhpZGUgdGhlIGFjY2Vzc29yeSBiYXIgYnkgZGVmYXVsdCAocmVtb3ZlIHRoaXMgdG8gc2hvdyB0aGUgYWNjZXNzb3J5IGJhciBhYm92ZSB0aGUga2V5Ym9hcmRcclxuXHRcdFx0Ly8gZm9yIGZvcm0gaW5wdXRzKVxyXG5cdFx0XHRpZiAod2luZG93LmNvcmRvdmEgJiYgd2luZG93LmNvcmRvdmEucGx1Z2lucyAmJiB3aW5kb3cuY29yZG92YS5wbHVnaW5zLktleWJvYXJkKSB7XHJcblx0XHRcdFx0Y29yZG92YS5wbHVnaW5zLktleWJvYXJkLmhpZGVLZXlib2FyZEFjY2Vzc29yeUJhcih0cnVlKTtcclxuXHRcdFx0XHRjb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQuZGlzYWJsZVNjcm9sbCh0cnVlKTtcclxuXHRcdFx0XHQvL3dpbmRvdy5wdXNoTm90aWZpY2F0aW9uID0gd2luZG93LnBsdWdpbnMucHVzaE5vdGlmaWNhdGlvbjtcclxuXHRcdFx0XHQvL2FwcFN0YXR1cygpO1xyXG5cdFx0XHRcdG5vdGlmaWNhdGlvbkZ1bmN0aW9uKCk7XHJcblx0XHRcdFx0YmFja0J1dHRvbkV4aXQoKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKHdpbmRvdy5TdGF0dXNCYXIpIHtcclxuXHRcdFx0XHQvLyBvcmcuYXBhY2hlLmNvcmRvdmEuc3RhdHVzYmFyIHJlcXVpcmVkXHJcblx0XHRcdFx0U3RhdHVzQmFyLnN0eWxlRGVmYXVsdCgpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHR3aW5kb3cub25lcnJvciA9IGZ1bmN0aW9uKGVycm9yTXNnLCB1cmwsIGxpbmVOdW1iZXIpIHtcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdH07XHJcblx0XHRcdFxyXG5cdFx0XHQkcm9vdFNjb3BlLiRvbihcIiRzdGF0ZUNoYW5nZUVycm9yXCIsIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRzdGF0ZS5nbygnaG9tZS5wb3N0Lm5lYXJieScpO1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGJhY2tCdXR0b25FeGl0KCkge1xyXG5cdFx0XHQkaW9uaWNQbGF0Zm9ybS5yZWdpc3RlckJhY2tCdXR0b25BY3Rpb24oZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRcdGlmICgkcm9vdFNjb3BlLmJhY2tCdXR0b25QcmVzc2VkT25jZVRvRXhpdCkge1xyXG5cdFx0XHRcdFx0aW9uaWMuUGxhdGZvcm0uZXhpdEFwcCgpO1xyXG5cdFx0XHRcdH0gZWxzZSBpZiAoJGlvbmljSGlzdG9yeS5iYWNrVmlldygpKSB7XHJcblx0XHRcdFx0XHQkaW9uaWNIaXN0b3J5LmdvQmFjaygpO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHQkcm9vdFNjb3BlLmJhY2tCdXR0b25QcmVzc2VkT25jZVRvRXhpdCA9IHRydWU7XHJcblx0XHRcdFx0XHR3aW5kb3cucGx1Z2lucy50b2FzdC5zaG93U2hvcnRDZW50ZXIoXHJcblx0XHRcdFx0XHRcdFwiUHJlc3MgYmFjayBidXR0b24gYWdhaW4gdG8gZXhpdFwiLFxyXG5cdFx0XHRcdFx0XHRmdW5jdGlvbihhKSB7fSxcclxuXHRcdFx0XHRcdFx0ZnVuY3Rpb24oYikge31cclxuXHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0JHJvb3RTY29wZS5iYWNrQnV0dG9uUHJlc3NlZE9uY2VUb0V4aXQgPSBmYWxzZTtcclxuXHRcdFx0XHRcdH0sIDIwMDApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9LCAxMDEpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIG5vdGlmaWNhdGlvbkZ1bmN0aW9uKCkge1xyXG5cdFx0XHRSZXF1ZXN0c1NlcnZpY2UucmVnaXN0ZXIoKTtcclxuXHJcblx0XHRcdCRyb290U2NvcGUuJG9uKCckY29yZG92YVB1c2hWNTpub3RpZmljYXRpb25SZWNlaXZlZCcsIGZ1bmN0aW9uKGV2ZW50LCBkYXRhKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZGF0YSk7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXZlbnQpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdC8vIHRyaWdnZXJlZCBldmVyeSB0aW1lIGVycm9yIG9jY3Vyc1xyXG5cdFx0XHQkcm9vdFNjb3BlLiRvbignJGNvcmRvdmFQdXNoVjU6ZXJyb3JPY3VycmVkJywgZnVuY3Rpb24oZXZlbnQsIGUpIHtcclxuXHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH1dKTtcclxuXHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuLy8gcmVkLCBwaW5rLCBwdXJwbGUsIGRlZXAtcHVycGxlLCBpbmRpZ28sIGJsdWUsIGxpZ2h0LWJsdWUsIGN5YW4sIHRlYWwsIGdyZWVuLCxcclxuLy9saWdodC1ncmVlbiwgbGltZSwgeWVsbG93LCBhbWJlciwgb3JhbmdlLCBkZWVwLW9yYW5nZSwgYnJvd24sIGdyZXksIGJsdWUtZ3JleVxyXG4vLyAuY29uZmlnKGZ1bmN0aW9uKCRtZFRoZW1pbmdQcm92aWRlcikge1xyXG4vLyAgICRtZFRoZW1pbmdQcm92aWRlci50aGVtZSgnZGVmYXVsdCcpXHJcbi8vICAgICAucHJpbWFyeVBhbGV0dGUoJ3BpbmsnKVxyXG4vLyAgICAgLmFjY2VudFBhbGV0dGUoJ29yYW5nZScpO1xyXG4vLyB9KTsvL1wiYW5ndWxhci1tYXRlcmlhbFwiOiBcIm1hc3RlclwiLFwibmctZGlyZWN0aXZlLWxhenktaW1hZ2VcIjogXCJhZmtsLWxhenktaW1hZ2UjXjAuMy4xXCJcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmNoYXQnLCBbJ25nRmlsZVVwbG9hZCddKVxyXG5cdFx0LmNvbmZpZyhbJyRzdGF0ZVByb3ZpZGVyJywgY29uZmlnXSk7XHJcblxyXG5cclxuXHRmdW5jdGlvbiBjb25maWcoJHN0YXRlUHJvdmlkZXIpIHtcclxuXHRcdCRzdGF0ZVByb3ZpZGVyXHJcblx0XHRcdC5zdGF0ZSgnaG9tZS5jaGF0Jywge1xyXG5cdFx0XHRcdHVybDogJy9jaGF0JyxcclxuXHRcdFx0XHRhYnN0cmFjdDogdHJ1ZSxcclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J2NoYXQtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9jaGF0L3ZpZXdzL2NoYXRQYXJlbnQuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdDaGF0UGFyZW50Q29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3BwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5jaGF0LmFsbCcsIHtcclxuXHRcdFx0XHR1cmw6ICcvYWxsJyxcclxuXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdjaGF0LXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvY2hhdC92aWV3cy9hbGxDaGF0Lmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnQWxsQ2hhdENvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICdhY2MnXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5jaGF0LnJldmVhbGVkJywge1xyXG5cdFx0XHRcdHVybDogJy9yZXZlYWxlZCcsXHJcblxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQnY2hhdC10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL2NoYXQvdmlld3MvcmV2ZWFsZWRDaGF0Lmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnUmV2ZWFsZWRDaGF0Q29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3JwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLnN0YXRlKCdob21lLmNoYXQubWVzc2FnZXJvb20nLCB7XHJcblx0XHRcdFx0dXJsOiAnL21lc3NhZ2VSb29tJyxcclxuXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdjaGF0LXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvbWVzc2FnZS92aWV3cy9tZXNzYWdlUm9vbUxpc3QuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdNZXNzYWdlUm9vbUxpc3RDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAnbXJsYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLnN0YXRlKCdjaGF0Qm94Jywge1xyXG5cdFx0XHRcdHVybDogJy9jaGF0Qm94Lzp1c2VyJyxcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9jaGF0L3ZpZXdzL2NoYXRCb3guaHRtbCcsXHJcblx0XHRcdFx0Y29udHJvbGxlcjogJ0NoYXRCb3hDb250cm9sbGVyJyxcclxuXHRcdFx0XHRjb250cm9sbGVyQXM6ICdjYmMnLFxyXG5cdFx0XHRcdHJlc29sdmU6IHtcclxuXHRcdFx0XHRcdGJsb2NrZWQ6IFsgJyRzdGF0ZVBhcmFtcycsICdibG9ja1NlcnZpY2UnLCckcScsIGJsb2NrZWRdXHJcblxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH0pO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gYmxvY2tlZCgkc3RhdGVQYXJhbXMsYmxvY2tTZXJ2aWNlLCRxKXtcclxuXHRcdHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XHJcblx0XHRibG9ja1NlcnZpY2UuY2hlY2soJHN0YXRlUGFyYW1zLnVzZXIpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG5cdFx0XHRkZWZlci5yZXNvbHZlKHJlc3BvbnNlLmRhdGEuYmxvY2tlZCk7XHRcdFx0XHRcdFxyXG5cdFx0fSkuY2F0Y2goZnVuY3Rpb24oKXtcclxuXHRcdFx0ZGVmZXIucmVzb2x2ZSgpO1x0XHJcblx0XHR9KTtcclxuXHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cdH1cclxuXHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmhvbWUnLCBbXSlcclxuXHRcdC5jb25maWcoWyckc3RhdGVQcm92aWRlcicsICckYXV0aFByb3ZpZGVyJywgY29uZmlnXSk7XHJcblxyXG5cdGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlciwgJGF1dGhQcm92aWRlcikge1xyXG5cdFx0dmFyIGZiQ2xpZW50SWQgPSAnMTEzNDIwODgzMDA0MTYzMic7XHJcblx0XHR2YXIgcmVkaXJlY3RVcmwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6ODEwMFwiO1xyXG5cdFx0dmFyIHJlZGlyZWN0VXJsMiA9IFwiaHR0cHM6Ly9iYW5hbmEtc3VycHJpc2UtMzEzMzIuaGVyb2t1YXBwLmNvbVwiO1xyXG5cdFx0dmFyIGF1dGhlbnRpY2F0ZVVybCA9IHJlZGlyZWN0VXJsMiArICcvYXV0aGVudGljYXRlJztcclxuXHRcdCRhdXRoUHJvdmlkZXIuZmFjZWJvb2soe1xyXG5cdFx0XHRjbGllbnRJZDogZmJDbGllbnRJZCxcclxuXHRcdFx0dXJsOiBhdXRoZW50aWNhdGVVcmwgKyAnL2F1dGgvZmFjZWJvb2snLFxyXG5cdFx0XHRyZWRpcmVjdFVyaTogXCJodHRwczovL2JhbmFuYS1zdXJwcmlzZS0zMTMzMi5oZXJva3VhcHAuY29tL1wiXHJcblx0XHR9KTtcclxuXHRcdCRhdXRoUHJvdmlkZXIuZ29vZ2xlKHtcclxuXHRcdFx0Y2xpZW50SWQ6ICc3NDI2NzY4MzcyNjUtMzNqbnRrZDYwcDg3Z2tyaDQ4bnFlNmNkZDhudHNmbDUuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20nLFxyXG5cdFx0XHR1cmw6IGF1dGhlbnRpY2F0ZVVybCArICcvYXV0aC9nb29nbGUnLFxyXG5cdFx0XHRyZWRpcmVjdFVyaTogcmVkaXJlY3RVcmxcclxuXHRcdH0pO1xyXG5cdFx0JHN0YXRlUHJvdmlkZXIuc3RhdGUoJ2F1dGhlbnRpY2F0ZScsIHtcclxuXHRcdFx0dXJsOiAnL2F1dGhlbnRpY2F0ZScsXHJcblx0XHRcdGNvbnRyb2xsZXI6ICdBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXInLFxyXG5cdFx0XHRjb250cm9sbGVyQXM6ICdhYycsXHJcblx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL2hvbWUvdmlld3MvYXV0aGVudGljYXRpb25QYWdlLmh0bWwnLFxyXG5cdFx0XHRcclxuXHJcblx0XHR9KS5zdGF0ZSgnaG9tZScsIHtcclxuXHRcdFx0dXJsOiBcIi9ob21lXCIsXHJcblx0XHRcdGFic3RyYWN0OiB0cnVlLFxyXG5cdFx0XHR0ZW1wbGF0ZVVybDogXCJhcHAvaG9tZS92aWV3cy90YWJzLmh0bWxcIixcclxuXHRcdFx0Y29udHJvbGxlcjogJ0hvbWVDb250cm9sbGVyJyxcclxuXHRcdFx0Y29udHJvbGxlckFzOiAnaGMnLFxyXG5cdFx0XHRyZXNvbHZlOiB7XHJcblx0XHRcdFx0cmVkaXJlY3RJZlVzZXJOb3RBdXRoZW50aWNhdGVkOiBbJyRxJywgJyRhdXRoJywgJyRzdGF0ZScsICckdGltZW91dCcsIHJlZGlyZWN0SWZVc2VyTm90QXV0aGVudGljYXRlZF1cclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHJcblxyXG5cdGZ1bmN0aW9uIHJlZGlyZWN0SWZVc2VyTm90QXV0aGVudGljYXRlZCgkcSwgJGF1dGgsICRzdGF0ZSwgJHRpbWVvdXQpIHtcclxuXHRcdHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XHJcblxyXG5cdFx0aWYgKCRhdXRoLmlzQXV0aGVudGljYXRlZCgpKSB7XHJcblxyXG5cdFx0XHRkZWZlci5yZXNvbHZlKCk7XHJcblxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0JHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JHN0YXRlLmdvKCdhdXRoZW50aWNhdGUnKTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdC8vZGVmZXIucmVqZWN0KCk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZTtcclxuXHR9XHJcblx0ZnVuY3Rpb24gcmVkaXJlY3RJZlVzZXJBdXRoZW50aWNhdGVkKCRxLCAkYXV0aCkge1xyXG5cdFx0dmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuXHJcblx0XHRpZiAoJGF1dGguaXNBdXRoZW50aWNhdGVkKCkpIHtcclxuXHRcdFx0ZGVmZXIucmVqZWN0KCk7XHJcblx0XHRcdC8qJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JHN0YXRlLmdvKCdhdXRoZW50aWNhdGUnKTtcclxuXHRcdFx0fSk7Ki9cclxuXHRcdFx0XHJcblxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJub3QgYXVkc25mXCIpO1xyXG5cdFx0XHRkZWZlci5yZXNvbHZlKCk7XHJcblx0XHRcdC8vZGVmZXIucmVqZWN0KCk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZTtcclxuXHR9XHJcblxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKXtcclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cdHZhciBtZXNzYWdlTW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BldGFsLm1lc3NhZ2UnLFtdKTtcclxuXHRtZXNzYWdlTW9kdWxlLmNvbmZpZyhbJyRzdGF0ZVByb3ZpZGVyJywgY29uZmlnXSk7XHJcblxyXG5cclxuXHRmdW5jdGlvbiBjb25maWcoJHN0YXRlUHJvdmlkZXIpIHtcclxuXHRcdCRzdGF0ZVByb3ZpZGVyXHJcblx0XHRcdC5zdGF0ZSgnbWVzc2FnZVJvb21JbnRlcmVzdCcsIHtcclxuXHRcdFx0XHR1cmw6ICcvbWVzc2FnZVJvb20vaW50ZXJlc3QvOmludGVyZXN0JyxcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9tZXNzYWdlL3ZpZXdzL21lc3NhZ2VSb29tLmh0bWwnLFxyXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdNZXNzYWdlUm9vbUNvbnRyb2xsZXInLFxyXG5cdFx0XHRcdGNvbnRyb2xsZXJBczogJ21yYycsXHJcblx0XHRcdFx0cmVzb2x2ZToge1xyXG5cdFx0XHRcdFx0bWVzc2FnZVJvb206IFsgJyRzdGF0ZVBhcmFtcycsICckcScsIG1lc3NhZ2VSb29tXVxyXG5cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHR9KS5zdGF0ZSgnbWVzc2FnZVJvb21Qb3N0Jywge1xyXG5cdFx0XHRcdHVybDogJy9tZXNzYWdlUm9vbS9wb3N0Lzpwb3N0SWQnLFxyXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL21lc3NhZ2Uvdmlld3MvbWVzc2FnZVJvb20uaHRtbCcsXHJcblx0XHRcdFx0Y29udHJvbGxlcjogJ01lc3NhZ2VSb29tQ29udHJvbGxlcicsXHJcblx0XHRcdFx0Y29udHJvbGxlckFzOiAnbXJjJyxcclxuXHRcdFx0XHRyZXNvbHZlOiB7XHJcblx0XHRcdFx0XHRtZXNzYWdlUm9vbTogWyAnJHN0YXRlUGFyYW1zJywgJyRxJywgJ21lc3NhZ2VSb29tU2VydmljZScsbWVzc2FnZVJvb21dXHJcblxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH0pO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gbWVzc2FnZVJvb20oJHN0YXRlUGFyYW1zLCRxLG1lc3NhZ2VSb29tU2VydmljZSl7XHJcblx0XHR2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xyXG5cdFx0dmFyIHBhcmFtcyA9IHt9O1xyXG5cdFx0aWYoJHN0YXRlUGFyYW1zLnBvc3RJZCl7XHJcblx0XHRcdHBhcmFtcy5wb3N0SWQgPSAkc3RhdGVQYXJhbXMucG9zdElkO1xyXG5cdFx0fWVsc2V7XHJcblx0XHRcdHBhcmFtcy5pbnRlcmVzdCA9ICRzdGF0ZVBhcmFtcy5pbnRlcmVzdDtcclxuXHRcdH1cclxuXHRcdG1lc3NhZ2VSb29tU2VydmljZS5nZXRNZXNzYWdlUm9vbShwYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG5cdFx0XHRkZWZlci5yZXNvbHZlKHJlc3BvbnNlLmRhdGEuZm91bmRNZXNzYWdlUm9vbSk7XHRcdFx0XHRcdFxyXG5cdFx0fSkuY2F0Y2goZnVuY3Rpb24oZSl7XHJcblx0XHRcdGNvbnNvbGUubG9nKFwiUmVzb2x2ZSBtZXNhZ2UgUm9vbVwiKTtcclxuXHRcdFx0Y29uc29sZS5sb2coZSk7XHJcblx0XHRcdC8vZGVmZXIucmVzb2x2ZSgpO1x0XHJcblx0XHR9KTtcclxuXHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpOyIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wZW9wbGUnLCBbXSlcclxuXHRcdC5jb25maWcoWyckc3RhdGVQcm92aWRlcicsIGNvbmZpZ10pO1xyXG5cclxuXHJcblx0ZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XHJcblx0XHQkc3RhdGVQcm92aWRlclxyXG5cdFx0XHQuc3RhdGUoJ2hvbWUucGVvcGxlJyx7XHJcblx0XHRcdFx0dXJsOiAnL3Blb3BsZScsXHJcblx0XHRcdFx0YWJzdHJhY3Q6IHRydWUsXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdwZW9wbGUtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wZW9wbGUvdmlld3MvcGVvcGxlUGFyZW50Lmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnUGVvcGxlUGFyZW50Q29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3BwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0XHJcblx0XHRcdH0pLnN0YXRlKCdob21lLnBlb3BsZS5hbGwnLHtcclxuXHRcdFx0XHR1cmw6ICcvYWxsJyxcclxuXHRcdFx0XHRcclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J3Blb3BsZS10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3Blb3BsZS92aWV3cy9hbGxQZW9wbGUuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdBbGxQZW9wbGVDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAnYXBjJ1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cdFx0XHRcdFxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5wZW9wbGUucmV2ZWFsZWQnLHtcclxuXHRcdFx0XHR1cmw6ICcvcmV2ZWFsZWQnLFxyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQncGVvcGxlLXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcGVvcGxlL3ZpZXdzL3JldmVhbGVkUGVvcGxlLmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnUmV2ZWFsZWRQZW9wbGVDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAncnBjJ1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cdFx0XHRcdFxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5wZW9wbGUucmVjZWl2ZWQnLHtcclxuXHRcdFx0XHR1cmw6ICcvcmVjZWl2ZWQnLFxyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQncGVvcGxlLXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcGVvcGxlL3ZpZXdzL3JlY2VpdmVkUGVvcGxlLmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnUmVjZWl2ZWRQZW9wbGVDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAncnBjJ1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cdFx0XHRcdFxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5wZW9wbGUubmVhcmJ5Jyx7XHJcblx0XHRcdFx0dXJsOiAnL25lYXJieScsXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdwZW9wbGUtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wZW9wbGUvdmlld3MvbmVhcmJ5UGVvcGxlLmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnTmVhcmJ5UGVvcGxlQ29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ25wYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHRcdFx0XHRcclxuXHRcdFx0fSk7XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wb3N0JywgW10pXHJcblx0XHQuY29uZmlnKFsnJHN0YXRlUHJvdmlkZXInLCBjb25maWddKTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlcikge1xyXG5cclxuXHRcdCRzdGF0ZVByb3ZpZGVyXHJcblx0XHRcdC5zdGF0ZSgnaG9tZS5wb3N0Jywge1xyXG5cdFx0XHRcdHVybDogJy9wb3N0JyxcclxuXHRcdFx0XHRhYnN0cmFjdDogdHJ1ZSxcclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J3Bvc3QtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wb3N0L3ZpZXdzL3Bvc3RQYXJlbnQuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdQb3N0UGFyZW50Q29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3BwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5wb3N0LmFsbCcsIHtcclxuXHRcdFx0XHR1cmw6ICcvYWxsJyxcclxuXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdwb3N0LXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcG9zdC92aWV3cy9hbGxQb3N0Lmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnQWxsUG9zdENvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICdhcGMnXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5wb3N0LmxhdGVzdCcsIHtcclxuXHRcdFx0XHR1cmw6ICcvbGF0ZXN0JyxcclxuXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdwb3N0LXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcG9zdC92aWV3cy9sYXRlc3RQb3N0Lmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnTGF0ZXN0UG9zdENvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICdscGMnXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5wb3N0LnBvcHVsYXInLCB7XHJcblx0XHRcdFx0dXJsOiAnL3BvcHVsYXInLFxyXG5cclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J3Bvc3QtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wb3N0L3ZpZXdzL3BvcHVsYXJQb3N0Lmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnUG9wdWxhclBvc3RDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAncHBjJ1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSkuc3RhdGUoJ2hvbWUucG9zdC5uZWFyYnknLCB7XHJcblx0XHRcdFx0dXJsOiAnL25lYXJieScsXHJcblxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQncG9zdC10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3Bvc3Qvdmlld3MvbmVhcmJ5UG9zdC5odG1sJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ05lYXJieVBvc3RDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAnbnBjJ1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSkuc3RhdGUoJ3Bvc3RTdWJtaXQnLCB7XHJcblx0XHRcdFx0dXJsOiAnL3N1Ym1pdCcsXHJcblx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcG9zdC92aWV3cy9jcmVhdGVQb3N0Lmh0bWwnLFxyXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdDcmVhdGVQb3N0Q29udHJvbGxlcicsXHJcblx0XHRcdFx0Y29udHJvbGxlckFzOiAnY3BjJ1xyXG5cdFx0XHRcdC8qdmlld3M6IHtcclxuXHRcdFx0XHRcdCdwb3N0U3VibWl0LXRhYic6IHtcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSovXHJcblx0XHRcdH0pLnN0YXRlKCdzaW5nbGVQb3N0Jywge1xyXG5cdFx0XHRcdHVybDogJy9wb3N0LzppZCcsXHJcblx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcG9zdC92aWV3cy9zaW5nbGVQb3N0Lmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnU2luZ2xlUG9zdENvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICdzcGMnXHJcblx0XHRcdFx0Lyp2aWV3czoge1xyXG5cdFx0XHRcdFx0J3NpbmdsZVBvc3QtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9Ki9cclxuXHJcblxyXG5cdFx0XHR9KTtcclxuXHR9XHJcblxyXG5cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwudXNlcicsIFtdKS5jb25maWcoWyckc3RhdGVQcm92aWRlcicsXHJcblx0XHRmdW5jdGlvbigkc3RhdGVQcm92aWRlcikge1xyXG5cdFx0XHQkc3RhdGVQcm92aWRlci5cclxuXHRcdFx0c3RhdGUoJ2hvbWUudXNlcicsIHtcclxuXHRcdFx0XHR1cmw6ICcvdXNlcicsXHJcblx0XHRcdFx0J2Fic3RyYWN0JzogdHJ1ZSxcclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J3VzZXItdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC91c2VyL3ZpZXdzL3VzZXJQYXJlbnRQYWdlLmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnVXNlclBhcmVudENvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICd1cGMnXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0fSkuXHJcblx0XHRcdHN0YXRlKCdob21lLnVzZXIudXNlck1lUGFnZScsIHtcclxuXHRcdFx0XHR1cmw6ICcvdXNlck1lUGFnZScsXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCd1c2VyLXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvdXNlci92aWV3cy91c2VyTWVQYWdlLmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnVXNlck1lUGFnZUNvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICd1bXBjJyxcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0fSkuXHJcblx0XHRcdHN0YXRlKCdob21lLnVzZXJQYWdlJywge1xyXG5cdFx0XHRcdHVybDogJy91c2VyUGFnZS86dXNlcicsXHJcblx0XHRcdFx0cmVzb2x2ZToge1xyXG5cdFx0XHRcdFx0YmxvY2tlZDogWyAnJHN0YXRlUGFyYW1zJywgJ2Jsb2NrU2VydmljZScsJyRxJywgYmxvY2tlZF0sXHJcblx0XHRcdFx0XHRmcmllbmRzOiBbICckc3RhdGVQYXJhbXMnLCAncmV2ZWFsU2VydmljZScsJyRxJywgZnJpZW5kc11cclxuXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J2V4dHJhLXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvdXNlci92aWV3cy91c2VyUHJvZmlsZVBhZ2UuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdVc2VyUGFnZUNvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICd1cGMnXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRcclxuXHJcblx0XHRcdH0pXHJcblx0XHRcdC5zdGF0ZSgnaG9tZS51c2VyRWRpdFBhZ2UnLCB7XHJcblx0XHRcdFx0dXJsOiAnL3VzZXJFZGl0UGFnZScsXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdleHRyYS10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3VzZXIvdmlld3MvdXNlckVkaXRQYWdlLmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnVXNlckVkaXRQYWdlQ29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3VlcGMnLFxyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRdKTtcclxuXHRmdW5jdGlvbiBibG9ja2VkKCRzdGF0ZVBhcmFtcyxibG9ja1NlcnZpY2UsJHEpe1xyXG5cdFx0dmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuXHRcdGJsb2NrU2VydmljZS5jaGVjaygkc3RhdGVQYXJhbXMudXNlcikudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcblx0XHRcdFxyXG5cdFx0XHRpZihyZXNwb25zZS5kYXRhLmJsb2NrZWQ9PT10cnVlKXtcclxuXHRcdFx0XHR3aW5kb3cuYWxlcnQoXCJCbG9ja2VkIHByb2ZpbGVcIik7XHJcblx0XHRcdFx0d2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2V7XHJcblx0XHRcdFx0ZGVmZXIucmVzb2x2ZSgpO1x0XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHRcdFxyXG5cdFx0fSkuY2F0Y2goZnVuY3Rpb24oKXtcclxuXHRcdFx0ZGVmZXIucmVzb2x2ZSgpO1x0XHJcblx0XHR9KTtcclxuXHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cdH1cclxuXHRmdW5jdGlvbiBmcmllbmRzKCRzdGF0ZVBhcmFtcyxyZXZlYWxTZXJ2aWNlLCRxKXtcclxuXHRcdHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XHJcblxyXG5cclxuXHRcdHJldmVhbFNlcnZpY2UuY2hlY2soJHN0YXRlUGFyYW1zLnVzZXIpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG5cdFx0XHRcclxuXHRcdFx0ZGVmZXIucmVzb2x2ZShyZXNwb25zZS5kYXRhLnN0YXR1cyk7XHJcblx0XHRcdC8vcmV0dXJuIDtcclxuXHRcdH0pLmNhdGNoKGZ1bmN0aW9uKCl7XHJcblx0XHRcdFxyXG5cdFx0fSk7XHJcblx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZTtcclxuXHR9XHJcblxyXG5cdFxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5jaGF0JylcclxuXHRcdC5jb250cm9sbGVyKCdBbGxDaGF0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZScsICdjaGF0U2VydmljZScsICckaW9uaWNMb2FkaW5nJywgJ1NvY2tldCcsQWxsQ2hhdENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gQWxsQ2hhdENvbnRyb2xsZXIoJHNjb3BlLCAkc3RhdGUsIGNoYXRTZXJ2aWNlLCAkaW9uaWNMb2FkaW5nLFNvY2tldCkge1xyXG5cdFx0dmFyIGFjYyA9IHRoaXM7XHJcblx0XHRhY2MuZ2V0QWxsQ2hhdFJvb21zID0gZ2V0QWxsQ2hhdFJvb21zO1xyXG5cdFx0YWNjLmxvYWRNb3JlQ2hhdHMgPSBsb2FkTW9yZUNoYXRzO1xyXG5cdFx0YWNjLnB1bGxSZWZyZXNoQ2hhdHMgPSBwdWxsUmVmcmVzaENoYXRzO1xyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHRcdFNvY2tldC5vbignbmV3TWVzc2FnZVJlY2VpdmVkJywgbWVzc2FnZVJlY2VpdmVkKTtcclxuXHRcdFxyXG5cdFx0YWNjLmNoYXRQYWdlID0gZnVuY3Rpb24odXNlcklkKXtcclxuXHRcdFx0JHN0YXRlLmdvKCdjaGF0Qm94JywgeyB1c2VyOiB1c2VySWR9KTtcclxuXHRcdH07XHJcblx0XHRmdW5jdGlvbiBtZXNzYWdlUmVjZWl2ZWQobWVzc2FnZSl7XHJcblx0XHRcdHZhciBuZXdDaGF0Um9vbSA9IHt9O1xyXG5cdFx0XHRuZXdDaGF0Um9vbS5jcmVhdG9yMiA9IG1lc3NhZ2UudXNlcjtcclxuXHRcdFx0bmV3Q2hhdFJvb20ubmV3Q2hhdCA9IHRydWU7XHJcblx0XHRcdG5ld0NoYXRSb29tLmxhc3RNZXNzYWdlID0ge1xyXG5cdFx0XHRcdHVzZXI6bWVzc2FnZS51c2VyLl9pZCxcclxuXHRcdFx0XHRfaWQ6bWVzc2FnZS5faWQsXHJcblx0XHRcdFx0bWVzc2FnZTptZXNzYWdlLm1lc3NhZ2UsXHJcblx0XHRcdFx0dHlwZTogbWVzc2FnZS50eXBlXHJcblx0XHRcdH07XHJcblx0XHRcclxuXHJcblx0XHRcdGZvcih2YXIgY2g9MDtjaDxhY2MuY2hhdFJvb21zTGlzdC5sZW5ndGg7Y2grKyl7XHJcblx0XHRcdFx0aWYobmV3Q2hhdFJvb20uY3JlYXRvcjIuX2lkPT1hY2MuY2hhdFJvb21zTGlzdFtjaF0uY3JlYXRvcjIuX2lkKXtcclxuXHRcdFx0XHRcdGlmIChuZXdDaGF0Um9vbS5sYXN0TWVzc2FnZS5faWQgIT09IGFjYy5jaGF0Um9vbXNMaXN0W2NoXS5sYXN0TWVzc2FnZS5faWQpIHtcclxuXHRcdFx0XHRcdFx0YWNjLmNoYXRSb29tc0xpc3Quc3BsaWNlKGNoLDEpO1xyXG5cdFx0XHRcdFx0XHRhY2MuY2hhdFJvb21zTGlzdC51bnNoaWZ0KG5ld0NoYXRSb29tKTtcclxuXHRcdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBwdWxsUmVmcmVzaENoYXRzKCkge1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGxvYWRNb3JlQ2hhdHMoKSB7XHJcblx0XHRcdGFjYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXRBbGxDaGF0Um9vbXMoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRBbGxDaGF0Um9vbXMoKSB7XHJcblx0XHRcdGNoYXRTZXJ2aWNlLmdldEFsbENoYXRSb29tcyhhY2MucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0YW5ndWxhci5mb3JFYWNoKHJlc3BvbnNlLmRhdGEuZG9jcywgZnVuY3Rpb24odmFsdWUpIHtcclxuXHRcdFx0XHRcdGFjYy5jaGF0Um9vbXNMaXN0LnB1c2godmFsdWUpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGFjYy5ub1Bvc3RzID0hcmVzcG9uc2UuZGF0YS50b3RhbDtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRhY2MuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IHRydWU7XHJcblx0XHRcdFx0aWYgKHJlc3BvbnNlLmRhdGEudG90YWwgPiBhY2MuY2hhdFJvb21zTGlzdC5sZW5ndGgpIHtcclxuXHRcdFx0XHRcdGFjYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNle1xyXG5cdFx0XHRcdFx0YWNjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1x0XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHRhY2MuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHJcblx0XHRcdGFjYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gZmFsc2U7XHJcblx0XHRcdGFjYy5wYXJhbXMgPSB7XHJcblx0XHRcdFx0cGFnZTogMSxcclxuXHRcdFx0XHRsaW1pdDogMjVcclxuXHRcdFx0fTtcclxuXHRcdFx0YWNjLmNoYXRSb29tc0xpc3QgPSBbXTtcclxuXHRcdFx0Z2V0QWxsQ2hhdFJvb21zKCk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5jaGF0JylcclxuXHJcblx0LmNvbnRyb2xsZXIoJ0NoYXRCb3hDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHRpbWVvdXQnLCAnU29ja2V0JywgJyRzdGF0ZVBhcmFtcycsICd1c2VyRGF0YScsICdob21lU2VydmljZScsICdjaGF0U2VydmljZScsICckaW9uaWNTY3JvbGxEZWxlZ2F0ZScsICd1c2VyU2VydmljZScsICdVcGxvYWQnLCAnJGlvbmljTG9hZGluZycsICckd2luZG93JywgJ2Jsb2NrZWQnLCBDaGF0Qm94Q29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBDaGF0Qm94Q29udHJvbGxlcigkc2NvcGUsICR0aW1lb3V0LCBTb2NrZXQsICRzdGF0ZVBhcmFtcywgdXNlckRhdGEsIGhvbWVTZXJ2aWNlLCBjaGF0U2VydmljZSwgJGlvbmljU2Nyb2xsRGVsZWdhdGUsIHVzZXJTZXJ2aWNlLCBVcGxvYWQsICRpb25pY0xvYWRpbmcsICR3aW5kb3csIGJsb2NrZWQpIHtcclxuXHRcdHZhciBjYmMgPSB0aGlzO1xyXG5cdFx0Y2JjLmlzQmxvY2tlZCA9IGJsb2NrZWQ7XHJcblx0XHRpZiAoY2JjLmlzQmxvY2tlZCA9PT0gdHJ1ZSkge1xyXG5cdFx0XHR3aW5kb3cuYWxlcnQoXCJibG9ja2VkIHByb2ZpbGVcIik7XHJcblx0XHR9XHJcblx0XHRjYmMuY3VycmVudFVzZXIgPSB1c2VyRGF0YS5nZXRVc2VyKCkuX2lkO1xyXG5cdFx0Y2JjLnJlY2VpdmVyVXNlcklEID0gJHN0YXRlUGFyYW1zLnVzZXI7XHJcblx0XHRjYmMuY2hhdExpc3QgPSBbXTtcclxuXHRcdGNiYy5jaGF0Um9vbUlkID0gJyc7XHJcblx0XHRjYmMubG9hZE1vcmVDaGF0cyA9IGxvYWRNb3JlQ2hhdHM7XHJcblx0XHRjYmMuc2Nyb2xsQm90dG9tID0gc2Nyb2xsQm90dG9tO1xyXG5cdFx0Y2JjLm1lc3NhZ2VMb2FkaW5nID0gZmFsc2U7XHJcblx0XHRjYmMubWVzc2FnZVRyeUNvdW50ID0gMDtcclxuXHRcdGNiYy5wYXJhbXMgPSB7XHJcblx0XHRcdHBhZ2U6IDEsXHJcblx0XHRcdGxpbWl0OiA1XHJcblx0XHR9O1xyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBsb2FkTW9yZUNoYXRzKCkge1xyXG5cdFx0XHRjYmMucGFyYW1zLnBhZ2UgKz0gMTtcclxuXHRcdFx0Z2V0Q2hhdE1lc3NhZ2VzKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0UmVjZWl2ZXIoKSB7XHJcblx0XHRcdHVzZXJTZXJ2aWNlLmdldFVzZXIoY2JjLnJlY2VpdmVyVXNlcklEKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0Y2JjLnJlY2VpdmVyVXNlciA9IHJlc3BvbnNlLmRhdGE7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBzY3JvbGxCb3R0b20oKSB7XHJcblx0XHRcdCR0aW1lb3V0KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRpb25pY1Njcm9sbERlbGVnYXRlLnNjcm9sbEJvdHRvbSh0cnVlKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldENoYXRNZXNzYWdlcygpIHtcclxuXHRcdFx0Y2hhdFNlcnZpY2UuZ2V0Q2hhdE1lc3NhZ2VzKGNiYy5jaGF0Um9vbUlkLCBjYmMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cclxuXHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzLmRhdGEuZG9jcywgZnVuY3Rpb24oY2hhdCkge1xyXG5cdFx0XHRcdFx0Y2JjLmNoYXRMaXN0LnVuc2hpZnQoY2hhdCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKHJlcykge1xyXG5cclxuXHRcdFx0XHRjb25zb2xlLmxvZyhyZXMpO1xyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHNjcm9sbEJvdHRvbSgpO1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0JGlvbmljTG9hZGluZy5zaG93KCk7XHJcblx0XHRcdGNoYXRTZXJ2aWNlLmdldENoYXRSb29tKGNiYy5yZWNlaXZlclVzZXJJRCkudGhlbihmdW5jdGlvbihyZXMpIHtcclxuXHRcdFx0XHRjYmMuY2hhdFJvb20gPSByZXMuZGF0YTtcclxuXHRcdFx0XHRjYmMuY2hhdFJvb21JZCA9IHJlcy5kYXRhLl9pZDtcclxuXHJcblx0XHRcdFx0c29ja2V0Sm9pbigpO1xyXG5cdFx0XHRcdGdldENoYXRNZXNzYWdlcygpO1xyXG5cclxuXHRcdFx0fSwgZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdGdldFJlY2VpdmVyKCk7XHJcblxyXG5cclxuXHJcblx0XHR9XHJcblxyXG5cclxuXHRcdGZ1bmN0aW9uIHNvY2tldEpvaW4oKSB7XHJcblx0XHRcdFNvY2tldC5lbWl0KCdhZGRUb0NoYXRSb29tJywgeyAncm9vbUlkJzogY2JjLmNoYXRSb29tSWQgfSk7XHJcblx0XHRcdFNvY2tldC5vbignbWVzc2FnZVJlY2VpdmVkJywgZnVuY3Rpb24obWVzc2FnZSkge1xyXG5cclxuXHRcdFx0XHRjYmMuY2hhdExpc3QucHVzaChtZXNzYWdlKTtcclxuXHRcdFx0XHRzY3JvbGxCb3R0b20oKTtcclxuXHRcdFx0XHRjYmMubWVzc2FnZUxvYWRpbmcgPSBmYWxzZTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGNiYy5jbGlja1N1Ym1pdCA9IGZ1bmN0aW9uKCRldmVudCkge1xyXG5cclxuXHRcdFx0Y2JjLm1lc3NhZ2VMb2FkaW5nID0gdHJ1ZTtcclxuXHRcdFx0Y2JjLmZvY3VzSW5wdXQgPSB0cnVlO1xyXG5cclxuXHRcdFx0aWYgKHdpbmRvdy5jb3Jkb3ZhICkge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdHdpbmRvdy5jb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQuc2hvdygpO1xyXG5cdFx0XHRcdC8vd2luZG93LmNvcmRvdmEuZmlyZVdpbmRvd0V2ZW50KCduYXRpdmUua2V5Ym9hcmRzaG93JywgeydrZXlib2FyZEhlaWdodCc6ICsyNjJ9KTtcclxuICAgICAgICAgICAgXHRcdFx0XHR3aW5kb3cuY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmlzVmlzaWJsZSA9IHRydWU7XHJcblx0XHRcdH1cclxuXHRcdFx0c2Nyb2xsQm90dG9tKCk7XHJcblx0XHRcdHZhciBjaGF0T2JqID0geyAnbWVzc2FnZSc6IGNiYy5teU1zZywgcmVjZWl2ZXI6ICRzdGF0ZVBhcmFtcy51c2VyLCAncm9vbUlkJzogY2JjLmNoYXRSb29tSWQgfTtcclxuXHRcdFx0Y2hhdFNlcnZpY2Uuc2VuZENoYXRNZXNzYWdlKGNoYXRPYmopLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblx0XHRcdFx0Y2JjLm15TXNnID0gJyc7XHJcblx0XHRcdFx0Y2JjLmNoYXRMaXN0LnB1c2gocmVzLmRhdGEubWVzc2FnZSk7XHJcblx0XHRcdFx0c2Nyb2xsQm90dG9tKCk7XHJcblx0XHRcdFx0Y2JjLm1lc3NhZ2VUcnlDb3VudCA9IDA7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdC8vY29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRjYmMubWVzc2FnZVRyeUNvdW50ICs9IDE7XHJcblxyXG5cdFx0XHRcdGlmIChjYmMubWVzc2FnZVRyeUNvdW50IDw9IDMpIHtcclxuXHRcdFx0XHRcdGNiYy5jbGlja1N1Ym1pdCgpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0Y2JjLm1lc3NhZ2VMb2FkaW5nID0gZmFsc2U7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdFx0fTtcclxuXHJcblxyXG5cdFx0Y2JjLnN1Ym1pdFVwbG9hZCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRjYmMubWVzc2FnZUxvYWRpbmcgPSB0cnVlO1xyXG5cdFx0XHRjYmMuZmlsZS51cGxvYWQgPSBVcGxvYWQudXBsb2FkKHtcclxuXHRcdFx0XHR1cmw6IGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAndXBsb2FkL3NpbmdsZVVwbG9hZCcsXHJcblx0XHRcdFx0ZGF0YTogeyBmaWxlOiBjYmMuZmlsZSB9XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0Y2JjLmZpbGUudXBsb2FkLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRjYmMuZmlsZS5yZXN1bHQgPSByZXNwb25zZS5kYXRhO1xyXG5cdFx0XHRcdGNiYy51cGxvYWRlZEltYWdlID0gcmVzcG9uc2UuZGF0YTtcclxuXHRcdFx0XHRjYmMuY2FuY2VsVXBsb2FkKCk7XHJcblx0XHRcdFx0dmFyIGNoYXRPYmogPSB7ICdtZXNzYWdlJzogY2JjLnVwbG9hZGVkSW1hZ2UsIHJlY2VpdmVyOiAkc3RhdGVQYXJhbXMudXNlciwgJ3Jvb21JZCc6IGNiYy5jaGF0Um9vbUlkLCB0eXBlOiAnaW1nJyB9O1xyXG5cdFx0XHRcdGNoYXRTZXJ2aWNlLnNlbmRDaGF0TWVzc2FnZShjaGF0T2JqKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cdFx0XHRcdFx0c2Nyb2xsQm90dG9tKCk7XHJcblx0XHRcdFx0XHRjYmMuY2hhdExpc3QucHVzaChyZXMuZGF0YS5tZXNzYWdlKTtcclxuXHRcdFx0XHRcdGNiYy5tZXNzYWdlTG9hZGluZyA9IGZhbHNlO1xyXG5cdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHJcblx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblx0XHRjYmMuY2FuY2VsVXBsb2FkID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdGNiYy5zaG93VGVtcEltYWdlID0gZmFsc2U7XHJcblx0XHRcdGNiYy50ZW1wSW1hZ2VVcmwgPSAnJztcclxuXHRcdH07XHJcblx0XHRjYmMudXBsb2FkU2luZ2xlSW1hZ2UgPSBmdW5jdGlvbihmaWxlLCBlcnJGaWxlcykge1xyXG5cdFx0XHRjYmMuZmlsZSA9IGZpbGU7XHJcblx0XHRcdGNiYy5lcnJGaWxlID0gZXJyRmlsZXMgJiYgZXJyRmlsZXNbMF07XHJcblx0XHRcdGlmIChmaWxlKSB7XHJcblx0XHRcdFx0Y2JjLnNob3dUZW1wSW1hZ2UgPSB0cnVlO1xyXG5cdFx0XHRcdGNiYy50ZW1wSW1hZ2VVcmwgPSBmaWxlO1xyXG5cdFx0XHRcdHNjcm9sbEJvdHRvbSgpO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0Y2JjLmxlYXZlQ2hhdEJveCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRTb2NrZXQuZW1pdCgncmVtb3ZlRnJvbVJvb20nLCB7ICdyb29tSWQnOiBjYmMuY2hhdFJvb21JZCB9KTtcclxuXHJcblx0XHRcdGNoYXRTZXJ2aWNlLnVwZGF0ZUNoYXRSb29tKGNiYy5jaGF0Um9vbUlkKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Ly9jb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cclxuXHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0JHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuXHJcblxyXG5cdFx0fTtcclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcblxyXG4vKnVzZXJTZXJ2aWNlLmdldFVzZXJEZXRhaWxzKGNiYy5yZWNlaXZlclVzZXJJRElkLCB7ICdmaWVsZHMnOiAnZGlzcGxheU5hbWUgZmlyc3ROYW1lJyB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcInRoZSByZWNlaXZlclwiKTtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xyXG5cdFx0XHRcdFx0Y2JjLnJlY2VpdmVyVXNlcklEID0gcmVzcG9uc2UuZGF0YS5kaXNwbGF5TmFtZSB8fCAocmVzcG9uc2UuZGF0YS5maXJzdE5hbWUpO1xyXG5cdFx0XHRcdH0pOyovXHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKXtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmNoYXQnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ0NoYXRQYXJlbnRDb250cm9sbGVyJyxbQ2hhdFBhcmVudENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gQ2hhdFBhcmVudENvbnRyb2xsZXIoKXtcclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7IiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmNoYXQnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ1JldmVhbGVkQ2hhdENvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGUnLCAnY2hhdFNlcnZpY2UnLCAnJGlvbmljTG9hZGluZycsICdTb2NrZXQnLCBSZXZlYWxlZENoYXRDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFJldmVhbGVkQ2hhdENvbnRyb2xsZXIoJHNjb3BlLCAkc3RhdGUsIGNoYXRTZXJ2aWNlLCAkaW9uaWNMb2FkaW5nLCBTb2NrZXQpIHtcclxuXHRcdHZhciBhY2MgPSB0aGlzO1xyXG5cdFx0YWNjLmdldFJldmVhbGVkQ2hhdFJvb21zID0gZ2V0UmV2ZWFsZWRDaGF0Um9vbXM7XHJcblx0XHRhY2MubG9hZE1vcmVDaGF0cyA9IGxvYWRNb3JlQ2hhdHM7XHJcblx0XHRhY2MucHVsbFJlZnJlc2hDaGF0cyA9IHB1bGxSZWZyZXNoQ2hhdHM7XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoQ2hhdHMoKSB7XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblx0XHR9XHJcblx0XHRTb2NrZXQub24oJ25ld01lc3NhZ2VSZWNlaXZlZCcsIG1lc3NhZ2VSZWNlaXZlZCk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gbWVzc2FnZVJlY2VpdmVkKG1lc3NhZ2UpIHtcclxuXHRcdFx0dmFyIG5ld0NoYXRSb29tID0ge307XHJcblx0XHRcdG5ld0NoYXRSb29tLmNyZWF0b3IyID0gbWVzc2FnZS51c2VyO1xyXG5cdFx0XHRuZXdDaGF0Um9vbS5uZXdDaGF0ID0gdHJ1ZTtcclxuXHRcdFx0bmV3Q2hhdFJvb20ubGFzdE1lc3NhZ2UgPSB7XHJcblx0XHRcdFx0dXNlcjogbWVzc2FnZS51c2VyLl9pZCxcclxuXHRcdFx0XHRfaWQ6IG1lc3NhZ2UuX2lkLFxyXG5cdFx0XHRcdG1lc3NhZ2U6IG1lc3NhZ2UubWVzc2FnZSxcclxuXHRcdFx0XHR0eXBlOiBtZXNzYWdlLnR5cGVcclxuXHRcdFx0fTtcclxuXHJcblxyXG5cdFx0XHRmb3IgKHZhciBjaCA9IDA7IGNoIDwgYWNjLmNoYXRSb29tc0xpc3QubGVuZ3RoOyBjaCsrKSB7XHJcblx0XHRcdFx0aWYgKG5ld0NoYXRSb29tLmNyZWF0b3IyLl9pZCA9PSBhY2MuY2hhdFJvb21zTGlzdFtjaF0uY3JlYXRvcjIuX2lkKSB7XHJcblx0XHRcdFx0XHRpZiAobmV3Q2hhdFJvb20ubGFzdE1lc3NhZ2UuX2lkICE9PSBhY2MuY2hhdFJvb21zTGlzdFtjaF0ubGFzdE1lc3NhZ2UuX2lkKSB7XHJcblx0XHRcdFx0XHRcdGFjYy5jaGF0Um9vbXNMaXN0LnNwbGljZShjaCwgMSk7XHJcblx0XHRcdFx0XHRcdGFjYy5jaGF0Um9vbXNMaXN0LnVuc2hpZnQobmV3Q2hhdFJvb20pO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBsb2FkTW9yZUNoYXRzKCkge1xyXG5cdFx0XHRhY2MucGFyYW1zLnBhZ2UgKz0gMTtcclxuXHRcdFx0Z2V0UmV2ZWFsZWRDaGF0Um9vbXMoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSZXZlYWxlZENoYXRSb29tcygpIHtcclxuXHRcdFx0Y2hhdFNlcnZpY2UuZ2V0UmV2ZWFsZWRDaGF0Um9vbXMoYWNjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRhY2MuY2hhdFJvb21zTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhY2Mubm9Qb3N0cyA9ICFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdGFjYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFjYy5jaGF0Um9vbXNMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YWNjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGFjYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHRhY2MuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHJcblx0XHRcdGFjYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gZmFsc2U7XHJcblx0XHRcdGFjYy5wYXJhbXMgPSB7XHJcblx0XHRcdFx0cGFnZTogMSxcclxuXHRcdFx0XHRsaW1pdDogMjVcclxuXHRcdFx0fTtcclxuXHRcdFx0YWNjLmNoYXRSb29tc0xpc3QgPSBbXTtcclxuXHRcdFx0Z2V0UmV2ZWFsZWRDaGF0Um9vbXMoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmNoYXQnKVxyXG5cdFx0LnNlcnZpY2UoJ2NoYXRTZXJ2aWNlJywgWyckaHR0cCcsICckc3RhdGVQYXJhbXMnLCAnaG9tZVNlcnZpY2UnLCBSZXZpZXdTZXJ2aWNlXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFJldmlld1NlcnZpY2UoJGh0dHAsICRzdGF0ZVBhcmFtcywgaG9tZVNlcnZpY2UpIHtcclxuXHRcdHZhciBycyA9IHRoaXM7XHJcblx0XHRycy5zZW5kQ2hhdE1lc3NhZ2UgPSBzZW5kQ2hhdE1lc3NhZ2U7XHJcblx0XHRycy5nZXRDaGF0TWVzc2FnZXMgPSBnZXRDaGF0TWVzc2FnZXM7XHJcblx0XHRycy5nZXRDaGF0Um9vbSA9IGdldENoYXRSb29tO1xyXG5cdFx0cnMuZ2V0QWxsQ2hhdFJvb21zID0gZ2V0QWxsQ2hhdFJvb21zO1xyXG5cdFx0cnMuZ2V0UmV2ZWFsZWRDaGF0Um9vbXMgPSBnZXRSZXZlYWxlZENoYXRSb29tcztcclxuXHRcdHJzLnVwZGF0ZUNoYXRSb29tID0gdXBkYXRlQ2hhdFJvb207XHJcblx0XHRycy5kZWxldGVDaGF0Um9vbSA9IGRlbGV0ZUNoYXRSb29tO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGRlbGV0ZUNoYXRSb29tKGlkKXtcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdjaGF0Um9vbS9kZWxldGUvJyArIGlkKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHNlbmRDaGF0TWVzc2FnZShjaGF0KSB7XHJcblx0XHRcdFxyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ2NoYXQvY3JlYXRlLycgKyBjaGF0LnJvb21JZCwgY2hhdCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0Q2hhdE1lc3NhZ2VzKGNoYXRSb29tSWQscGFyYW1zKSB7XHJcblx0XHRcdFxyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAnY2hhdC9nZXRDaGF0cy8nICsgY2hhdFJvb21JZCx7cGFyYW1zOnBhcmFtc30pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldENoYXRSb29tKHVzZXIpIHtcclxuXHRcdFx0XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdjaGF0Um9vbS9nZXQvJyArIHVzZXIpO1xyXG5cclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldEFsbENoYXRSb29tcyhwYXJhbXMpIHtcclxuXHRcdFx0cGFyYW1zLnJldmVhbGVkID0gZmFsc2U7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdjaGF0Um9vbS9hbGwvJyx7cGFyYW1zOnBhcmFtc30pO1xyXG5cclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldFJldmVhbGVkQ2hhdFJvb21zKHBhcmFtcykge1xyXG5cdFx0XHRwYXJhbXMucmV2ZWFsZWQgPSB0cnVlO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAnY2hhdFJvb20vYWxsLycse3BhcmFtczpwYXJhbXN9KTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiB1cGRhdGVDaGF0Um9vbShpZCl7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwrJ2NoYXRSb29tL3VwZGF0ZS8nK2lkKTtcclxuXHRcdH1cclxuXHJcblx0XHRcclxuXHJcblxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcil7XG4ndXNlIHN0cmljdCc7XG5hbmd1bGFyLm1vZHVsZSgncGV0YWwuY2hhdCcpLmZhY3RvcnkoJ1NvY2tldCcsIFsnc29ja2V0RmFjdG9yeScsJ2hvbWVTZXJ2aWNlJyxTb2NrZXRGYWN0b3J5XSk7XG4gICAgXG4gICAgZnVuY3Rpb24gU29ja2V0RmFjdG9yeShzb2NrZXRGYWN0b3J5LGhvbWVTZXJ2aWNlKSB7XG4gICAgICAgIHJldHVybiBzb2NrZXRGYWN0b3J5KHtcbiAgICAgICAgICAgIHByZWZpeDogJycsXG4gICAgICAgICAgICBpb1NvY2tldDogaW8uY29ubmVjdChob21lU2VydmljZS5iYXNlVVJMKVxuICAgICAgICB9KTtcbiAgICB9XG5cbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcil7XG4ndXNlIHN0cmljdCc7XG5cblxuXG5hbmd1bGFyLm1vZHVsZSgncGV0YWwuY2hhdCcpXG5cdC5mYWN0b3J5KCdTb2NrZXRVc2VyU2VydmljZScsIFsnc29ja2V0RmFjdG9yeScsJ3VzZXJEYXRhJywnaG9tZVNlcnZpY2UnLHNvY2tldEZhY3RvcnlGdW5jdGlvbl0pO1xuICAgIGZ1bmN0aW9uIHNvY2tldEZhY3RvcnlGdW5jdGlvbihzb2NrZXRGYWN0b3J5LHVzZXJEYXRhLGhvbWVTZXJ2aWNlKSB7XG4gICAgICAgIHJldHVybiBzb2NrZXRGYWN0b3J5KHtcbiAgICAgICAgICAgIHByZWZpeDogJycsXG4gICAgICAgICAgICBpb1NvY2tldDogaW8uY29ubmVjdChob21lU2VydmljZS5iYXNlVVJMK3VzZXJEYXRhLmdldFVzZXIoKS5faWQpXG4gICAgICAgIH0pO1xuICAgIH1cbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmhvbWUnKVxyXG5cdFx0LmNvbnRyb2xsZXIoXCJBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXJcIiwgW1wiJHNjb3BlXCIsIFwiJGF1dGhcIiwgXCIkc3RhdGVcIiwgXCJ1c2VyRGF0YVwiLCAndXNlckxvY2F0aW9uU2VydmljZScsICckaW9uaWNMb2FkaW5nJywgJ1JlcXVlc3RzU2VydmljZScsICckaW9uaWNNb2RhbCcsIEF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIoJHNjb3BlLCAkYXV0aCwgJHN0YXRlLCB1c2VyRGF0YSwgdXNlckxvY2F0aW9uU2VydmljZSwgJGlvbmljTG9hZGluZywgUmVxdWVzdHNTZXJ2aWNlLCAkaW9uaWNNb2RhbCkge1xyXG5cdFx0dmFyIHBoYyA9IHRoaXM7XHJcblxyXG5cdFx0cGhjLmlzQXV0aCA9ICRhdXRoLmlzQXV0aGVudGljYXRlZCgpO1xyXG5cdFx0aWYgKHBoYy5pc0F1dGgpIHtcclxuXHRcdFx0JHN0YXRlLmdvKCdob21lLnBvc3QuYWxsJyk7XHJcblx0XHR9XHJcblx0XHRpZiAod2luZG93LmNvcmRvdmEpIHtcclxuXHRcdFx0cGhjLndlYlNpZ25JbiA9IHRydWU7XHJcblx0XHR9XHJcblx0XHRwaGMuYXV0aExvZ291dCA9IGF1dGhMb2dvdXQ7XHJcblx0XHRwaGMubG9hZFBvc3RNb2RhbCA9IGxvYWRQb3N0TW9kYWw7XHJcblxyXG5cclxuXHRcdHBoYy5zb2NpYWxBdXRoZW50aWNhdGUgPSBzb2NpYWxBdXRoZW50aWNhdGU7XHJcblx0XHQkc2NvcGUuZ29vZ2xlU2lnbkluID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cclxuXHJcblx0XHRcdCRpb25pY0xvYWRpbmcuc2hvdyh7XHJcblx0XHRcdFx0dGVtcGxhdGU6ICdMb2dnaW5nIGluLi4uJ1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdHdpbmRvdy5wbHVnaW5zLmdvb2dsZXBsdXMubG9naW4oe1xyXG5cdFx0XHRcdFx0d2ViQ2xpZW50SWQ6ICc3OTIwNjg1NjUwMDctcmRtN25ybGZtYzI5anZscW81bDB0a2d1NmNpMHZib2EuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20nXHJcblxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0ZnVuY3Rpb24odXNlcl9kYXRhKSB7XHJcblx0XHRcdFx0XHR2YXIgcHJvZmlsZSA9IHt9O1xyXG5cdFx0XHRcdFx0cHJvZmlsZS5pZCA9IHVzZXJfZGF0YS51c2VySWQ7XHJcblx0XHRcdFx0XHRwcm9maWxlLmRpc3BsYXlOYW1lID0gdXNlcl9kYXRhLmRpc3BsYXlOYW1lO1xyXG5cdFx0XHRcdFx0cHJvZmlsZS5pbWFnZVVybCA9IHVzZXJfZGF0YS5pbWFnZVVybDtcclxuXHRcdFx0XHRcdFJlcXVlc3RzU2VydmljZS5nb29nbGVTaWduSW4ocHJvZmlsZSlcclxuXHRcdFx0XHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdFx0XHQkYXV0aC5zZXRUb2tlbihyZXNwb25zZS5kYXRhLnRva2VuKTtcclxuXHRcdFx0XHRcdFx0XHRzdWNjZXNzZnVsQXV0aGVudGljYXRpb24ocmVzcG9uc2UuZGF0YS51c2VyKTtcclxuXHRcdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCJlcnJvclwiKTtcclxuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHRcdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRmdW5jdGlvbihtc2cpIHtcclxuXHRcdFx0XHRcdGFsZXJ0KFwibWlzc2VkXCIpO1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2cobXNnKTtcclxuXHRcdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0KTtcclxuXHRcdH07XHJcblx0XHRmdW5jdGlvbiBzdWNjZXNzZnVsQXV0aGVudGljYXRpb24odXNlcikge1xyXG5cdFx0XHR1c2VyRGF0YS5zZXRVc2VyKHVzZXIpO1xyXG5cdFx0XHR1c2VyTG9jYXRpb25TZXJ2aWNlLnNldFVzZXJMb2NhdGlvbigpO1xyXG5cdFx0XHRSZXF1ZXN0c1NlcnZpY2UucmVnaXN0ZXIoKTtcclxuXHJcblx0XHRcdGlmICh1c2VyLmRldmljZV90b2tlbikge1xyXG5cdFx0XHRcdCRzdGF0ZS5nbygnaG9tZS5wb3N0LnBvcHVsYXInKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUudXNlckVkaXRQYWdlJyk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBzb2NpYWxBdXRoZW50aWNhdGUocHJvdmlkZXIpIHtcclxuXHRcdFx0JGlvbmljTG9hZGluZy5zaG93KCk7XHJcblx0XHRcdCRhdXRoLmF1dGhlbnRpY2F0ZShwcm92aWRlcikudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdHN1Y2Nlc3NmdWxBdXRoZW50aWNhdGlvbihyZXNwb25zZS5kYXRhLnVzZXIpO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0Ly8kaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cclxuXHRcdGZ1bmN0aW9uIGxvYWRQb3N0TW9kYWwoKSB7XHJcblx0XHRcdCRpb25pY01vZGFsLmZyb21UZW1wbGF0ZVVybCgnYXBwL2hvbWUvdmlld3MvcG9saWN5Lmh0bWwnLCB7XHJcblx0XHRcdFx0c2NvcGU6ICRzY29wZVxyXG5cdFx0XHR9KS50aGVuKGZ1bmN0aW9uKG1vZGFsKSB7XHJcblx0XHRcdFx0JHNjb3BlLm1vZGFsID0gbW9kYWw7XHJcblx0XHRcdFx0JHNjb3BlLm1vZGFsLnNob3coKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cclxuXHRcdGZ1bmN0aW9uIGF1dGhMb2dvdXQoKSB7XHJcblx0XHRcdCRhdXRoLmxvZ291dCgpO1xyXG5cdFx0XHR1c2VyRGF0YS5yZW1vdmVVc2VyKCk7XHJcblx0XHRcdCRzdGF0ZS5nbygnYXV0aGVudGljYXRlJyk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmhvbWUnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ0hvbWVDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ3VzZXJEYXRhJywgJ1NvY2tldCcsICd0b2FzdHInLCAnJGlvbmljVGFic0RlbGVnYXRlJywnJHJvb3RTY29wZScsSG9tZUNvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gSG9tZUNvbnRyb2xsZXIoJHNjb3BlLCAkc3RhdGUsIHVzZXJEYXRhLCBTb2NrZXQsIHRvYXN0ciwkaW9uaWNUYWJzRGVsZWdhdGUsJHJvb3RTY29wZSkge1xyXG5cdFx0dmFyIGhjID0gdGhpcztcclxuXHRcdGhjLmJhZGdlVmFsdWUgPSAnJztcclxuXHRcdGhjLmNoYXRDbGlja2VkID0gY2hhdENsaWNrZWQ7XHJcblx0XHQvKlxyXG5cdFx0XHRDb2RlIGZvciBoaWRpbmcgdGhlIGhlYWRlciBvbiBzY3JvbGwgdXAgYW5kIGRvd25cclxuXHRcdCovXHJcblx0XHQkcm9vdFNjb3BlLnNsaWRlSGVhZGVyID0gZmFsc2U7XHJcbiAgXHRcdCRyb290U2NvcGUuc2xpZGVIZWFkZXJQcmV2aW91cyA9IDA7XHJcblx0XHRTb2NrZXQub24oXCJjb25uZWN0XCIsIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRTb2NrZXQuZW1pdCgnYWRkVG9TaW5nbGVSb29tJywgeyAncm9vbUlkJzogdXNlckRhdGEuZ2V0VXNlcigpLl9pZCB9KTtcclxuXHRcdFx0U29ja2V0Lm9uKCduZXdNZXNzYWdlUmVjZWl2ZWQnLCBtZXNzYWdlUmVjZWl2ZWQpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gbWVzc2FnZVJlY2VpdmVkKG1lc3NhZ2UpIHtcclxuXHRcdFx0dmFyIG1lc3NhZ2VTdHJpbmcgPSBtZXNzYWdlLm1lc3NhZ2U7XHJcblx0XHRcdGlmKG1lc3NhZ2UudHlwZSAmJiBtZXNzYWdlLnR5cGU9PSdpbWcnKXtcclxuXHRcdFx0XHRtZXNzYWdlU3RyaW5nID0gJ05ldyBpbWFnZSc7XHJcblx0XHRcdH1cclxuXHRcdFx0dmFyIHVzZXJOYW1lID0gbWVzc2FnZS51c2VyLmFub25OYW1lfHxtZXNzYWdlLnVzZXIuZmFjZWJvb2tOYW1lIHx8bWVzc2FnZS51c2VyLmdvb2dsZU5hbWUgO1xyXG5cdFx0XHRpZiAobWVzc2FnZS51c2VyLl9pZCA9PSB1c2VyRGF0YS5nZXRVc2VyKCkuX2lkKSB7XHJcblxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGlmICgkc3RhdGUuY3VycmVudC5uYW1lID09ICdjaGF0Qm94Jykge1xyXG5cclxuXHRcdFx0XHRcdGlmICgkc3RhdGUucGFyYW1zLnVzZXIgIT0gbWVzc2FnZS51c2VyLl9pZCkge1xyXG5cdFx0XHRcdFx0XHR0b2FzdHIuaW5mbygnPHA+JyArIHVzZXJOYW1lKyAnPC9wPjxwPicgKyBtZXNzYWdlU3RyaW5nICsgJzwvcD4nLCB7XHJcblx0XHRcdFx0XHRcdFx0YWxsb3dIdG1sOiB0cnVlLFxyXG5cdFx0XHRcdFx0XHRcdG9uVGFwOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRcdCRzdGF0ZS5nbygnY2hhdEJveCcsIHsgdXNlcjogbWVzc2FnZS51c2VyLl9pZCB9KTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdHRvYXN0ci5pbmZvKCc8cD4nICsgdXNlck5hbWUgKyAnPC9wPjxwPicgKyBtZXNzYWdlU3RyaW5nICsgJzwvcD4nLCB7XHJcblx0XHRcdFx0XHRcdGFsbG93SHRtbDogdHJ1ZSxcclxuXHRcdFx0XHRcdFx0b25UYXA6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdCRzdGF0ZS5nbygnY2hhdEJveCcsIHsgdXNlcjogbWVzc2FnZS51c2VyLl9pZCB9KTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRoYy5iYWRnZVZhbHVlID0gMTtcclxuXHJcblx0XHRcdFx0fVxyXG5cclxuXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGhjLmdvRm9yd2FyZCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcclxuXHRcdFx0dmFyIHNlbGVjdGVkID0gJGlvbmljVGFic0RlbGVnYXRlLnNlbGVjdGVkSW5kZXgoKTtcclxuXHRcdFx0aWYgKHNlbGVjdGVkICE9IC0xKSB7XHJcblx0XHRcdFx0aWYoc2VsZWN0ZWQ9PT0xKXtcclxuXHRcdFx0XHRcdCRpb25pY1RhYnNEZWxlZ2F0ZS5zZWxlY3Qoc2VsZWN0ZWQgKyAyKTtcdFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNle1xyXG5cdFx0XHRcdFx0JGlvbmljVGFic0RlbGVnYXRlLnNlbGVjdChzZWxlY3RlZCArIDEpO1x0XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdFxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRcdGhjLmdvQmFjayA9IGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0dmFyIHNlbGVjdGVkID0gJGlvbmljVGFic0RlbGVnYXRlLnNlbGVjdGVkSW5kZXgoKTtcclxuXHRcdFx0aWYgKHNlbGVjdGVkICE9PSAtMSAmJiBzZWxlY3RlZCAhPT0gMCkge1xyXG5cdFx0XHRcdGlmKHNlbGVjdGVkPT09Myl7XHJcblx0XHRcdFx0XHQkaW9uaWNUYWJzRGVsZWdhdGUuc2VsZWN0KHNlbGVjdGVkIC0gMik7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHQkaW9uaWNUYWJzRGVsZWdhdGUuc2VsZWN0KHNlbGVjdGVkIC0gMSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRcdGZ1bmN0aW9uIGNoYXRDbGlja2VkKCkge1xyXG5cdFx0XHRoYy5iYWRnZVZhbHVlID0gJyc7XHJcblx0XHRcdC8vJHN0YXRlLmdvKCdob21lLmNoYXQuYWxsJyk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5ob21lJylcclxuXHRcdC5kaXJlY3RpdmUoJ2Rpc3RhbmNlVmlldycsIFsncG9zdFNlcnZpY2UnLCAnJHRpbWVvdXQnLCBmdW5jdGlvbihwb3N0U2VydmljZSwgJHRpbWVvdXQpIHtcclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRyZXN0cmljdDogJ0UnLFxyXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL2hvbWUvdmlld3MvZGlzdGFuY2VWaWV3VGVtcGxhdGUuaHRtbCcsXHJcblx0XHRcdFx0c2NvcGU6IHtcclxuXHRcdFx0XHRcdHBvc2l0aW9uQ29yZHM6ICc9J1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdFx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSkge1xyXG5cdFx0XHRcdFx0JHRpbWVvdXQoZ2V0RGlzdGFuY2UsIDEwMDApO1xyXG5cclxuXHRcdFx0XHRcdGZ1bmN0aW9uIGdldERpc3RhbmNlKCkge1xyXG5cdFx0XHRcdFx0XHRpZiAoc2NvcGUucG9zaXRpb25Db3Jkcykge1xyXG5cdFx0XHRcdFx0XHRcdHNjb3BlLmRpc3RhbmNlT2JqID0ge1xyXG5cdFx0XHRcdFx0XHRcdFx0bGF0aXR1ZGU6IHNjb3BlLnBvc2l0aW9uQ29yZHNbMV0sXHJcblx0XHRcdFx0XHRcdFx0XHRsb25naXR1ZGU6IHNjb3BlLnBvc2l0aW9uQ29yZHNbMF0sXHJcblxyXG5cdFx0XHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHRcdFx0cG9zdFNlcnZpY2UuZ2V0RGlzdGFuY2Uoc2NvcGUuZGlzdGFuY2VPYmopLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRzY29wZS5kaXN0YW5jZU9iai5kaXN0YW5jZSA9IHJlcyArICcgbWknO1xyXG5cdFx0XHRcdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0XHRcdFx0c2NvcGUuZGlzdGFuY2VPYmouZGlzdGFuY2UgPSAnJztcclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRzY29wZS5kaXN0YW5jZU9iaiA9IHt9O1xyXG5cdFx0XHRcdFx0XHRcdHNjb3BlLmRpc3RhbmNlT2JqLmRpc3RhbmNlID0gJyc7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHJcblxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdH1dKVxyXG5cdFx0LmRpcmVjdGl2ZSgnaW9uaWNDdXN0b21TcGlubmVyJyxbaW9uaWNDdXN0b21TcGlubmVyXSk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gaW9uaWNDdXN0b21TcGlubmVyKCl7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvaG9tZS92aWV3cy9pb25pY0N1c3RvbVNwaW5uZXIuaHRtbCdcclxuXHRcdFx0fTtcclxuXHRcdH1cclxuXHRcdC8qLmRpcmVjdGl2ZSgnZXhwYW5kaW5nVGV4dGFyZWEnLCBbZnVuY3Rpb24oKSB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0cmVzdHJpY3Q6ICdBJyxcclxuXHRcdFx0XHRjb250cm9sbGVyOiBmdW5jdGlvbigkc2NvcGUsICRlbGVtZW50LCAkYXR0cnMsICR0aW1lb3V0KSB7XHJcblx0XHRcdFx0XHQkZWxlbWVudC5jc3MoJ21pbi1oZWlnaHQnLCAnMCcpO1xyXG5cdFx0XHRcdFx0JGVsZW1lbnQuY3NzKCdyZXNpemUnLCAnbm9uZScpO1xyXG5cdFx0XHRcdFx0JGVsZW1lbnQuY3NzKCdvdmVyZmxvdy15JywgJ2hpZGRlbicpO1xyXG5cdFx0XHRcdFx0c2V0SGVpZ2h0KDApO1xyXG5cdFx0XHRcdFx0JHRpbWVvdXQoc2V0SGVpZ2h0VG9TY3JvbGxIZWlnaHQpO1xyXG5cclxuXHRcdFx0XHRcdGZ1bmN0aW9uIHNldEhlaWdodChoZWlnaHQpIHtcclxuXHRcdFx0XHRcdFx0JGVsZW1lbnQuY3NzKCdoZWlnaHQnLCBoZWlnaHQgKyAncHgnKTtcclxuXHRcdFx0XHRcdFx0JGVsZW1lbnQuY3NzKCdtYXgtaGVpZ2h0JywgaGVpZ2h0ICsgJ3B4Jyk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0ZnVuY3Rpb24gc2V0SGVpZ2h0VG9TY3JvbGxIZWlnaHQoKSB7XHJcblx0XHRcdFx0XHRcdHNldEhlaWdodCgwKTtcclxuXHRcdFx0XHRcdFx0dmFyIHNjcm9sbEhlaWdodCA9IGFuZ3VsYXIuZWxlbWVudCgkZWxlbWVudClbMF1cclxuXHRcdFx0XHRcdFx0XHQuc2Nyb2xsSGVpZ2h0O1xyXG5cdFx0XHRcdFx0XHRpZiAoc2Nyb2xsSGVpZ2h0ICE9PSB1bmRlZmluZWQpIHtcclxuXHRcdFx0XHRcdFx0XHRzZXRIZWlnaHQoc2Nyb2xsSGVpZ2h0KTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdCRzY29wZS4kd2F0Y2goZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiBhbmd1bGFyLmVsZW1lbnQoJGVsZW1lbnQpWzBdLnZhbHVlO1xyXG5cdFx0XHRcdFx0fSwgc2V0SGVpZ2h0VG9TY3JvbGxIZWlnaHQpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdH1dKSovXHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0dmFyIGltYWdlTW9kYWwgPSBmdW5jdGlvbigkaW9uaWNNb2RhbCkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVzdHJpY3Q6ICdBJyxcclxuXHRcdFx0c2NvcGU6IHtcclxuXHJcblx0XHRcdFx0aW1hZ2VNb2RhbDogJ0AnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKCRzY29wZSwgZWxlbSkge1xyXG5cclxuXHRcdFx0XHRmdW5jdGlvbiBzaG93SW1hZ2VNb2RhbChpbWFnZSkge1xyXG5cdFx0XHRcdFx0bG9hZE1vZGFsKCkudGhlbihmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0JHNjb3BlLmN1cnJlbnRJbWFnZSA9IGltYWdlO1xyXG5cdFx0XHRcdFx0XHQkc2NvcGUubW9kYWwuc2hvdygpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0ZnVuY3Rpb24gbG9hZE1vZGFsKCkge1xyXG5cdFx0XHRcdFx0cmV0dXJuICRpb25pY01vZGFsLmZyb21UZW1wbGF0ZVVybCgnYXBwL2NoYXQvdmlld3MvY2hhdEltYWdlTW9kYWwuaHRtbCcsIHtcclxuXHRcdFx0XHRcdFx0c2NvcGU6ICRzY29wZVxyXG5cdFx0XHRcdFx0fSkudGhlbihmdW5jdGlvbihtb2RhbCkge1xyXG5cdFx0XHRcdFx0XHQkc2NvcGUubW9kYWwgPSBtb2RhbDtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbGVtLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdFx0XHRcdHNob3dJbWFnZU1vZGFsKCRzY29wZS5pbWFnZU1vZGFsKTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHR9O1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5ob21lJykuZGlyZWN0aXZlKCdrZWVwU2Nyb2xsJywgW1xyXG5cdFx0JyRzdGF0ZScsICckdGltZW91dCcsICdTY3JvbGxQb3NpdGlvbnMnLCAnJGlvbmljU2Nyb2xsRGVsZWdhdGUnLFxyXG5cdFx0ZnVuY3Rpb24oJHN0YXRlLCAkdGltZW91dCwgU2Nyb2xsUG9zaXRpb25zLCAkaW9uaWNTY3JvbGxEZWxlZ2F0ZSkge1xyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUpIHtcclxuXHRcdFx0XHRcdHNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0U2Nyb2xsUG9zaXRpb25zWyRzdGF0ZS5jdXJyZW50Lm5hbWVdID0gJGlvbmljU2Nyb2xsRGVsZWdhdGUuZ2V0U2Nyb2xsUG9zaXRpb24oKTtcclxuXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdCR0aW1lb3V0KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHR2YXIgb2Zmc2V0O1xyXG5cdFx0XHRcdFx0XHRvZmZzZXQgPSBTY3JvbGxQb3NpdGlvbnNbJHN0YXRlLmN1cnJlbnQubmFtZV07XHJcblx0XHRcdFx0XHRcdGlmIChvZmZzZXQpIHtcclxuXHRcdFx0XHRcdFx0XHQkaW9uaWNTY3JvbGxEZWxlZ2F0ZS5zY3JvbGxUbyhvZmZzZXQubGVmdCwgb2Zmc2V0LnRvcCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdH1cclxuXHRdKS5mYWN0b3J5KCdTY3JvbGxQb3NpdGlvbnMnLCBbXHJcblx0XHRmdW5jdGlvbigpIHtcclxuXHRcdFx0cmV0dXJuIHt9O1xyXG5cdFx0fVxyXG5cdF0pLmRpcmVjdGl2ZSgnaXNGb2N1c2VkJywgWyckdGltZW91dCcsIGZ1bmN0aW9uKCR0aW1lb3V0KSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRzY29wZTogeyB0cmlnZ2VyOiAnQGlzRm9jdXNlZCcgfSxcclxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQpIHtcclxuXHJcblx0XHRcdFx0c2NvcGUuJHdhdGNoKCd0cmlnZ2VyJywgZnVuY3Rpb24odmFsdWUpIHtcclxuXHJcblx0XHRcdFx0XHRpZiAodmFsdWUgPT09ICd0cnVlJykge1xyXG5cdFx0XHRcdFx0XHQkdGltZW91dChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRlbGVtZW50WzBdLmZvY3VzKCk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdGVsZW1lbnQub24oJ2JsdXInLCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRcdC8vYWxlcnQoXCJoZWxsb1wiKTtcclxuXHRcdFx0XHRcdFx0XHRcdGVsZW1lbnRbMF0uZm9jdXMoKTtcclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH1dKS5kaXJlY3RpdmUoJ2xhenlJbWcnLCBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdC8qICAgICA8bGF6eS1pbWcgc3JjLWxhcmdlPVwiaHR0cDovL3lvdWJha3UuY29tL3VwbG9hZHMvcGxhY2VzX2ltYWdlcy9sYXJnZS97e2ltZ319XCIgc3JjLXNtYWxsPVwiaHR0cDovL3lvdWJha3UuY29tL2F0aHVtYi5waHA/ZmlsZT17e2ltZ319JnNtYWxsXCIgLz5cclxuXHRcdFx0ICovXHJcblx0XHRcdHJlcGxhY2U6IHRydWUsXHJcblx0XHRcdHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cImxhenktaW1nXCI+PGRpdiBjbGFzcz1cInNtXCI+PGltZyBzcmM9XCJ7e2ltZ1NtYWxsfX1cIiBjbGFzcz1cInNtYWxsXCIvPjwvZGl2PjxkaXYgc3R5bGU9XCJwYWRkaW5nLWJvdHRvbTogNzUlO1wiPjwvZGl2PjxpbWcgc3JjPVwie3tpbWdMYXJnZX19XCIgY2xhc3M9XCJsYXJnZVwiLz48L2Rpdj4nLFxyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdGltZ0xhcmdlOiAnQHNyY0xhcmdlJyxcclxuXHRcdFx0XHRpbWdTbWFsbDogJ0BzcmNTbWFsbCdcclxuXHRcdFx0fSxcclxuXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0dmFyIGltZ1NtYWxsID0gbmV3IEltYWdlKCk7XHJcblx0XHRcdFx0dmFyIGltZ0xhcmdlID0gbmV3IEltYWdlKCk7XHJcblx0XHRcdFx0aW1nU21hbGwuc3JjID0gc2NvcGUuaW1nU21hbGw7XHJcblx0XHRcdFx0aW1nU21hbGwub25sb2FkID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRlbGVtLmNoaWxkcmVuKCcuc20nKS5maW5kKCdpbWcnKS5jc3MoJ29wYWNpdHknLCAnMScpO1xyXG5cdFx0XHRcdFx0aW1nTGFyZ2Uuc3JjID0gc2NvcGUuaW1nTGFyZ2U7XHJcblx0XHRcdFx0XHRpbWdMYXJnZS5vbmxvYWQgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0ZWxlbS5maW5kKCdpbWcnKS5jc3MoJ29wYWNpdHknLCAnMScpO1xyXG5cdFx0XHRcdFx0fTtcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH0pLmRpcmVjdGl2ZSgnaW1hZ2VNb2RhbCcsIFsnJGlvbmljTW9kYWwnLCBpbWFnZU1vZGFsXSlcclxuXHQuZGlyZWN0aXZlKCd3YXRjaFNjcm9sbCcsWyckcm9vdFNjb3BlJyx3YXRjaFNjcm9sbF0pO1xyXG5cclxuXHRmdW5jdGlvbiB3YXRjaFNjcm9sbCgkcm9vdFNjb3BlKXtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLGVsZW0pe1xyXG5cclxuXHRcdFx0XHR2YXIgc3RhcnQgPSAwO1xyXG5cdFx0XHRcdHZhciB0aHJlc2hvbGQgPSAxNTA7XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdzY3JvbGwnLGZ1bmN0aW9uKGUpe1xyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHR2YXIgc2Nyb2xsVG9wID0gZS5zcmNFbGVtZW50LnNjcm9sbFRvcDtcclxuXHRcdFx0XHRcdGlmKHNjcm9sbFRvcC1zdGFydCA+IHRocmVzaG9sZCl7XHJcblx0XHRcdFx0XHRcdCRyb290U2NvcGUuc2xpZGVIZWFkZXIgPSB0cnVlO1xyXG5cdFx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHRcdCRyb290U2NvcGUuc2xpZGVIZWFkZXIgPSBmYWxzZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGlmKCRyb290U2NvcGUuc2xpZGVIZWFkZXJQcmV2aW91cyA+IHNjcm9sbFRvcCAtIHN0YXJ0KXtcclxuXHRcdFx0XHRcdFx0JHJvb3RTY29wZS5zbGlkZUhlYWRlciA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0JHJvb3RTY29wZS5zbGlkZUhlYWRlclByZXZpb3VzID0gc2Nyb2xsVG9wIC0gc3RhcnQ7XHJcblx0XHRcdFx0XHQkcm9vdFNjb3BlLiRhcHBseSgpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKXtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmhvbWUnKVxyXG5cdFx0LnNlcnZpY2UoJ2hvbWVTZXJ2aWNlJyxbJyRodHRwJywnVXBsb2FkJyxIb21lU2VydmljZV0pO1xyXG5cclxuXHRcdGZ1bmN0aW9uIEhvbWVTZXJ2aWNlKCRodHRwLFVwbG9hZCl7XHJcblx0XHRcdHRoaXMuYmFzZVVSTCA9ICdodHRwczovL3BldGFsY2hhdC1pbWFuaml0aHJlZGR5LmM5dXNlcnMuaW8vJztcclxuXHRcdFx0Ly90aGlzLmJhc2VVUkwgPSAnaHR0cHM6Ly9iYW5hbmEtc3VycHJpc2UtMzEzMzIuaGVyb2t1YXBwLmNvbS8nO1xyXG5cdFx0XHR0aGlzLmRlbGV0ZVVwbG9hZCA9IGRlbGV0ZVVwbG9hZDtcclxuXHRcdFx0dGhpcy5zdWJtaXRVcGxvYWQgPSBzdWJtaXRVcGxvYWQ7XHJcblx0XHRcdHRoaXMuZ2V0SW1hZ2VzID0gZ2V0SW1hZ2VzO1xyXG5cdFx0XHR2YXIgdGhhdCA9IHRoaXM7XHJcblx0XHRcdGZ1bmN0aW9uIGRlbGV0ZVVwbG9hZChpZCl7XHJcblx0XHRcdFx0cmV0dXJuICRodHRwLnBvc3QodGhhdC5iYXNlVVJMKyd1cGxvYWQvZGVsZXRlVXBsb2FkJywgeydkYXRhJyA6IHsncHVibGljX2lkJzppZH19ICk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZnVuY3Rpb24gZ2V0SW1hZ2VzKGltYWdlVGV4dCl7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coaW1hZ2VUZXh0KTtcclxuXHRcdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KHRoYXQuYmFzZVVSTCsndXBsb2FkL2dldEltYWdlcycse3BhcmFtczp7aW1hZ2VUZXh0OmltYWdlVGV4dH19KTtcclxuXHRcdFx0fVxyXG5cdFx0XHRmdW5jdGlvbiBzdWJtaXRVcGxvYWQoZmlsZSl7XHJcblx0XHRcdFx0cmV0dXJuIFVwbG9hZC51cGxvYWQoe1xyXG5cdFx0XHRcdFx0dXJsOiB0aGF0LmJhc2VVUkwgKyAndXBsb2FkL3NpbmdsZVVwbG9hZElkJyxcclxuXHRcdFx0XHRcdGRhdGE6IHsgZmlsZTogZmlsZSB9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxufSkod2luZG93LmFuZ3VsYXIpOyIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdFxyXG5cdFx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmhvbWUnKVxyXG5cdFx0XHQuc2VydmljZSgnUmVxdWVzdHNTZXJ2aWNlJywgWydob21lU2VydmljZScsICckaHR0cCcsICckcScsICckaW9uaWNMb2FkaW5nJywgJyRjb3Jkb3ZhUHVzaFY1JywgJyRhdXRoJywgUmVxdWVzdHNTZXJ2aWNlXSk7XHJcblx0XHJcblxyXG5cdGZ1bmN0aW9uIFJlcXVlc3RzU2VydmljZShob21lU2VydmljZSwgJGh0dHAsICRxLCAkaW9uaWNMb2FkaW5nLCAkY29yZG92YVB1c2hWNSwgJGF1dGgpIHtcclxuXHJcblx0XHR2YXIgYmFzZV91cmwgPSBob21lU2VydmljZS5iYXNlVVJMO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHJlZ2lzdGVyKCkge1xyXG5cclxuXHRcdFx0dmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcclxuXHRcdFx0XHJcblx0XHRcdHZhciBvcHRpb25zID0ge1xyXG5cdFx0XHRcdGFuZHJvaWQ6IHtcclxuXHRcdFx0XHRcdHNlbmRlcklEOiBcIjY3OTQ2MTg0MDExNVwiLFxyXG5cdFx0XHRcdFx0dmlicmF0ZTogXCJ0cnVlXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdGJyb3dzZXI6e1xyXG5cclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdGlvczoge1xyXG5cdFx0XHRcdFx0YWxlcnQ6IFwidHJ1ZVwiLFxyXG5cdFx0XHRcdFx0YmFkZ2U6IFwidHJ1ZVwiLFxyXG5cdFx0XHRcdFx0c291bmQ6IFwidHJ1ZVwiXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHR3aW5kb3dzOiB7fVxyXG5cdFx0XHR9O1xyXG5cdFx0XHQvKmlmKHZpYnJhdGUpe1xyXG5cdFx0XHRcdC8vb3B0aW9ucy5hbmRyb2lkLnZpYnJhdGUgPSB0cnVlO1xyXG5cdFx0XHRcdC8vb3B0aW9ucy5hbmRyb2lkLmZvcmNlU2hvdyA9dHJ1ZTtcclxuXHRcdFx0fSovXHJcblx0XHRcdFxyXG5cdFx0XHQkY29yZG92YVB1c2hWNS5pbml0aWFsaXplKG9wdGlvbnMpLnRoZW4oZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0Ly8gc3RhcnQgbGlzdGVuaW5nIGZvciBuZXcgbm90aWZpY2F0aW9uc1xyXG5cdFx0XHRcdCRjb3Jkb3ZhUHVzaFY1Lm9uTm90aWZpY2F0aW9uKGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcImluc2lkZWVlZSBub3RpZmljYXRpb25cIik7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhhcmd1bWVudHMpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdC8vIHN0YXJ0IGxpc3RlbmluZyBmb3IgZXJyb3JzXHJcblx0XHRcdFx0JGNvcmRvdmFQdXNoVjUub25FcnJvcigpO1xyXG5cclxuXHRcdFx0XHQvLyByZWdpc3RlciB0byBnZXQgcmVnaXN0cmF0aW9uSWRcclxuXHRcdFx0XHRpZiAoJGF1dGguaXNBdXRoZW50aWNhdGVkKCkpIHtcclxuXHRcdFx0XHRcdCRjb3Jkb3ZhUHVzaFY1LnJlZ2lzdGVyKCkudGhlbihmdW5jdGlvbihyZWdpc3RyYXRpb25JZCkge1xyXG5cdFx0XHRcdFx0XHQkaHR0cC5wb3N0KGJhc2VfdXJsICsgJ25vdGlmaWNhdGlvbi9yZWdpc3RlcicsIHsgJ2RldmljZV90b2tlbic6IHJlZ2lzdHJhdGlvbklkIH0pXHJcblx0XHRcdFx0XHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xyXG5cdFx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRcdFx0LmNhdGNoKGZ1bmN0aW9uKGRhdGEpIHtcclxuXHRcdFx0XHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdChkYXRhKTtcclxuXHRcdFx0XHRcdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHR9KTtcclxuXHJcblxyXG5cdFx0XHRyZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnb29nbGVTaWduSW4ocHJvZmlsZSl7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGJhc2VfdXJsKydhdXRoZW50aWNhdGUvYXV0aC9uYXRpdmVHb29nbGUnLCB7IHByb2ZpbGU6IHByb2ZpbGUgfSk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRnb29nbGVTaWduSW46IGdvb2dsZVNpZ25JbixcclxuXHRcdFx0cmVnaXN0ZXI6IHJlZ2lzdGVyXHJcblx0XHR9O1xyXG5cdH1cclxuXHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpe1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEBuZ2RvYyBzZXJ2aWNlXG4gKiBAbmFtZSBhdXRoTW9kQXBwLnVzZXJEYXRhXG4gKiBAZGVzY3JpcHRpb25cbiAqICMgdXNlckRhdGFcbiAqIEZhY3RvcnkgaW4gdGhlIGF1dGhNb2RBcHAuXG4gKi9cbmFuZ3VsYXIubW9kdWxlKCdwZXRhbC5ob21lJylcbiAgLmZhY3RvcnkoJ3VzZXJEYXRhJyxbJyR3aW5kb3cnLCckc3RhdGUnLCckYXV0aCcsJyRodHRwJywnaG9tZVNlcnZpY2UnLHVzZXJEYXRhXSk7XG5cbiAgZnVuY3Rpb24gdXNlckRhdGEoJHdpbmRvdywkc3RhdGUsJGF1dGgsJGh0dHAsaG9tZVNlcnZpY2UpIHtcbiAgICB2YXIgc3RvcmFnZSA9ICR3aW5kb3cubG9jYWxTdG9yYWdlO1xuICAgIHZhciBjYWNoZWRVc2VyPXt9O1xuICAgIHZhciBvYmoxID0gIHtcbiAgICAgIHNldFVzZXI6IGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAgIFxuICAgICAgICBpZih1c2VyKXtcbiAgICAgICAgICBzdG9yYWdlLnNldEl0ZW0oJ3VzZXInLEpTT04uc3RyaW5naWZ5KHVzZXIpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuXG4gICAgICAgICAgdmFyIHVzZXJJZCA9ICRhdXRoLmdldFBheWxvYWQoKS5zdWI7XG4gICAgICAgICAgaWYodXNlcklkKXtcbiAgICAgICAgICAgIHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCsndXNlci9nZXQvJyt1c2VySWQpLnRoZW4oZnVuY3Rpb24ocmVzKXtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8qaWYob2JqMS5pc1VzZXJFeGlzdHMoKSl7XG4gICAgICAgICAgICAgICAgICBzdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXInKTtcbiAgICAgICAgICAgICAgfSovXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgc3RvcmFnZS5zZXRJdGVtKCd1c2VyJyxKU09OLnN0cmluZ2lmeShyZXMuZGF0YSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuXG4gICAgICB9LFxuICAgICAgZ2V0VXNlcjogZnVuY3Rpb24oKXtcblxuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShzdG9yYWdlLmdldEl0ZW0oJ3VzZXInKSk7XG4gICAgICB9LFxuICAgICAgcmVtb3ZlVXNlcjogZnVuY3Rpb24oKXtcbiAgICAgICAgY2FjaGVkVXNlciA9IG51bGw7XG4gICAgICAgIHN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcicpO1xuICAgICAgfSxcbiAgICAgIGlzVXNlckV4aXN0czogZnVuY3Rpb24oKXtcbiAgICAgICAgaWYob2JqMS5nZXRVc2VyKCkpe1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBvYmoxO1xuICB9XG59KSh3aW5kb3cuYW5ndWxhcik7XG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwubWVzc2FnZScpXHJcblxyXG5cdC5jb250cm9sbGVyKCdNZXNzYWdlUm9vbUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckdGltZW91dCcsICdTb2NrZXQnLCAnJHN0YXRlUGFyYW1zJywgJ3VzZXJEYXRhJywgJ2hvbWVTZXJ2aWNlJywgJ21lc3NhZ2VSb29tU2VydmljZScsICckaW9uaWNTY3JvbGxEZWxlZ2F0ZScsICd1c2VyU2VydmljZScsICdVcGxvYWQnLCAnJGlvbmljTG9hZGluZycsICckd2luZG93JywgJ2Jsb2NrZWQnLCBNZXNzYWdlUm9vbUNvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gTWVzc2FnZVJvb21Db250cm9sbGVyKCRzY29wZSwgJHRpbWVvdXQsIFNvY2tldCwgJHN0YXRlUGFyYW1zLCB1c2VyRGF0YSwgaG9tZVNlcnZpY2UsIG1lc3NhZ2VSb29tU2VydmljZSwgJGlvbmljU2Nyb2xsRGVsZWdhdGUsIHVzZXJTZXJ2aWNlLCBVcGxvYWQsICRpb25pY0xvYWRpbmcsICR3aW5kb3csIGJsb2NrZWQpIHtcclxuXHRcdHZhciBjYmMgPSB0aGlzO1xyXG5cdFx0Y2JjLmlzQmxvY2tlZCA9IGJsb2NrZWQ7XHJcblx0XHRjYmMuY3VycmVudFVzZXIgPSB1c2VyRGF0YS5nZXRVc2VyKCkuX2lkO1xyXG5cdFx0XHJcblx0XHRjYmMubWVzc2FnZUxpc3QgPSBbXTtcclxuXHRcdGNiYy5tZXNzYWdlUm9vbUlkID0gJyc7XHJcblx0XHRjYmMubG9hZE1vcmVNZXNzYWdlcyA9IGxvYWRNb3JlTWVzc2FnZXM7XHJcblx0XHRjYmMuc2Nyb2xsQm90dG9tID0gc2Nyb2xsQm90dG9tO1xyXG5cdFx0Y2JjLm1lc3NhZ2VMb2FkaW5nID0gZmFsc2U7XHJcblx0XHRcclxuXHRcdGNiYy5wYXJhbXMgPSB7XHJcblx0XHRcdHBhZ2U6IDEsXHJcblx0XHRcdGxpbWl0OiA1XHJcblx0XHR9O1xyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBsb2FkTW9yZU1lc3NhZ2VzKCkge1xyXG5cdFx0XHRjYmMucGFyYW1zLnBhZ2UgKz0gMTtcclxuXHRcdFx0Z2V0TWVzc2FnZXMoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSZWNlaXZlcigpIHtcclxuXHRcdFx0dXNlclNlcnZpY2UuZ2V0VXNlcihjYmMucmVjZWl2ZXJVc2VySUQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRjYmMucmVjZWl2ZXJVc2VyID0gcmVzcG9uc2UuZGF0YTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblxyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIHNjcm9sbEJvdHRvbSgpIHtcclxuXHRcdFx0JHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JGlvbmljU2Nyb2xsRGVsZWdhdGUuc2Nyb2xsQm90dG9tKHRydWUpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0TWVzc2FnZXMoKSB7XHJcblx0XHRcdG1lc3NhZ2VSb29tU2VydmljZS5nZXRNZXNzYWdlcyhjYmMubWVzc2FnZVJvb21JZCwgY2JjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXMpIHtcclxuXHJcblx0XHRcdFx0YW5ndWxhci5mb3JFYWNoKHJlcy5kYXRhLmRvY3MsIGZ1bmN0aW9uKG1lc3NhZ2UpIHtcclxuXHRcdFx0XHRcdGNiYy5tZXNzYWdlTGlzdC51bnNoaWZ0KG1lc3NhZ2UpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihyZXMpIHtcclxuXHJcblx0XHRcdFx0Y29uc29sZS5sb2cocmVzKTtcclxuXHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRzY3JvbGxCb3R0b20oKTtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdCRpb25pY0xvYWRpbmcuc2hvdygpO1xyXG5cdFx0XHRtZXNzYWdlUm9vbVNlcnZpY2UuZ2V0TWVzc2FnZVJvb20oY2JjLnJlY2VpdmVyVXNlcklEKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cdFx0XHRcdGNiYy5tZXNzYWdlUm9vbSA9IHJlcy5kYXRhO1xyXG5cdFx0XHRcdGNiYy5tZXNzYWdlUm9vbUlkID0gcmVzLmRhdGEuX2lkO1xyXG5cclxuXHRcdFx0XHRzb2NrZXRKb2luKCk7XHJcblx0XHRcdFx0Z2V0TWVzc2FnZXMoKTtcclxuXHJcblx0XHRcdH0sIGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRnZXRSZWNlaXZlcigpO1xyXG5cclxuXHJcblxyXG5cdFx0fVxyXG5cclxuXHJcblx0XHRmdW5jdGlvbiBzb2NrZXRKb2luKCkge1xyXG5cdFx0XHRTb2NrZXQuZW1pdCgnYWRkVG9NZXNzYWdldFJvb20nLCB7ICdyb29tSWQnOiBjYmMubWVzc2FnZVJvb21JZCB9KTtcclxuXHRcdFx0U29ja2V0Lm9uKCdyb29tTWVzc2FnZVJlY2VpdmVkJywgZnVuY3Rpb24obWVzc2FnZSkge1xyXG5cclxuXHRcdFx0XHRjYmMubWVzc2FnZUxpc3QucHVzaChtZXNzYWdlKTtcclxuXHRcdFx0XHRzY3JvbGxCb3R0b20oKTtcclxuXHRcdFx0XHRjYmMubWVzc2FnZUxvYWRpbmcgPSBmYWxzZTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGNiYy5jbGlja1N1Ym1pdCA9IGZ1bmN0aW9uKCRldmVudCkge1xyXG5cclxuXHRcdFx0Y2JjLm1lc3NhZ2VMb2FkaW5nID0gdHJ1ZTtcclxuXHRcdFx0Y2JjLmZvY3VzSW5wdXQgPSB0cnVlO1xyXG5cclxuXHRcdFx0aWYgKHdpbmRvdy5jb3Jkb3ZhICkge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdHdpbmRvdy5jb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQuc2hvdygpO1xyXG5cdFx0XHRcdC8vd2luZG93LmNvcmRvdmEuZmlyZVdpbmRvd0V2ZW50KCduYXRpdmUua2V5Ym9hcmRzaG93JywgeydrZXlib2FyZEhlaWdodCc6ICsyNjJ9KTtcclxuICAgICAgICAgICAgXHRcdFx0XHR3aW5kb3cuY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmlzVmlzaWJsZSA9IHRydWU7XHJcblx0XHRcdH1cclxuXHRcdFx0c2Nyb2xsQm90dG9tKCk7XHJcblx0XHRcdHZhciBtZXNzYWdlT2JqID0geyAnbWVzc2FnZSc6IGNiYy5teU1zZywgcmVjZWl2ZXI6ICRzdGF0ZVBhcmFtcy51c2VyLCAncm9vbUlkJzogY2JjLm1lc3NhZ2VSb29tSWQgfTtcclxuXHRcdFx0bWVzc2FnZVJvb21TZXJ2aWNlLnNlbmRNZXNzYWdlKG1lc3NhZ2VPYmopLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblx0XHRcdFx0Y2JjLm15TXNnID0gJyc7XHJcblx0XHRcdFx0Y2JjLm1lc3NhZ2VMaXN0LnB1c2gocmVzLmRhdGEubWVzc2FnZSk7XHJcblx0XHRcdFx0c2Nyb2xsQm90dG9tKCk7XHJcblx0XHRcdFx0Y2JjLm1lc3NhZ2VUcnlDb3VudCA9IDA7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdC8vY29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRjYmMubWVzc2FnZVRyeUNvdW50ICs9IDE7XHJcblxyXG5cdFx0XHRcdGlmIChjYmMubWVzc2FnZVRyeUNvdW50IDw9IDMpIHtcclxuXHRcdFx0XHRcdGNiYy5jbGlja1N1Ym1pdCgpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0Y2JjLm1lc3NhZ2VMb2FkaW5nID0gZmFsc2U7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdFx0fTtcclxuXHJcblxyXG5cdFx0Y2JjLnN1Ym1pdFVwbG9hZCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRjYmMubWVzc2FnZUxvYWRpbmcgPSB0cnVlO1xyXG5cdFx0XHRjYmMuZmlsZS51cGxvYWQgPSBVcGxvYWQudXBsb2FkKHtcclxuXHRcdFx0XHR1cmw6IGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAndXBsb2FkL3NpbmdsZVVwbG9hZCcsXHJcblx0XHRcdFx0ZGF0YTogeyBmaWxlOiBjYmMuZmlsZSB9XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0Y2JjLmZpbGUudXBsb2FkLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRjYmMuZmlsZS5yZXN1bHQgPSByZXNwb25zZS5kYXRhO1xyXG5cdFx0XHRcdGNiYy51cGxvYWRlZEltYWdlID0gcmVzcG9uc2UuZGF0YTtcclxuXHRcdFx0XHRjYmMuY2FuY2VsVXBsb2FkKCk7XHJcblx0XHRcdFx0dmFyIG1lc3NhZ2VPYmogPSB7ICdtZXNzYWdlJzogY2JjLnVwbG9hZGVkSW1hZ2UsIHJlY2VpdmVyOiAkc3RhdGVQYXJhbXMudXNlciwgJ3Jvb21JZCc6IGNiYy5tZXNzYWdlUm9vbUlkLCB0eXBlOiAnaW1nJyB9O1xyXG5cdFx0XHRcdG1lc3NhZ2VSb29tU2VydmljZS5zZW5kTWVzc2FnZShtZXNzYWdlT2JqKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cdFx0XHRcdFx0c2Nyb2xsQm90dG9tKCk7XHJcblx0XHRcdFx0XHRjYmMubWVzc2FnZUxpc3QucHVzaChyZXMuZGF0YS5tZXNzYWdlKTtcclxuXHRcdFx0XHRcdGNiYy5tZXNzYWdlTG9hZGluZyA9IGZhbHNlO1xyXG5cdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHJcblx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblx0XHRjYmMuY2FuY2VsVXBsb2FkID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdGNiYy5zaG93VGVtcEltYWdlID0gZmFsc2U7XHJcblx0XHRcdGNiYy50ZW1wSW1hZ2VVcmwgPSAnJztcclxuXHRcdH07XHJcblx0XHRjYmMudXBsb2FkU2luZ2xlSW1hZ2UgPSBmdW5jdGlvbihmaWxlLCBlcnJGaWxlcykge1xyXG5cdFx0XHRjYmMuZmlsZSA9IGZpbGU7XHJcblx0XHRcdGNiYy5lcnJGaWxlID0gZXJyRmlsZXMgJiYgZXJyRmlsZXNbMF07XHJcblx0XHRcdGlmIChmaWxlKSB7XHJcblx0XHRcdFx0Y2JjLnNob3dUZW1wSW1hZ2UgPSB0cnVlO1xyXG5cdFx0XHRcdGNiYy50ZW1wSW1hZ2VVcmwgPSBmaWxlO1xyXG5cdFx0XHRcdHNjcm9sbEJvdHRvbSgpO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0Y2JjLmxlYXZlTWVzc2FnZVJvb20gPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0U29ja2V0LmVtaXQoJ3JlbW92ZUZyb21NZXNzYWdlUm9vbScsIHsgJ3Jvb21JZCc6IGNiYy5tZXNzYWdlUm9vbUlkIH0pO1xyXG5cclxuXHRcdFx0JHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuXHJcblxyXG5cdFx0fTtcclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcblxyXG4vKnVzZXJTZXJ2aWNlLmdldFVzZXJEZXRhaWxzKGNiYy5yZWNlaXZlclVzZXJJRElkLCB7ICdmaWVsZHMnOiAnZGlzcGxheU5hbWUgZmlyc3ROYW1lJyB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcInRoZSByZWNlaXZlclwiKTtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xyXG5cdFx0XHRcdFx0Y2JjLnJlY2VpdmVyVXNlcklEID0gcmVzcG9uc2UuZGF0YS5kaXNwbGF5TmFtZSB8fCAocmVzcG9uc2UuZGF0YS5maXJzdE5hbWUpO1xyXG5cdFx0XHRcdH0pOyovXHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5tZXNzYWdlJylcclxuXHRcdC5jb250cm9sbGVyKCdNZXNzYWdlUm9vbUxpc3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ21lc3NhZ2VSb29tU2VydmljZScsICckaW9uaWNMb2FkaW5nJywgJ1NvY2tldCcsTWVzc2FnZVJvb21MaXN0Q29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBNZXNzYWdlUm9vbUxpc3RDb250cm9sbGVyKCRzY29wZSwgJHN0YXRlLCBtZXNzYWdlUm9vbVNlcnZpY2UsICRpb25pY0xvYWRpbmcsU29ja2V0KSB7XHJcblx0XHR2YXIgYWNjID0gdGhpcztcclxuXHRcdGFjYy5nZXRBbGxNZXNzYWdlUm9vbXMgPSBnZXRBbGxNZXNzYWdlUm9vbXM7XHJcblx0XHRhY2MubG9hZE1vcmVNZXNzYWdlcyA9IGxvYWRNb3JlTWVzc2FnZXM7XHJcblx0XHRhY2MucHVsbFJlZnJlc2hNZXNzYWdlcyA9IHB1bGxSZWZyZXNoTWVzc2FnZXM7XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0U29ja2V0Lm9uKCduZXdSb29tTWVzc2FnZVJlY2VpdmVkJywgbWVzc2FnZVJlY2VpdmVkKTtcclxuXHRcdFxyXG5cdFx0YWNjLm1lc3NhZ2VSb29tUGFnZSA9IGZ1bmN0aW9uKG1lc3NhZ2VSb29tKXtcclxuXHRcdFx0aWYobWVzc2FnZVJvb20uaW50ZXJlc3Qpe1xyXG5cdFx0XHRcdCRzdGF0ZS5nbygnbWVzc2FnZVJvb21JbnRlcmVzdCcsIHsgaW50ZXJlc3Q6IG1lc3NhZ2VSb29tLmludGVyZXN0fSk7XHRcclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0JHN0YXRlLmdvKCdtZXNzYWdlUm9vbVBvc3QnLCB7IHBvc3RJZDogbWVzc2FnZVJvb20ucG9zdH0pO1x0XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHR9O1xyXG5cdFx0ZnVuY3Rpb24gbWVzc2FnZVJlY2VpdmVkKG1lc3NhZ2Upe1xyXG5cdFx0XHR2YXIgbmV3TWVzc2FnZVJvb20gPSB7fTtcclxuXHRcdFx0bmV3TWVzc2FnZVJvb20ubmV3TWVzc2FnZSA9IHRydWU7XHJcblx0XHRcdG5ld01lc3NhZ2VSb29tLmxhc3RNZXNzYWdlID0ge1xyXG5cdFx0XHRcdF9pZDptZXNzYWdlLl9pZCxcclxuXHRcdFx0XHRtZXNzYWdlOm1lc3NhZ2UubWVzc2FnZSxcclxuXHRcdFx0XHR0eXBlOiBtZXNzYWdlLnR5cGVcclxuXHRcdFx0fTtcclxuXHRcdFxyXG5cclxuXHRcdFx0Zm9yKHZhciBjaD0wO2NoPGFjYy5tZXNzYWdlUm9vbXNMaXN0Lmxlbmd0aDtjaCsrKXtcclxuXHRcdFx0XHRpZihuZXdNZXNzYWdlUm9vbS5jcmVhdG9yMi5faWQ9PWFjYy5tZXNzYWdlUm9vbXNMaXN0W2NoXS5jcmVhdG9yMi5faWQpe1xyXG5cdFx0XHRcdFx0aWYgKG5ld01lc3NhZ2VSb29tLmxhc3RNZXNzYWdlLl9pZCAhPT0gYWNjLm1lc3NhZ2VSb29tc0xpc3RbY2hdLmxhc3RNZXNzYWdlLl9pZCkge1xyXG5cdFx0XHRcdFx0XHRhY2MubWVzc2FnZVJvb21zTGlzdC5zcGxpY2UoY2gsMSk7XHJcblx0XHRcdFx0XHRcdGFjYy5tZXNzYWdlUm9vbXNMaXN0LnVuc2hpZnQobmV3TWVzc2FnZVJvb20pO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoTWVzc2FnZXMoKSB7XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVNZXNzYWdlcygpIHtcclxuXHRcdFx0YWNjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldEFsbE1lc3NhZ2VSb29tcygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldEFsbE1lc3NhZ2VSb29tcygpIHtcclxuXHRcdFx0bWVzc2FnZVJvb21TZXJ2aWNlLmdldE1lc3NhZ2VSb29tcygpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UuZGF0YS5kb2NzLCBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRcdFx0YWNjLm1lc3NhZ2VSb29tc0xpc3QucHVzaCh2YWx1ZSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0YWNjLm5vUG9zdHMgPSFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGFjYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFjYy5tZXNzYWdlUm9vbXNMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YWNjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHRhY2MuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLmluZmluaXRlU2Nyb2xsQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGFjYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0YWNjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0YWNjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRwYWdlOiAxLFxyXG5cdFx0XHRcdGxpbWl0OiAyNVxyXG5cdFx0XHR9O1xyXG5cdFx0XHRhY2MubWVzc2FnZVJvb21zTGlzdCA9IFtdO1xyXG5cdFx0XHRnZXRBbGxNZXNzYWdlUm9vbXMoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLm1lc3NhZ2UnKVxyXG5cdFx0LnNlcnZpY2UoJ21lc3NhZ2VSb29tU2VydmljZScsIFsnJGh0dHAnLCAnJHN0YXRlUGFyYW1zJywgJ2hvbWVTZXJ2aWNlJywgTWVzc2FnZVJvb21TZXJ2aWNlXSk7XHJcblxyXG5cdGZ1bmN0aW9uIE1lc3NhZ2VSb29tU2VydmljZSgkaHR0cCwgJHN0YXRlUGFyYW1zLCBob21lU2VydmljZSkge1xyXG5cdFx0dmFyIHJzID0gdGhpcztcclxuXHRcdHJzLnNlbmRNZXNzYWdlID0gc2VuZE1lc3NhZ2U7XHJcblx0XHRycy5nZXRNZXNzYWdlcyA9IGdldE1lc3NhZ2VzO1xyXG5cdFx0cnMuZ2V0TWVzc2FnZVJvb20gPSBnZXRNZXNzYWdlUm9vbTtcclxuXHRcdHJzLmdldE1lc3NhZ2VSb29tcyA9IGdldE1lc3NhZ2VSb29tcztcclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gc2VuZE1lc3NhZ2UobWVzc2FnZSkge1xyXG5cdFx0XHRcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdtZXNzYWdlL2NyZWF0ZS8nICsgbWVzc2FnZS5yb29tSWQsIG1lc3NhZ2UpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldE1lc3NhZ2VzKG1lc3NhZ2VSb29tSWQscGFyYW1zKSB7XHJcblx0XHRcdFxyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAnbWVzc2FnZS9nZXRNZXNzYWdlcy8nICsgbWVzc2FnZVJvb21JZCx7cGFyYW1zOnBhcmFtc30pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldE1lc3NhZ2VSb29tKHBhcmFtcykge1xyXG5cdFx0XHRcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgJ21lc3NhZ2VSb29tL2dldFJvb20vJyx7cGFyYW1zOnBhcmFtc30gKTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXRNZXNzYWdlUm9vbXMoKSB7XHJcblx0XHRcdFxyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAnbWVzc2FnZVJvb20vZ2V0Um9vbXMvJyApO1xyXG5cclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0XHJcblxyXG5cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBlb3BsZScpXHJcblx0XHQuY29udHJvbGxlcignQWxsUGVvcGxlQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZScsICdwZW9wbGVTZXJ2aWNlJywnJGlvbmljTG9hZGluZycsIEFsbFBlb3BsZUNvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gQWxsUGVvcGxlQ29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgcGVvcGxlU2VydmljZSwkaW9uaWNMb2FkaW5nKSB7XHJcblx0XHR2YXIgYXBjID0gdGhpcztcclxuXHRcdGFwYy5nZXRBbGxQZW9wbGUgPSBnZXRBbGxQZW9wbGU7XHJcblx0XHRhcGMucHVsbFJlZnJlc2hQZW9wbGUgPSBwdWxsUmVmcmVzaFBlb3BsZTtcclxuXHRcdGFwYy5sb2FkTW9yZVBlb3BsZSA9IGxvYWRNb3JlUGVvcGxlO1xyXG5cdFx0YXBjLnNlYXJjaENyb3NzU3VibWl0ID0gc2VhcmNoQ3Jvc3NTdWJtaXQ7XHJcblx0XHRhcGMucGVvcGxlU2VhcmNoVGV4dFN1Ym1pdCA9IHBlb3BsZVNlYXJjaFRleHRTdWJtaXQ7XHJcblxyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBwdWxsUmVmcmVzaFBlb3BsZSgpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBzZWFyY2hDcm9zc1N1Ym1pdCgpe1xyXG5cdFx0XHRhcGMucGVvcGxlU2VhcmNoVGV4dCA9ICcnO1xyXG5cdFx0XHRhcGMuc2hvd1NlYXJjaENyb3NzID0gZmFsc2U7XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBwZW9wbGVTZWFyY2hUZXh0U3VibWl0KGludGVyZXN0KXtcclxuXHRcdFx0YXBjLnNob3dTZWFyY2hDcm9zcyA9IHRydWU7XHJcblx0XHRcdGlmKGludGVyZXN0KXtcclxuXHRcdFx0XHRhcGMucGVvcGxlU2VhcmNoVGV4dCA9IGludGVyZXN0O1x0XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBsb2FkTW9yZVBlb3BsZSgpIHtcclxuXHRcdFx0YXBjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldEFsbFBlb3BsZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldEFsbFBlb3BsZSgpIHtcclxuXHRcdFx0cGVvcGxlU2VydmljZS5nZXRBbGxVc2VycyhhcGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0YW5ndWxhci5mb3JFYWNoKHJlc3BvbnNlLmRhdGEuZG9jcywgZnVuY3Rpb24odmFsdWUpIHtcclxuXHRcdFx0XHRcdGFwYy5wZW9wbGVMaXN0LnB1c2godmFsdWUpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFwYy5wZW9wbGVMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1xyXG5cdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IGZhbHNlO1xyXG5cdFx0XHRhcGMucGVvcGxlTGlzdCA9IFtdO1xyXG5cdFx0XHRhcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdGxpbWl0OiAyNSxcclxuXHRcdFx0XHRwYWdlOiAxXHJcblx0XHRcdH07XHJcblx0XHRcdGlmKGFwYy5wZW9wbGVTZWFyY2hUZXh0KXtcclxuXHRcdFx0XHRhcGMucGFyYW1zLmludGVyZXN0ID0gXHRhcGMucGVvcGxlU2VhcmNoVGV4dDtcclxuXHRcdFx0fVxyXG5cdFx0XHRnZXRBbGxQZW9wbGUoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBlb3BsZScpXHJcblx0XHQuY29udHJvbGxlcignTmVhcmJ5UGVvcGxlQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZScsICdwZW9wbGVTZXJ2aWNlJywnJGlvbmljTG9hZGluZycsIE5lYXJieVBlb3BsZUNvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gTmVhcmJ5UGVvcGxlQ29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgcGVvcGxlU2VydmljZSwkaW9uaWNMb2FkaW5nKSB7XHJcblx0XHR2YXIgYXBjID0gdGhpcztcclxuXHRcdGFwYy5nZXROZWFyYnlQZW9wbGUgPSBnZXROZWFyYnlQZW9wbGU7XHJcblx0XHRhcGMucHVsbFJlZnJlc2hQZW9wbGUgPSBwdWxsUmVmcmVzaFBlb3BsZTtcclxuXHRcdGFwYy5sb2FkTW9yZVBlb3BsZSA9IGxvYWRNb3JlUGVvcGxlO1xyXG5cdFx0YXBjLnJlbGVhc2VSYW5nZSA9IHJlbGVhc2VSYW5nZTtcclxuXHRcdGFwYy5kaXN0YW5jZSA9IDEwO1xyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBwdWxsUmVmcmVzaFBlb3BsZSgpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVQZW9wbGUoKSB7XHJcblx0XHRcdGFwYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXROZWFyYnlQZW9wbGUoKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHJlbGVhc2VSYW5nZSgpe1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ2V0TmVhcmJ5UGVvcGxlKCkge1xyXG5cdFx0XHRwZW9wbGVTZXJ2aWNlLmdldE5lYXJieVVzZXJzKGFwYy5wYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UuZGF0YS5kb2NzLCBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRcdFx0YXBjLnBlb3BsZUxpc3QucHVzaCh2YWx1ZSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0YXBjLm5vUGVvcGxlID0hcmVzcG9uc2UuZGF0YS50b3RhbDtcclxuXHRcdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IHRydWU7XHJcblx0XHRcdFx0aWYgKHJlc3BvbnNlLmRhdGEudG90YWwgPiBhcGMucGVvcGxlTGlzdC5sZW5ndGgpIHtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNle1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1x0XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwuaW5maW5pdGVTY3JvbGxDb21wbGV0ZScpO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwuaW5maW5pdGVTY3JvbGxDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0YXBjLnBlb3BsZUxpc3QgPSBbXTtcclxuXHRcdFx0YXBjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRsaW1pdDogMjUsXHJcblx0XHRcdFx0cGFnZTogMSxcclxuXHRcdFx0XHRkaXN0YW5jZTogYXBjLmRpc3RhbmNlXHJcblx0XHRcdH07XHJcblx0XHRcdGdldE5lYXJieVBlb3BsZSgpO1xyXG5cdFx0fVxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcil7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wZW9wbGUnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ1Blb3BsZVBhcmVudENvbnRyb2xsZXInLFtQZW9wbGVQYXJlbnRDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFBlb3BsZVBhcmVudENvbnRyb2xsZXIoKXtcclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7IiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBlb3BsZScpXHJcblx0XHQuY29udHJvbGxlcignUmVjZWl2ZWRQZW9wbGVDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ3Blb3BsZVNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJywgUmVjZWl2ZWRQZW9wbGVDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFJlY2VpdmVkUGVvcGxlQ29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgcGVvcGxlU2VydmljZSwkaW9uaWNMb2FkaW5nKSB7XHJcblx0XHR2YXIgYXBjID0gdGhpcztcclxuXHRcdGFwYy5nZXRSZWNlaXZlZFBlb3BsZSA9IGdldFJlY2VpdmVkUGVvcGxlO1xyXG5cdFx0YXBjLnB1bGxSZWZyZXNoUGVvcGxlID0gcHVsbFJlZnJlc2hQZW9wbGU7XHJcblx0XHRhcGMubG9hZE1vcmVQZW9wbGUgPSBsb2FkTW9yZVBlb3BsZTtcclxuXHJcblxyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBwdWxsUmVmcmVzaFBlb3BsZSgpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVQZW9wbGUoKSB7XHJcblx0XHRcdGFwYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXRSZWNlaXZlZFBlb3BsZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFJlY2VpdmVkUGVvcGxlKCkge1xyXG5cdFx0XHRwZW9wbGVTZXJ2aWNlLmdldFJlY2VpdmVkVXNlcnMoYXBjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRhcGMucGVvcGxlTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhcGMubm9QZW9wbGUgPSFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFwYy5wZW9wbGVMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1xyXG5cdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IGZhbHNlO1xyXG5cdFx0XHRhcGMucGVvcGxlTGlzdCA9IFtdO1xyXG5cdFx0XHRhcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdGxpbWl0OiAxMCxcclxuXHRcdFx0XHRwYWdlOiAxXHJcblx0XHRcdH07XHJcblx0XHRcdGdldFJlY2VpdmVkUGVvcGxlKCk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wZW9wbGUnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ1JlcXVlc3RlZFBlb3BsZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGUnLCAncGVvcGxlU2VydmljZScsJyRpb25pY0xvYWRpbmcnLCBSZXF1ZXN0ZWRQZW9wbGVDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFJlcXVlc3RlZFBlb3BsZUNvbnRyb2xsZXIoJHNjb3BlLCAkc3RhdGUsIHBlb3BsZVNlcnZpY2UsJGlvbmljTG9hZGluZykge1xyXG5cdFx0dmFyIGFwYyA9IHRoaXM7XHJcblx0XHRhcGMuZ2V0UmVxdWVzdGVkUGVvcGxlID0gZ2V0UmVxdWVzdGVkUGVvcGxlO1xyXG5cdFx0YXBjLnB1bGxSZWZyZXNoUGVvcGxlID0gcHVsbFJlZnJlc2hQZW9wbGU7XHJcblx0XHRhcGMubG9hZE1vcmVQZW9wbGUgPSBsb2FkTW9yZVBlb3BsZTtcclxuXHJcblxyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBwdWxsUmVmcmVzaFBlb3BsZSgpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVQZW9wbGUoKSB7XHJcblx0XHRcdGFwYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXRSZXF1ZXN0ZWRQZW9wbGUoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSZXF1ZXN0ZWRQZW9wbGUoKSB7XHJcblx0XHRcdHBlb3BsZVNlcnZpY2UuZ2V0UmVxdWVzdGVkVXNlcnMoYXBjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRhcGMucGVvcGxlTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IHRydWU7XHJcblx0XHRcdFx0aWYgKHJlc3BvbnNlLmRhdGEudG90YWwgPiBhcGMucGVvcGxlTGlzdC5sZW5ndGgpIHtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNle1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1x0XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cclxuXHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwuaW5maW5pdGVTY3JvbGxDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0YXBjLnBlb3BsZUxpc3QgPSBbXTtcclxuXHRcdFx0YXBjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRsaW1pdDogMjUsXHJcblx0XHRcdFx0cGFnZTogMVxyXG5cdFx0XHR9O1xyXG5cdFx0XHRnZXRSZXF1ZXN0ZWRQZW9wbGUoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBlb3BsZScpXHJcblx0XHQuY29udHJvbGxlcignUmV2ZWFsZWRQZW9wbGVDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ3Blb3BsZVNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJywgUmV2ZWFsZWRQZW9wbGVDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFJldmVhbGVkUGVvcGxlQ29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgcGVvcGxlU2VydmljZSwkaW9uaWNMb2FkaW5nKSB7XHJcblx0XHR2YXIgYXBjID0gdGhpcztcclxuXHRcdGFwYy5nZXRSZXZlYWxlZFBlb3BsZSA9IGdldFJldmVhbGVkUGVvcGxlO1xyXG5cdFx0YXBjLnB1bGxSZWZyZXNoUGVvcGxlID0gcHVsbFJlZnJlc2hQZW9wbGU7XHJcblx0XHRhcGMubG9hZE1vcmVQZW9wbGUgPSBsb2FkTW9yZVBlb3BsZTtcclxuXHJcblxyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBwdWxsUmVmcmVzaFBlb3BsZSgpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVQZW9wbGUoKSB7XHJcblx0XHRcdGFwYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXRSZXZlYWxlZFBlb3BsZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFJldmVhbGVkUGVvcGxlKCkge1xyXG5cdFx0XHRwZW9wbGVTZXJ2aWNlLmdldFJldmVhbGVkVXNlcnMoYXBjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRhcGMucGVvcGxlTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhcGMubm9QZW9wbGUgPSFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFwYy5wZW9wbGVMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1xyXG5cdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IGZhbHNlO1xyXG5cdFx0XHRhcGMucGVvcGxlTGlzdCA9IFtdO1xyXG5cdFx0XHRhcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdGxpbWl0OiAyNSxcclxuXHRcdFx0XHRwYWdlOiAxXHJcblx0XHRcdH07XHJcblx0XHRcdGdldFJldmVhbGVkUGVvcGxlKCk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wZW9wbGUnKVxyXG5cdFx0LmRpcmVjdGl2ZSgncGVvcGxlTGlzdCcsIFsgJ3VzZXJEYXRhJyxwZW9wbGVMaXN0XSk7XHJcblxyXG5cclxuXHRmdW5jdGlvbiBwZW9wbGVMaXN0KCB1c2VyRGF0YSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcGVvcGxlL3ZpZXdzL3Blb3BsZUxpc3RUZW1wbGF0ZS5odG1sJyxcclxuXHRcdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdFx0c2NvcGU6IHtcclxuXHRcdFx0XHRsaXN0VHlwZTogJ0BsaXN0VHlwZScsXHJcblx0XHRcdFx0cGVvcGxlTGlzdDogJz1wZW9wbGVMaXN0JyxcclxuXHRcdFx0XHRwZW9wbGVTZWFyY2hUZXh0U3VibWl0OiAnJnBlb3BsZVNlYXJjaFRleHRTdWJtaXQnXHJcblx0XHRcdH0sXHJcblx0XHRcdGNvbnRyb2xsZXI6IFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XHJcblx0XHRcdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlckRhdGEuZ2V0VXNlcigpO1xyXG5cdFx0XHRcdCRzY29wZS5zZXRQZW9wbGVTZWFyY2ggPSBmdW5jdGlvbihpbnRlcmVzdCwkZXZlbnQpe1xyXG5cdFx0XHRcdFx0aWYoJHNjb3BlLnBlb3BsZVNlYXJjaFRleHRTdWJtaXQpe1xyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0JHNjb3BlLnBlb3BsZVNlYXJjaFRleHRTdWJtaXQoe2ludGVyZXN0OmludGVyZXN0fSk7XHRcclxuXHRcdFx0XHRcdFx0JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0XHQkc2NvcGUucmVtb3ZlQWZ0ZXJEZWNpZGVkID0gZnVuY3Rpb24oaW5kZXgpe1xyXG5cdFx0XHRcdFx0JHNjb3BlLnBlb3BsZUxpc3Quc3BsaWNlKGluZGV4LDEpO1xyXG5cdFx0XHRcdH07XHJcblx0XHRcdFx0XHJcblx0XHRcdH1dXHJcblx0XHR9O1xyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucGVvcGxlJylcclxuXHRcdC5kaXJlY3RpdmUoJ3JlY2VpdmVkUGVvcGxlTGlzdCcsIFsgJ3Blb3BsZVNlcnZpY2UnLCAnJGlvbmljTG9hZGluZycsIHJlY2VpdmVkUGVvcGxlTGlzdF0pO1xyXG5cclxuXHJcblx0ZnVuY3Rpb24gcmVjZWl2ZWRQZW9wbGVMaXN0KCBwZW9wbGVTZXJ2aWNlLCAkaW9uaWNMb2FkaW5nKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0UnLFxyXG5cdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wZW9wbGUvdmlld3MvcmVjZWl2ZWRQZW9wbGVMaXN0Lmh0bWwnLFxyXG5cdFx0XHRyZXBsYWNlOiB0cnVlLFxyXG5cdFx0XHRjb250cm9sbGVyQXM6ICdycGMnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cclxuXHRcdFx0fSxcclxuXHRcdFx0Y29udHJvbGxlcjogWyckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpIHtcclxuXHRcdFx0XHR2YXIgcnBjID0gdGhpcztcclxuXHRcdFx0XHRycGMuZ2V0UmVjZWl2ZWRQZW9wbGUgPSBnZXRSZWNlaXZlZFBlb3BsZTtcclxuXHRcdFx0XHRycGMubG9hZE1vcmVQZW9wbGUgPSBsb2FkTW9yZVBlb3BsZTtcclxuXHRcdFx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGZ1bmN0aW9uIGdldFJlY2VpdmVkUGVvcGxlKCkge1xyXG5cdFx0XHRcdFx0cGVvcGxlU2VydmljZS5nZXRSZWNlaXZlZFVzZXJzKHJwYy5wYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHJcblx0XHRcdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRcdFx0cnBjLnBlb3BsZUxpc3QucHVzaCh2YWx1ZSk7XHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHRycGMubm9QZW9wbGUgPSAhcmVzcG9uc2UuZGF0YS50b3RhbDtcclxuXHRcdFx0XHRcdFx0cnBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IHJwYy5wZW9wbGVMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0XHRcdHJwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdHJwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblxyXG5cdFx0XHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0ZnVuY3Rpb24gbG9hZE1vcmVQZW9wbGUoKSB7XHJcblx0XHRcdFx0XHRycGMucGFyYW1zLnBhZ2UgKz0gMTtcclxuXHRcdFx0XHRcdGdldFJlY2VpdmVkUGVvcGxlKCk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0XHRcdHJwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0XHRcdHJwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gZmFsc2U7XHJcblx0XHRcdFx0XHRycGMucGVvcGxlTGlzdCA9IFtdO1xyXG5cdFx0XHRcdFx0cnBjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRcdFx0bGltaXQ6IDEwLFxyXG5cdFx0XHRcdFx0XHRwYWdlOiAxXHJcblx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0Z2V0UmVjZWl2ZWRQZW9wbGUoKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cclxuXHRcdFx0fV1cclxuXHRcdH07XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wZW9wbGUnKVxyXG5cdFx0LmRpcmVjdGl2ZSgncmVxdWVzdGVkUGVvcGxlTGlzdCcsIFsgJ3Blb3BsZVNlcnZpY2UnLCAnJGlvbmljTG9hZGluZycsIHJlcXVlc3RlZFBlb3BsZUxpc3RdKTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIHJlcXVlc3RlZFBlb3BsZUxpc3QoIHBlb3BsZVNlcnZpY2UsICRpb25pY0xvYWRpbmcpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnRScsXHJcblx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3Blb3BsZS92aWV3cy9yZXF1ZXN0ZWRQZW9wbGVMaXN0Lmh0bWwnLFxyXG5cdFx0XHRyZXBsYWNlOiB0cnVlLFxyXG5cdFx0XHRjb250cm9sbGVyQXM6ICdycGMnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cclxuXHRcdFx0fSxcclxuXHRcdFx0Y29udHJvbGxlcjogWyckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpIHtcclxuXHRcdFx0XHR2YXIgcnBjID0gdGhpcztcclxuXHRcdFx0XHRycGMuZ2V0UmVxdWVzdGVkUGVvcGxlID0gZ2V0UmVxdWVzdGVkUGVvcGxlO1xyXG5cdFx0XHRcdHJwYy5sb2FkTW9yZVBlb3BsZSA9IGxvYWRNb3JlUGVvcGxlO1xyXG5cdFx0XHRcdGFjdGl2YXRlKCk7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0ZnVuY3Rpb24gZ2V0UmVxdWVzdGVkUGVvcGxlKCkge1xyXG5cdFx0XHRcdFx0cGVvcGxlU2VydmljZS5nZXRSZXF1ZXN0ZWRVc2VycyhycGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UuZGF0YS5kb2NzLCBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRcdFx0XHRcdHJwYy5wZW9wbGVMaXN0LnB1c2godmFsdWUpO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0cnBjLm5vUGVvcGxlID0gIXJlc3BvbnNlLmRhdGEudG90YWw7XHJcblx0XHRcdFx0XHRcdHJwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0aWYgKHJlc3BvbnNlLmRhdGEudG90YWwgPiBycGMucGVvcGxlTGlzdC5sZW5ndGgpIHtcclxuXHRcdFx0XHRcdFx0XHRycGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRycGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cclxuXHRcdFx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwuaW5maW5pdGVTY3JvbGxDb21wbGV0ZScpO1xyXG5cdFx0XHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGZ1bmN0aW9uIGxvYWRNb3JlUGVvcGxlKCkge1xyXG5cdFx0XHRcdFx0cnBjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdFx0XHRnZXRSZXF1ZXN0ZWRQZW9wbGUoKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHRcdFx0cnBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0cnBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0XHRcdHJwYy5wZW9wbGVMaXN0ID0gW107XHJcblx0XHRcdFx0XHRycGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdFx0XHRsaW1pdDogMTAsXHJcblx0XHRcdFx0XHRcdHBhZ2U6IDFcclxuXHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHRnZXRSZXF1ZXN0ZWRQZW9wbGUoKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cclxuXHRcdFx0fV1cclxuXHRcdH07XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wZW9wbGUnKVxyXG5cdFx0LmRpcmVjdGl2ZSgnY2FuY2VsUmV2ZWFsJywgWyckaW9uaWNBY3Rpb25TaGVldCcsICdyZXZlYWxTZXJ2aWNlJywgY2FuY2VsUmV2ZWFsXSlcclxuXHRcdC5kaXJlY3RpdmUoJ2RlY2lkZVJldmVhbCcsIFsnJGlvbmljQWN0aW9uU2hlZXQnLCAncmV2ZWFsU2VydmljZScsIGRlY2lkZVJldmVhbF0pXHJcblx0XHQuZGlyZWN0aXZlKCdkZWxldGVSZXZlYWwnLCBbJyRpb25pY0FjdGlvblNoZWV0JywgJ3JldmVhbFNlcnZpY2UnLCBkZWxldGVSZXZlYWxdKVxyXG5cdFx0LmRpcmVjdGl2ZSgnc2VuZFJldmVhbCcsIFsnJGlvbmljQWN0aW9uU2hlZXQnLCAncmV2ZWFsU2VydmljZScsIHNlbmRSZXZlYWxdKVxyXG5cdFx0LmRpcmVjdGl2ZSgnY3JlYXRlQmxvY2snLCBbJyRpb25pY0FjdGlvblNoZWV0JywgJ2Jsb2NrU2VydmljZScsIGNyZWF0ZUJsb2NrXSlcclxuXHRcdC5kaXJlY3RpdmUoJ2RlbGV0ZUJsb2NrJywgWyckaW9uaWNBY3Rpb25TaGVldCcsICdibG9ja1NlcnZpY2UnLCBkZWxldGVCbG9ja10pXHJcblx0XHQuZGlyZWN0aXZlKCdkZWxldGVDaGF0JywgWyckaW9uaWNBY3Rpb25TaGVldCcsICdjaGF0U2VydmljZScsJyRzdGF0ZScsIGRlbGV0ZUNoYXRdKVxyXG5cdFx0LmRpcmVjdGl2ZSgnY2hhdFBhZ2UnLCBbJyRzdGF0ZScsIGNoYXRQYWdlXSlcclxuXHRcdC5kaXJlY3RpdmUoJ3VzZXJTZXR0aW5ncycsIFsnJGlvbmljUG9wb3ZlcicsIHVzZXJTZXR0aW5nc10pXHJcblx0XHQuZGlyZWN0aXZlKCd1c2VyUGFnZScsIFsnJHN0YXRlJywgdXNlclBhZ2VdKTtcclxuXHJcblx0XHJcblx0ZnVuY3Rpb24gZGVsZXRlQ2hhdCgkaW9uaWNBY3Rpb25TaGVldCwgY2hhdFNlcnZpY2UsJHN0YXRlKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0EnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdGRlbGV0ZUNoYXQ6ICdAJyxcclxuXHRcdFx0XHRhZnRlckNhbGxiYWNrOiAnJidcclxuXHRcdFx0fSxcclxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pIHtcclxuXHRcdFx0XHRlbGVtLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdFx0XHRcdCRpb25pY0FjdGlvblNoZWV0LnNob3coe1xyXG5cdFx0XHRcdFx0XHR0aXRsZVRleHQ6ICdEZWxldGUgJyxcclxuXHRcdFx0XHRcdFx0YnV0dG9uczogW3tcclxuXHRcdFx0XHRcdFx0XHR0ZXh0OiAnPGkgY2xhc3M9XCJpY29uIGlvbi1zaGFyZVwiPjwvaT4gRGVsZXRlIENoYXQgJ1xyXG5cdFx0XHRcdFx0XHR9LCBdLFxyXG5cclxuXHRcdFx0XHRcdFx0Y2FuY2VsVGV4dDogJ0NhbmNlbCcsXHJcblx0XHRcdFx0XHRcdGNhbmNlbDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ0NBTkNFTExFRCcpO1xyXG5cdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRidXR0b25DbGlja2VkOiBmdW5jdGlvbihpbmRleCkge1xyXG5cdFx0XHRcdFx0XHRcdGlmIChpbmRleCA9PT0gMCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0Y2hhdFNlcnZpY2UuZGVsZXRlQ2hhdFJvb20oc2NvcGUuZGVsZXRlQ2hhdCkudGhlbihmdW5jdGlvbihyZXMpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKHNjb3BlLmFmdGVyQ2FsbGJhY2spIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRzY29wZS5hZnRlckNhbGxiYWNrKCk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LmFsZXJ0KHJlcy5kYXRhKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0JHN0YXRlLmdvKCdob21lLmNoYXQuYWxsJyk7XHJcblx0XHRcdFx0XHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LmFsZXJ0KEpTT04uc3RyaW5naWZ5KGVycikpO1xyXG5cdFx0XHRcdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gdXNlclNldHRpbmdzKCRpb25pY1BvcG92ZXIpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0dXNlckJsb2NrOiAnQCcsXHJcblx0XHRcdFx0Y2hhdERlbGV0ZTogJ0AnLFxyXG5cdFx0XHRcdGJsb2NrSWQ6ICdAJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbSkge1xyXG5cdFx0XHRcdHNjb3BlLnVzZXJCbG9jayA9IChzY29wZS51c2VyQmxvY2s9PT1cInRydWVcIik7XHJcblx0XHRcdFx0c2NvcGUuYWZ0ZXJDYWxsYmFjayA9IGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRzY29wZS5wb3BvdmVyLnJlbW92ZSgpO1xyXG5cdFx0XHRcdFx0d2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG5cdFx0XHRcdH07XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHQkaW9uaWNQb3BvdmVyLmZyb21UZW1wbGF0ZVVybCgnYXBwL3VzZXIvdmlld3Mvc2V0dGluZ3NUZW1wbGF0ZS5odG1sJywge1xyXG5cdFx0XHRcdFx0XHRzY29wZTogc2NvcGVcclxuXHRcdFx0XHRcdH0pLnRoZW4oZnVuY3Rpb24ocG9wb3Zlcikge1xyXG5cdFx0XHRcdFx0XHRzY29wZS5wb3BvdmVyID0gcG9wb3ZlcjtcclxuXHRcdFx0XHRcdFx0c2NvcGUucG9wb3Zlci5zaG93KGV2ZW50KTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBjaGF0UGFnZSgkc3RhdGUpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0Y2hhdFBhZ2U6ICdAJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbSkge1xyXG5cdFx0XHRcdGVsZW0uYmluZCgnY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0XHRcdFx0JHN0YXRlLmdvKCdjaGF0Qm94JywgeyB1c2VyOiBzY29wZS5jaGF0UGFnZSB9KTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gdXNlclBhZ2UoJHN0YXRlKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdHVzZXJQYWdlOiAnQCdcclxuXHRcdFx0fSxcclxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pIHtcclxuXHRcdFx0XHRlbGVtLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdFx0XHRcdCRzdGF0ZS5nbygnaG9tZS51c2VyUGFnZScsIHsgdXNlcjogc2NvcGUudXNlclBhZ2UgfSk7XHJcblx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGNhbmNlbFJldmVhbCgkaW9uaWNBY3Rpb25TaGVldCwgcmV2ZWFsU2VydmljZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVzdHJpY3Q6ICdBJyxcclxuXHRcdFx0c2NvcGU6IHtcclxuXHRcdFx0XHRhZnRlckNhbGxiYWNrOiAnJicsXHJcblx0XHRcdFx0Y2FuY2VsUmV2ZWFsOiAnQCdcclxuXHRcdFx0fSxcclxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pIHtcclxuXHRcdFx0XHRlbGVtLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdFx0XHRcdCRpb25pY0FjdGlvblNoZWV0LnNob3coe1xyXG5cdFx0XHRcdFx0XHR0aXRsZVRleHQ6ICdSZXZlYWwnLFxyXG5cdFx0XHRcdFx0XHRidXR0b25zOiBbe1xyXG5cdFx0XHRcdFx0XHRcdHRleHQ6ICc8aSBjbGFzcz1cImljb24gaW9uLXNoYXJlXCI+PC9pPiBDYW5jZWwgUmV2ZWFsIFJlcXVlc3QnXHJcblx0XHRcdFx0XHRcdH0sIF0sXHJcblx0XHRcdFx0XHRcdGNhbmNlbFRleHQ6ICdDYW5jZWwnLFxyXG5cdFx0XHRcdFx0XHRjYW5jZWw6IGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdFx0YnV0dG9uQ2xpY2tlZDogZnVuY3Rpb24oaW5kZXgpIHtcclxuXHRcdFx0XHRcdFx0XHRyZXZlYWxTZXJ2aWNlLmNhbmNlbChzY29wZS5jYW5jZWxSZXZlYWwpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKHNjb3BlLmFmdGVyQ2FsbGJhY2spIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0c2NvcGUuYWZ0ZXJDYWxsYmFjaygpO1xyXG5cdFx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkZWNpZGVSZXZlYWwoJGlvbmljQWN0aW9uU2hlZXQsIHJldmVhbFNlcnZpY2UpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0YWZ0ZXJDYWxsYmFjazogJyYnLFxyXG5cdFx0XHRcdGRlY2lkZVJldmVhbDogJ0AnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHQkaW9uaWNBY3Rpb25TaGVldC5zaG93KHtcclxuXHRcdFx0XHRcdFx0dGl0bGVUZXh0OiAnUmV2ZWFsJyxcclxuXHRcdFx0XHRcdFx0YnV0dG9uczogW3tcclxuXHRcdFx0XHRcdFx0XHR0ZXh0OiAnPGkgY2xhc3M9XCJpY29uIGlvbi1zaGFyZVwiPjwvaT4gQWNjZXB0IFJldmVhbCBSZXF1ZXN0J1xyXG5cdFx0XHRcdFx0XHR9LCB7XHJcblx0XHRcdFx0XHRcdFx0dGV4dDogJzxpIGNsYXNzPVwiaWNvbiBpb24tc2hhcmVcIj48L2k+IERlbnkgUmV2ZWFsIFJlcXVlc3QnXHJcblx0XHRcdFx0XHRcdH0sIF0sXHJcblxyXG5cdFx0XHRcdFx0XHRjYW5jZWxUZXh0OiAnQ2FuY2VsJyxcclxuXHRcdFx0XHRcdFx0Y2FuY2VsOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZygnQ0FOQ0VMTEVEJyk7XHJcblx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uKGluZGV4KSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdGlmIChpbmRleCA9PT0gMCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0cmV2ZWFsU2VydmljZS5hY2NlcHQoc2NvcGUuZGVjaWRlUmV2ZWFsKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoc2NvcGUuYWZ0ZXJDYWxsYmFjaykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNjb3BlLmFmdGVyQ2FsbGJhY2soKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKGluZGV4ID09PSAxKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRyZXZlYWxTZXJ2aWNlLmlnbm9yZShzY29wZS5kZWNpZGVSZXZlYWwpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoc2NvcGUuYWZ0ZXJDYWxsYmFjaykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNjb3BlLmFmdGVyQ2FsbGJhY2soKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkZWxldGVSZXZlYWwoJGlvbmljQWN0aW9uU2hlZXQsIHJldmVhbFNlcnZpY2UpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0YWZ0ZXJDYWxsYmFjazogJyYnLFxyXG5cdFx0XHRcdGRlbGV0ZVJldmVhbDogJ0AnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHQkaW9uaWNBY3Rpb25TaGVldC5zaG93KHtcclxuXHRcdFx0XHRcdFx0dGl0bGVUZXh0OiAnUmV2ZWFsJyxcclxuXHRcdFx0XHRcdFx0YnV0dG9uczogW3tcclxuXHRcdFx0XHRcdFx0XHR0ZXh0OiAnPGkgY2xhc3M9XCJpY29uIGlvbi1zaGFyZVwiPjwvaT4gRGVsZXRlIFJldmVhbCAnXHJcblx0XHRcdFx0XHRcdH0sIF0sXHJcblxyXG5cdFx0XHRcdFx0XHRjYW5jZWxUZXh0OiAnQ2FuY2VsJyxcclxuXHRcdFx0XHRcdFx0Y2FuY2VsOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZygnQ0FOQ0VMTEVEJyk7XHJcblx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uKGluZGV4KSB7XHJcblx0XHRcdFx0XHRcdFx0aWYgKGluZGV4ID09PSAwKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRyZXZlYWxTZXJ2aWNlLmZpbmlzaChzY29wZS5kZWxldGVSZXZlYWwpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmIChzY29wZS5hZnRlckNhbGxiYWNrKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0c2NvcGUuYWZ0ZXJDYWxsYmFjaygpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0d2luZG93LmFsZXJ0KEpTT04uc3RyaW5naWZ5KGVycikpO1xyXG5cdFx0XHRcdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gc2VuZFJldmVhbCgkaW9uaWNBY3Rpb25TaGVldCwgcmV2ZWFsU2VydmljZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVzdHJpY3Q6ICdBJyxcclxuXHRcdFx0c2NvcGU6IHtcclxuXHRcdFx0XHRhZnRlckNhbGxiYWNrOiAnJicsXHJcblx0XHRcdFx0c2VuZFJldmVhbDogJ0AnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHQkaW9uaWNBY3Rpb25TaGVldC5zaG93KHtcclxuXHRcdFx0XHRcdFx0dGl0bGVUZXh0OiAnUmV2ZWFsJyxcclxuXHRcdFx0XHRcdFx0YnV0dG9uczogW3tcclxuXHRcdFx0XHRcdFx0XHR0ZXh0OiAnPGkgY2xhc3M9XCJpY29uIGlvbi1zaGFyZVwiPjwvaT4gU2VuZCBSZXZlYWwgUmVxdWVzdCdcclxuXHRcdFx0XHRcdFx0fSwgXSxcclxuXHJcblx0XHRcdFx0XHRcdGNhbmNlbFRleHQ6ICdDYW5jZWwnLFxyXG5cdFx0XHRcdFx0XHRjYW5jZWw6IGZ1bmN0aW9uKCkge30sXHJcblx0XHRcdFx0XHRcdGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uKGluZGV4KSB7XHJcblx0XHRcdFx0XHRcdFx0cmV2ZWFsU2VydmljZS5pbml0aWF0ZShzY29wZS5zZW5kUmV2ZWFsKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdGlmIChzY29wZS5hZnRlckNhbGxiYWNrKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHNjb3BlLmFmdGVyQ2FsbGJhY2soKTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGNyZWF0ZUJsb2NrKCRpb25pY0FjdGlvblNoZWV0LCBibG9ja1NlcnZpY2UpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0Y3JlYXRlQmxvY2s6ICdAJyxcclxuXHRcdFx0XHRhZnRlckNhbGxiYWNrOiAnJidcclxuXHRcdFx0fSxcclxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pIHtcclxuXHRcdFx0XHRlbGVtLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdFx0XHRcdCRpb25pY0FjdGlvblNoZWV0LnNob3coe1xyXG5cdFx0XHRcdFx0XHR0aXRsZVRleHQ6ICdCbG9jayBVc2VyJyxcclxuXHRcdFx0XHRcdFx0YnV0dG9uczogW3tcclxuXHRcdFx0XHRcdFx0XHR0ZXh0OiAnPGkgY2xhc3M9XCJpY29uIGlvbi1zaGFyZVwiPjwvaT4gQmxvY2snXHJcblx0XHRcdFx0XHRcdH0sIF0sXHJcblxyXG5cdFx0XHRcdFx0XHRjYW5jZWxUZXh0OiAnQ2FuY2VsJyxcclxuXHRcdFx0XHRcdFx0Y2FuY2VsOiBmdW5jdGlvbigpIHt9LFxyXG5cdFx0XHRcdFx0XHRidXR0b25DbGlja2VkOiBmdW5jdGlvbihpbmRleCkge1xyXG5cdFx0XHRcdFx0XHRcdGJsb2NrU2VydmljZS5jcmVhdGUoc2NvcGUuY3JlYXRlQmxvY2spLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0d2luZG93LmFsZXJ0KFwidXNlciBibG9ja2VkXCIpO1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYoc2NvcGUuYWZ0ZXJDYWxsYmFjayl7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHNjb3BlLmFmdGVyQ2FsbGJhY2soKTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGRlbGV0ZUJsb2NrKCRpb25pY0FjdGlvblNoZWV0LCBibG9ja1NlcnZpY2UpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0YWZ0ZXJDYWxsYmFjazogJyYnLFxyXG5cdFx0XHRcdGRlbGV0ZUJsb2NrOiAnQCdcclxuXHRcdFx0fSxcclxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pIHtcclxuXHRcdFx0XHRlbGVtLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdFx0XHRcdCRpb25pY0FjdGlvblNoZWV0LnNob3coe1xyXG5cdFx0XHRcdFx0XHR0aXRsZVRleHQ6ICdCbG9jaycsXHJcblx0XHRcdFx0XHRcdGJ1dHRvbnM6IFt7XHJcblx0XHRcdFx0XHRcdFx0dGV4dDogJzxpIGNsYXNzPVwiaWNvbiBpb24tc2hhcmVcIj48L2k+IFVuYmxvY2sgVXNlciAnXHJcblx0XHRcdFx0XHRcdH0sIF0sXHJcblxyXG5cdFx0XHRcdFx0XHRjYW5jZWxUZXh0OiAnQ2FuY2VsJyxcclxuXHRcdFx0XHRcdFx0Y2FuY2VsOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZygnQ0FOQ0VMTEVEJyk7XHJcblx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uKGluZGV4KSB7XHJcblx0XHRcdFx0XHRcdFx0aWYgKGluZGV4ID09PSAwKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRibG9ja1NlcnZpY2UucmVtb3ZlKHNjb3BlLmRlbGV0ZUJsb2NrKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoc2NvcGUuYWZ0ZXJDYWxsYmFjaykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNjb3BlLmFmdGVyQ2FsbGJhY2soKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0LypcclxuXHQgKlNlcnZpY2UgZm9yIGdldHRpbmcgYSBzaW5nbGUgc3RvcmUgd2l0aCBpdHMgaWRcclxuXHQgKi9cclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucGVvcGxlJylcclxuXHRcdC5zZXJ2aWNlKCdwZW9wbGVTZXJ2aWNlJywgW1wiJGh0dHBcIiwgXCJob21lU2VydmljZVwiLCAndXNlckxvY2F0aW9uU2VydmljZScsICckcScsIFBlb3BsZVNlcnZpY2VdKTtcclxuXHJcblx0LypcclxuXHQgKiBUaGlzIHNlcnZpYyBoYXMgYSBmdW5jdGlvbiBuYW1lcyBnZXRTdG9yZSB3aGljaCB0YWtlcyBpZCBhcyBwYXJhbWV0ZXIgYW5kIHJldHVybnMgYSBwcm9taXNlXHJcblx0ICovXHJcblx0ZnVuY3Rpb24gUGVvcGxlU2VydmljZSgkaHR0cCwgaG9tZVNlcnZpY2UsIHVzZXJMb2NhdGlvblNlcnZpY2UsICRxKSB7XHJcblxyXG5cdFx0dGhpcy5nZXRBbGxVc2VycyA9IGdldEFsbFVzZXJzO1xyXG5cdFx0dGhpcy5nZXRSZXZlYWxlZFVzZXJzID0gZ2V0UmV2ZWFsZWRVc2VycztcclxuXHRcdHRoaXMuZ2V0TmVhcmJ5VXNlcnMgPSBnZXROZWFyYnlVc2VycztcclxuXHRcdHRoaXMuZ2V0UmVxdWVzdGVkVXNlcnMgPSBnZXRSZXF1ZXN0ZWRVc2VycztcclxuXHRcdHRoaXMuZ2V0UmVjZWl2ZWRVc2VycyA9IGdldFJlY2VpdmVkVXNlcnM7XHJcblx0XHR0aGlzLmdldE5lYXJieVVzZXJzID0gZ2V0TmVhcmJ5VXNlcnM7XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0QWxsVXNlcnMocGFyYW1zKSB7XHJcblx0XHRcdHBhcmFtcy5hbGwgPSB0cnVlO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyBcInVzZXIvZ2V0VXNlcnNcIiwgeyBwYXJhbXM6IHBhcmFtcyB9KTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0UmV2ZWFsZWRVc2VycyhwYXJhbXMpIHtcclxuXHRcdFx0cGFyYW1zLnJldmVhbGVkID0gdHJ1ZTtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgXCJ1c2VyL2dldFVzZXJzXCIsIHsgcGFyYW1zOiBwYXJhbXMgfSk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFJlY2VpdmVkVXNlcnMocGFyYW1zKSB7XHJcblx0XHRcdHBhcmFtcy5yZWNlaXZlZCA9IHRydWU7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArIFwidXNlci9nZXRVc2Vyc1wiLCB7IHBhcmFtczogcGFyYW1zIH0pO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSZXF1ZXN0ZWRVc2VycyhwYXJhbXMpIHtcclxuXHRcdFx0cGFyYW1zLnJlcXVlc3RlZCA9IHRydWU7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArIFwidXNlci9nZXRVc2Vyc1wiLCB7IHBhcmFtczogcGFyYW1zIH0pO1xyXG5cclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldEZpbHRlcmVkVXNlcnMoZGVmZXIscGFyYW1zKXtcclxuXHRcdFx0JGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyBcInVzZXIvZ2V0VXNlcnNcIiwgeyBwYXJhbXM6IHBhcmFtcyB9KS50aGVuKGZ1bmN0aW9uKHVzZXJzKSB7XHJcblx0XHRcdFx0XHRkZWZlci5yZXNvbHZlKHVzZXJzKTtcclxuXHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdGRlZmVyLnJlamVjdChlcnIpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ2V0TmVhcmJ5VXNlcnMocGFyYW1zKSB7XHJcblx0XHRcdGlmIChwYXJhbXMucGFnZSA9PSAxKSB7XHJcblx0XHRcdFx0dXNlckxvY2F0aW9uU2VydmljZS5zZXRVc2VyTG9jYXRpb24oKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRwYXJhbXMubmVhcmJ5ID0gdHJ1ZTtcclxuXHRcdFx0dmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuXHRcdFx0XHJcblx0XHRcdHVzZXJMb2NhdGlvblNlcnZpY2UuZ2V0VXNlckxvY2F0aW9uKCkudGhlbihmdW5jdGlvbihwb3NpdGlvbikge1xyXG5cdFx0XHRcdHBhcmFtcy5sYXRpdHVkZSA9IHBvc2l0aW9uLmxhdGl0dWRlO1xyXG5cdFx0XHRcdHBhcmFtcy5sb25naXR1ZGUgPSBwb3NpdGlvbi5sb25naXR1ZGU7XHJcblx0XHRcdFx0JGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyBcInVzZXIvZ2V0VXNlcnNcIiwgeyBwYXJhbXM6IHBhcmFtcyB9KS50aGVuKGZ1bmN0aW9uKHVzZXJzKSB7XHJcblx0XHRcdFx0XHRkZWZlci5yZXNvbHZlKHVzZXJzKTtcclxuXHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdGRlZmVyLnJlamVjdChlcnIpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHR3aW5kb3cuY29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRnZXRGaWx0ZXJlZFVzZXJzKGRlZmVyLHBhcmFtcyk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0cmV0dXJuIGRlZmVyLnByb21pc2U7XHJcblx0XHR9XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBvc3QnKS5cclxuXHRzZXJ2aWNlKCd1cHZvdGVTZXJ2aWNlJywgWyckaHR0cCcsICdob21lU2VydmljZScsICBVcHZvdGVTZXJ2aWNlXSk7XHJcblxyXG5cclxuXHRmdW5jdGlvbiBVcHZvdGVTZXJ2aWNlKCRodHRwLCBob21lU2VydmljZSkge1xyXG5cdFx0XHJcblx0XHR0aGlzLmNyZWF0ZVVwdm90ZSA9IGNyZWF0ZVVwdm90ZTtcclxuXHRcdHRoaXMuZGVsZXRlVXB2b3RlID0gZGVsZXRlVXB2b3RlO1xyXG5cdFx0dGhpcy5nZXRVcHZvdGUgPSBnZXRVcHZvdGU7XHJcblxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFVwdm90ZShwb3N0SWQpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgJ3Vwdm90ZS9nZXQvJytwb3N0SWQpO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHRmdW5jdGlvbiBjcmVhdGVVcHZvdGUocG9zdElkKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAndXB2b3RlL2NyZWF0ZS8nK3Bvc3RJZCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZGVsZXRlVXB2b3RlKHBvc3RJZCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ3Vwdm90ZS9kZWxldGUvJyArIHBvc3RJZCk7XHJcblx0XHR9XHJcblxyXG5cdFx0XHJcblxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucG9zdCcpXHJcblx0XHQuY29udHJvbGxlcignQWxsUG9zdENvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGUnLCAncG9zdFNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJywgQWxsUG9zdENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gQWxsUG9zdENvbnRyb2xsZXIoJHNjb3BlLCAkc3RhdGUsIHBvc3RTZXJ2aWNlLCRpb25pY0xvYWRpbmcpIHtcclxuXHRcdHZhciBhcGMgPSB0aGlzO1xyXG5cdFx0YXBjLmdldEFsbFBvc3RzID0gZ2V0QWxsUG9zdHM7XHJcblx0XHRhcGMucHVsbFJlZnJlc2hQb3N0cyA9IHB1bGxSZWZyZXNoUG9zdHM7XHJcblx0XHRhcGMubG9hZE1vcmVQb3N0cyA9IGxvYWRNb3JlUG9zdHM7XHJcblx0XHRhcGMucG9zdFNlYXJjaFRleHRTdWJtaXQgPSBwb3N0U2VhcmNoVGV4dFN1Ym1pdDtcclxuXHRcdGFwYy5zZWFyY2hDcm9zc1N1Ym1pdCA9IHNlYXJjaENyb3NzU3VibWl0O1xyXG5cdFx0YXBjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRsaW1pdDogMyxcclxuXHRcdFx0XHRwYWdlOiAxXHJcblx0XHRcdH07XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0XHJcblx0XHRmdW5jdGlvbiBwdWxsUmVmcmVzaFBvc3RzKCkge1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHNlYXJjaENyb3NzU3VibWl0KCl7XHJcblx0XHRcdGFwYy5wb3N0U2VhcmNoVGV4dCA9ICcnO1xyXG5cdFx0XHRhcGMuc2hvd1NlYXJjaENyb3NzID0gZmFsc2U7XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBwb3N0U2VhcmNoVGV4dFN1Ym1pdChpbnRlcmVzdCl7XHJcblx0XHRcdFxyXG5cdFx0XHRhcGMuc2hvd1NlYXJjaENyb3NzID0gdHJ1ZTtcclxuXHRcdFx0aWYoaW50ZXJlc3Qpe1xyXG5cdFx0XHRcdGFwYy5wb3N0U2VhcmNoVGV4dCA9IGludGVyZXN0O1x0XHJcblx0XHRcdH1cclxuXHRcdFx0aWYoYXBjLnBvc3RTZWFyY2hUZXh0KXtcclxuXHRcdFx0XHRhY3RpdmF0ZSgpO1x0XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBsb2FkTW9yZVBvc3RzKCkge1xyXG5cdFx0XHRhcGMucGFyYW1zLnBhZ2UgKz0gMTtcclxuXHRcdFx0Z2V0QWxsUG9zdHMoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRBbGxQb3N0cygpIHtcclxuXHRcdFx0YXBjLm5vUG9zdHMgPSBmYWxzZTtcdFxyXG5cdFx0XHRwb3N0U2VydmljZS5nZXRBbGxQb3N0cyhhcGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0YW5ndWxhci5mb3JFYWNoKHJlc3BvbnNlLmRhdGEuZG9jcywgZnVuY3Rpb24odmFsdWUpIHtcclxuXHRcdFx0XHRcdGFwYy5wb3N0c0xpc3QucHVzaCh2YWx1ZSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0YXBjLm5vUG9zdHMgPSFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFwYy5wb3N0c0xpc3QubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcdFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHJcblxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0YXBjLnBvc3RzTGlzdCA9IFtdO1xyXG5cdFx0XHRhcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdGxpbWl0OiA1LFxyXG5cdFx0XHRcdHBhZ2U6IDEsXHJcblxyXG5cdFx0XHR9O1xyXG5cdFx0XHRpZihhcGMucG9zdFNlYXJjaFRleHQpe1xyXG5cdFx0XHRcdGFwYy5wYXJhbXMuaW50ZXJlc3QgPSBcdGFwYy5wb3N0U2VhcmNoVGV4dDtcclxuXHRcdFx0fVxyXG5cdFx0XHRnZXRBbGxQb3N0cygpO1xyXG5cdFx0fVxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucG9zdCcpXHJcblx0XHQuY29udHJvbGxlcignQ3JlYXRlUG9zdENvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGUnLCAncG9zdFNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJywgJ2hvbWVTZXJ2aWNlJyxDcmVhdGVQb3N0Q29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBDcmVhdGVQb3N0Q29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgcG9zdFNlcnZpY2UsJGlvbmljTG9hZGluZyxob21lU2VydmljZSkge1xyXG5cdFx0dmFyIGNwYyA9IHRoaXM7XHJcblx0XHRjcGMuc3VibWl0UG9zdCA9IHN1Ym1pdFBvc3Q7XHJcblx0XHRjcGMucG9zdCA9IHt9O1xyXG5cdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRjcGMuZ29CYWNrID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0d2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG5cdFx0fTtcclxuXHRcdCRzY29wZS4kd2F0Y2goZnVuY3Rpb24oKXtcclxuXHRcdFx0cmV0dXJuIGNwYy5wb3N0LmNvbnRlbnQ7XHJcblx0XHR9LCBmdW5jdGlvbihuZXdWYWwsIG9sZFZhbCkge1xyXG5cdFx0XHRpZiAobmV3VmFsICYmIG5ld1ZhbC5sZW5ndGggPiAzMDApIHtcclxuXHRcdFx0XHRjcGMucG9zdC5jb250ZW50ID0gb2xkVmFsO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHJcblx0XHRmdW5jdGlvbiBzdWJtaXRQb3N0KCkge1xyXG5cdFx0XHQkaW9uaWNMb2FkaW5nLnNob3coKTtcclxuXHRcdFx0cG9zdFNlcnZpY2Uuc3VibWl0UG9zdChjcGMucG9zdCkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHRcdCRzdGF0ZS5nbygnaG9tZS5wb3N0LmxhdGVzdCcpO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhcInBvc3QgY29udHJvbGxlciBlcnJvclwiKTtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0Y3BjLnNlbGVjdFJhbmRvbUltYWdlID0gZnVuY3Rpb24oaW1nKXtcclxuXHRcdFx0Y3BjLnBvc3QuaW1hZ2UgPSBpbWc7XHJcblx0XHR9O1xyXG5cdFx0Y3BjLmxvYWRSYW5kb21JbWFnZXMgPSBmdW5jdGlvbihpbWFnZVRleHQpe1xyXG5cdFx0XHRjcGMubG9hZGluZ1JhbmRvbUltYWdlID0gdHJ1ZTtcclxuXHRcdFx0Y3BjLnJhbmRvbUltYWdlcyA9IFtdO1xyXG5cdFx0XHRob21lU2VydmljZS5nZXRJbWFnZXMoaW1hZ2VUZXh0KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuXHRcdFx0XHRjcGMucmFuZG9tSW1hZ2VzID0gcmVzcG9uc2UuZGF0YTtcclxuXHRcdFx0XHRjcGMubG9hZGluZ1JhbmRvbUltYWdlID0gZmFsc2U7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coXCJpbWFnZXMgZXJyXCIpO1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHRcdGNwYy5jYW5jZWxVcGxvYWQgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0aWYoY3BjLnBvc3QuaW1hZ2VJZCl7XHJcblx0XHRcdFx0aG9tZVNlcnZpY2UuZGVsZXRlVXBsb2FkKGNwYy5wb3N0LmltYWdlSWQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG5cdFx0XHRcdFx0Y3BjLnBvc3QuaW1hZ2UgPSAnJztcclxuXHRcdFx0XHRcdGNwYy5wb3N0LmltYWdlSWQgPSAnJztcdFx0XHRcdFx0XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdFxyXG5cdFx0fTtcclxuXHJcblx0XHRjcGMuc3VibWl0VXBsb2FkID0gZnVuY3Rpb24oZmlsZSwgZXJyRmlsZXMpIHtcclxuXHRcdFx0aWYoY3BjLnBvc3QuaW1hZ2VJZCl7XHJcblx0XHRcdFx0Y3BjLmNhbmNlbFVwbG9hZCgpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGNwYy5sb2FkaW5nSW1hZ2UgPSB0cnVlO1xyXG5cdFx0XHRjcGMuZmlsZSA9IGZpbGU7XHJcblx0XHRcdGNwYy5lcnJGaWxlID0gZXJyRmlsZXMgJiYgZXJyRmlsZXNbMF07XHJcblx0XHRcdGlmIChjcGMuZmlsZSkge1xyXG5cdFx0XHRcdGhvbWVTZXJ2aWNlLnN1Ym1pdFVwbG9hZChjcGMuZmlsZSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdFx0Y3BjLnBvc3QuaW1hZ2UgPSByZXNwb25zZS5kYXRhLmltYWdlO1xyXG5cdFx0XHRcdFx0Y3BjLnBvc3QuaW1hZ2VJZCA9IHJlc3BvbnNlLmRhdGEuaW1hZ2VJZDtcclxuXHRcdFx0XHRcdGNwYy5sb2FkaW5nSW1hZ2UgPSBmYWxzZTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdH07XHJcblx0XHRcclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpe1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucG9zdCcpXHJcblx0XHQuY29udHJvbGxlcignTGF0ZXN0UG9zdENvbnRyb2xsZXInLFsnJHNjb3BlJywnJHN0YXRlJywncG9zdFNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJyxMYXRlc3RQb3N0Q29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBMYXRlc3RQb3N0Q29udHJvbGxlcigkc2NvcGUsJHN0YXRlLHBvc3RTZXJ2aWNlLCRpb25pY0xvYWRpbmcpe1xyXG5cdFx0dmFyIGFwYyA9IHRoaXM7XHJcblx0XHRhcGMuZ2V0TGF0ZXN0UG9zdHMgPSBnZXRMYXRlc3RQb3N0cztcclxuXHRcdGFwYy5wdWxsUmVmcmVzaFBvc3RzID0gcHVsbFJlZnJlc2hQb3N0cztcclxuXHRcdGFwYy5sb2FkTW9yZVBvc3RzID0gbG9hZE1vcmVQb3N0cztcclxuXHRcdGFjdGl2YXRlKCk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gcHVsbFJlZnJlc2hQb3N0cygpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVQb3N0cygpIHtcclxuXHRcdFx0YXBjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldExhdGVzdFBvc3RzKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0TGF0ZXN0UG9zdHMoKSB7XHJcblx0XHRcdHBvc3RTZXJ2aWNlLmdldExhdGVzdFBvc3RzKGFwYy5wYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UuZGF0YS5kb2NzLCBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRcdFx0YXBjLnBvc3RzTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhcGMubm9Qb3N0cyA9IXJlc3BvbnNlLmRhdGEudG90YWw7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSB0cnVlO1xyXG5cdFx0XHRcdGlmIChyZXNwb25zZS5kYXRhLnRvdGFsID4gYXBjLnBvc3RzTGlzdC5sZW5ndGgpIHtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNle1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1x0XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0YXBjLnBvc3RzTGlzdCA9IFtdO1xyXG5cdFx0XHRhcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdGxpbWl0OiAzLFxyXG5cdFx0XHRcdHBhZ2U6IDFcclxuXHRcdFx0fTtcclxuXHRcdFx0Z2V0TGF0ZXN0UG9zdHMoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcil7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wb3N0JylcclxuXHRcdC5jb250cm9sbGVyKCdOZWFyYnlQb3N0Q29udHJvbGxlcicsWyckc2NvcGUnLCckc3RhdGUnLCdwb3N0U2VydmljZScsJyRpb25pY0xvYWRpbmcnLE5lYXJieVBvc3RDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIE5lYXJieVBvc3RDb250cm9sbGVyKCRzY29wZSwkc3RhdGUscG9zdFNlcnZpY2UsJGlvbmljTG9hZGluZyl7XHJcblx0XHR2YXIgYXBjID0gdGhpcztcclxuXHRcdGFwYy5nZXROZWFyYnlQb3N0cyA9IGdldE5lYXJieVBvc3RzO1xyXG5cdFx0YXBjLnB1bGxSZWZyZXNoUG9zdHMgPSBwdWxsUmVmcmVzaFBvc3RzO1xyXG5cdFx0YXBjLmxvYWRNb3JlUG9zdHMgPSBsb2FkTW9yZVBvc3RzO1xyXG5cdFx0YXBjLnJlbGVhc2VSYW5nZSA9IHJlbGVhc2VSYW5nZTtcclxuXHRcdGFwYy5kaXN0YW5jZSA9IDEwO1xyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBwdWxsUmVmcmVzaFBvc3RzKCkge1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHJlbGVhc2VSYW5nZSgpe1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVQb3N0cygpIHtcclxuXHRcdFx0YXBjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldE5lYXJieVBvc3RzKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0TmVhcmJ5UG9zdHMoKSB7XHJcblx0XHRcdHBvc3RTZXJ2aWNlLmdldE5lYXJieVBvc3RzKGFwYy5wYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UuZGF0YS5kb2NzLCBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRcdFx0YXBjLnBvc3RzTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhcGMubm9Qb3N0cyA9IXJlc3BvbnNlLmRhdGEudG90YWw7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSB0cnVlO1xyXG5cdFx0XHRcdGlmIChyZXNwb25zZS5kYXRhLnRvdGFsID4gYXBjLnBvc3RzTGlzdC5sZW5ndGgpIHtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNle1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1x0XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdFxyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHRcdFxyXG5cclxuXHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwuaW5maW5pdGVTY3JvbGxDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0fSk7XHJcblxyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1xyXG5cdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IGZhbHNlO1xyXG5cdFx0XHRhcGMucG9zdHNMaXN0ID0gW107XHJcblx0XHRcdGFwYy5wYXJhbXMgPSB7XHJcblx0XHRcdFx0bGltaXQ6IDEwLFxyXG5cdFx0XHRcdHBhZ2U6IDEsXHJcblx0XHRcdFx0ZGlzdGFuY2U6IGFwYy5kaXN0YW5jZVxyXG5cdFx0XHR9O1xyXG5cdFx0XHRnZXROZWFyYnlQb3N0cygpO1xyXG5cdFx0fVxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpOyIsIihmdW5jdGlvbihhbmd1bGFyKXtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBvc3QnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ1BvcHVsYXJQb3N0Q29udHJvbGxlcicsWyckc2NvcGUnLCckc3RhdGUnLCdwb3N0U2VydmljZScsJyRpb25pY0xvYWRpbmcnLFBvcHVsYXJQb3N0Q29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBQb3B1bGFyUG9zdENvbnRyb2xsZXIoJHNjb3BlLCRzdGF0ZSxwb3N0U2VydmljZSwkaW9uaWNMb2FkaW5nKXtcclxuXHRcdHZhciBhcGMgPSB0aGlzO1xyXG5cdFx0YXBjLmdldFBvcHVsYXJQb3N0cyA9IGdldFBvcHVsYXJQb3N0cztcclxuXHRcdGFwYy5wdWxsUmVmcmVzaFBvc3RzID0gcHVsbFJlZnJlc2hQb3N0cztcclxuXHRcdGFwYy5sb2FkTW9yZVBvc3RzID0gbG9hZE1vcmVQb3N0cztcclxuXHRcdGFjdGl2YXRlKCk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gcHVsbFJlZnJlc2hQb3N0cygpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVQb3N0cygpIHtcclxuXHRcdFx0YXBjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldFBvcHVsYXJQb3N0cygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFBvcHVsYXJQb3N0cygpIHtcclxuXHRcdFx0cG9zdFNlcnZpY2UuZ2V0UG9wdWxhclBvc3RzKGFwYy5wYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UuZGF0YS5kb2NzLCBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRcdFx0YXBjLnBvc3RzTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpZighcmVzcG9uc2UuZGF0YS50b3RhbCl7XHJcblx0XHRcdFx0XHRhcGMubm9Qb3N0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFwYy5wb3N0c0xpc3QubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcdFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLmluZmluaXRlU2Nyb2xsQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1xyXG5cdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IGZhbHNlO1xyXG5cdFx0XHRhcGMucG9zdHNMaXN0ID0gW107XHJcblx0XHRcdGFwYy5wYXJhbXMgPSB7XHJcblx0XHRcdFx0bGltaXQ6IDMsXHJcblx0XHRcdFx0cGFnZTogMVxyXG5cdFx0XHR9O1xyXG5cdFx0XHRnZXRQb3B1bGFyUG9zdHMoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcil7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wb3N0JylcclxuXHRcdC5jb250cm9sbGVyKCdQb3N0UGFyZW50Q29udHJvbGxlcicsWyckcm9vdFNjb3BlJyxQb3N0UGFyZW50Q29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBQb3N0UGFyZW50Q29udHJvbGxlcigkcm9vdFNjb3BlKXtcclxuXHRcdC8vJHJvb3RTY29wZS5zbGlkZUhlYWRlciA9IHRydWU7XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7IiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBvc3QnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ1NpbmdsZVBvc3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ3Bvc3RTZXJ2aWNlJywgJyRzdGF0ZVBhcmFtcycsJyRpb25pY0hpc3RvcnknLCd1cHZvdGVTZXJ2aWNlJyxTaW5nbGVQb3N0Q29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBTaW5nbGVQb3N0Q29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgcG9zdFNlcnZpY2UsJHN0YXRlUGFyYW1zLCRpb25pY0hpc3RvcnksdXB2b3RlU2VydmljZSkge1xyXG5cdFx0dmFyIGFwYyA9IHRoaXM7XHJcblx0XHRhcGMuZ2V0U2luZ2xlUG9zdD0gZ2V0U2luZ2xlUG9zdDtcclxuXHRcdGFwYy5zdWJtaXRQb3N0VXB2b3RlID0gc3VibWl0UG9zdFVwdm90ZTtcclxuXHRcdGFwYy5kZWxldGVQb3N0VXB2b3RlID0gZGVsZXRlUG9zdFVwdm90ZTtcclxuXHRcdGFwYy5nZXRQb3N0RGlzdGFuY2UgPSBnZXRQb3N0RGlzdGFuY2U7XHJcblx0XHRhcGMuYmFjayA9IGZ1bmN0aW9uKCl7XHJcblx0XHRcdFxyXG5cdFx0XHR3aW5kb3cuaGlzdG9yeS5iYWNrKCk7IFxyXG5cdFx0fTtcclxuXHRcdFxyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gZ2V0U2luZ2xlUG9zdCgpIHtcclxuXHRcdFx0cG9zdFNlcnZpY2UuZ2V0UG9zdCgkc3RhdGVQYXJhbXMuaWQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRhcGMucG9zdCA9IHJlc3BvbnNlLmRhdGE7XHJcblx0XHRcdFx0YXBjLmRpc3RhbmNlT2JqID0ge1xyXG5cdFx0XHRcdFx0bGF0aXR1ZGU6YXBjLnBvc3QubG9jWzFdLFxyXG5cdFx0XHRcdFx0bG9uZ2l0dWRlOiBhcGMucG9zdC5sb2NbMF0sXHJcblx0XHRcdFx0XHRkaWF0YW5jZTogMFxyXG5cdFx0XHRcdH07XHJcblx0XHRcdFx0Z2V0UG9zdERpc3RhbmNlKCk7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGNoZWNrUG9zdFVwdm90ZSgpe1xyXG5cdFx0XHR1cHZvdGVTZXJ2aWNlLmdldFVwdm90ZShhcGMuY3VycmVudFBvc3QpLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRhcGMucG9zdFVwdm90ZWQgPSByZXMuZGF0YSB8fCBmYWxzZTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHN1Ym1pdFBvc3RVcHZvdGUoKXtcclxuXHRcdFx0dXB2b3RlU2VydmljZS5jcmVhdGVVcHZvdGUoYXBjLmN1cnJlbnRQb3N0KS50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0Y2hlY2tQb3N0VXB2b3RlKCk7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBkZWxldGVQb3N0VXB2b3RlKCl7XHJcblx0XHRcdHVwdm90ZVNlcnZpY2UuZGVsZXRlVXB2b3RlKGFwYy5jdXJyZW50UG9zdCkudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdGNoZWNrUG9zdFVwdm90ZSgpO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKXtcclxuXHRcdFx0YXBjLmN1cnJlbnRQb3N0ID0gJHN0YXRlUGFyYW1zLmlkO1xyXG5cdFx0XHRnZXRTaW5nbGVQb3N0KCk7XHJcblx0XHRcdGNoZWNrUG9zdFVwdm90ZSgpO1xyXG5cdFx0XHRcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldFBvc3REaXN0YW5jZSgpe1xyXG5cdFx0XHRwb3N0U2VydmljZS5nZXREaXN0YW5jZShhcGMuZGlzdGFuY2VPYmopO1xyXG5cdFx0fVxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHR2YXIgcG9zdE1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wb3N0Jyk7XHJcblx0cG9zdE1vZHVsZS5kaXJlY3RpdmUoJ3Bvc3RTZWFyY2hNb2RhbCcsIFsnJGlvbmljTW9kYWwnLCAncG9zdFNlcnZpY2UnLHBvc3RTZWFyY2hNb2RhbF0pO1xyXG5cclxuXHRmdW5jdGlvbiBwb3N0U2VhcmNoTW9kYWwoJGlvbmljTW9kYWwsIHBvc3RTZXJ2aWNlKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0EnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdHBvc3RTZWFyY2hNb2RhbDogJ0AnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0c2NvcGUucG9zdFNlYXJjaERhdGEgPSB7fTtcclxuXHRcdFx0XHRzY29wZS5wb3N0U2VhcmNoRGF0YS5wb3N0U2VhcmNoTW9kYWwgPSBzY29wZS5wb3N0U2VhcmNoTW9kYWw7XHJcblx0XHRcdFx0c2NvcGUucG9zdFNlYXJjaERhdGEucG9zdHNMaXN0ID0gW107XHJcblx0XHRcdFx0c2NvcGUubW9kYWxzTGlzdCA9IFtdO1xyXG5cdFx0XHRcdHNjb3BlLmNsaWNrUG9zdFNlYXJjaCA9IGNsaWNrUG9zdFNlYXJjaDtcclxuXHRcdFx0XHRzY29wZS5zaG93UG9zdE1vZGFsID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRsb2FkUG9zdE1vZGFsKCkudGhlbihmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0c2NvcGUubW9kYWwuc2hvdygpO1xyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0c2NvcGUuJG9uKCdtb2RhbC5oaWRkZW4nLCBmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdFx0XHRcdHNjb3BlLm1vZGFsLnJlbW92ZSgpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0XHRzY29wZS5nZXRQb3N0cyA9IGZ1bmN0aW9uKHBhcmFtcykge1xyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRwb3N0U2VydmljZS5nZXRBbGxQb3N0cyhwYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRcdFx0c2NvcGUucG9zdFNlYXJjaERhdGEucG9zdHNMaXN0LnB1c2godmFsdWUpO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0c2NvcGUucG9zdFNlYXJjaERhdGEubm9Qb3N0cyA9ICFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdFx0XHRzY29wZS5wb3N0U2VhcmNoRGF0YS5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0aWYgKHJlc3BvbnNlLmRhdGEudG90YWwgPiBzY29wZS5wb3N0U2VhcmNoRGF0YS5wb3N0c0xpc3QubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRcdFx0c2NvcGUucG9zdFNlYXJjaERhdGEuY2FuTG9hZE1vcmVSZXN1bHRzID0gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRzY29wZS5wb3N0U2VhcmNoRGF0YS5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0XHRmdW5jdGlvbiBjbGlja1Bvc3RTZWFyY2goKXtcclxuXHRcdFx0XHRcdHNjb3BlLnBvc3RTZWFyY2hEYXRhLnBvc3RzTGlzdCA9IFtdO1xyXG5cdFx0XHRcdFx0dmFyIHBhcmFtcyA9IHtcclxuXHRcdFx0XHRcdFx0aW50ZXJlc3Q6IHNjb3BlLnBvc3RTZWFyY2hEYXRhLnBvc3RTZWFyY2hNb2RhbCAsXHJcblx0XHRcdFx0XHRcdHBhZ2U6IDEsXHJcblx0XHRcdFx0XHRcdGxpbWl0OiA1MFxyXG5cdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdHNjb3BlLmdldFBvc3RzKHBhcmFtcyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGZ1bmN0aW9uIGxvYWRQb3N0TW9kYWwoKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gJGlvbmljTW9kYWwuZnJvbVRlbXBsYXRlVXJsKCdhcHAvcG9zdC92aWV3cy9wb3N0U2VhcmNoTW9kYWwuaHRtbCcsIHtcclxuXHRcdFx0XHRcdFx0c2NvcGU6IHNjb3BlXHJcblx0XHRcdFx0XHR9KS50aGVuKGZ1bmN0aW9uKG1vZGFsKSB7XHJcblx0XHRcdFx0XHRcdHNjb3BlLm1vZGFsID0gbW9kYWw7XHJcblx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsZW0uYmluZCgnY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0XHRcdFx0dmFyIHBhcmFtcyA9IHtcclxuXHRcdFx0XHRcdFx0aW50ZXJlc3Q6IHNjb3BlLnBvc3RTZWFyY2hEYXRhLnBvc3RTZWFyY2hNb2RhbCAsXHJcblx0XHRcdFx0XHRcdHBhZ2U6IDEsXHJcblx0XHRcdFx0XHRcdGxpbWl0OiA1MFxyXG5cdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdHNjb3BlLnNob3dQb3N0TW9kYWwoKTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdFx0c2NvcGUuZ2V0UG9zdHMocGFyYW1zKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0fVxyXG5cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucG9zdCcpXHJcblx0XHQuZGlyZWN0aXZlKCdwb3N0c0xpc3QnLCBbJyRzdGF0ZScsICd1c2VyRGF0YScsICdwb3N0U2VydmljZScsICd1cHZvdGVTZXJ2aWNlJywgJyRpb25pY01vZGFsJyxwb3N0c0xpc3RdKTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIHBvc3RzTGlzdCggJHN0YXRlLCB1c2VyRGF0YSwgcG9zdFNlcnZpY2UsIHVwdm90ZVNlcnZpY2UsJGlvbmljTW9kYWwpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnRScsXHJcblx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3Bvc3Qvdmlld3MvcG9zdHNMaXN0VGVtcGxhdGUuaHRtbCcsXHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0cG9zdHNMaXN0OiAnPXBvc3RzTGlzdCcsXHJcblx0XHRcdFx0cG9zdFNlYXJjaFRleHRTdWJtaXQ6ICcmcG9zdFNlYXJjaFRleHRTdWJtaXQnXHJcblx0XHRcdH0sXHJcblx0XHRcdHJlcGxhY2U6IHRydWUsXHJcblx0XHRcdC8vY29udHJvbGxlcjogWydzY29wZScsIF1cclxuXHRcdFx0bGluazogZnVuY3Rpb24gKHNjb3BlKSB7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0c2NvcGUuZ2V0VGltZSA9IGZ1bmN0aW9uKHRpbWUpe1xyXG5cdFx0XHRcdFx0cmV0dXJuIG1vbWVudCh0aW1lKS5mcm9tTm93KCk7XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0XHRzY29wZS5jdXJyZW50VXNlciA9IHVzZXJEYXRhLmdldFVzZXIoKTtcclxuXHJcblx0XHRcdFx0c2NvcGUuc2V0UG9zdFNlYXJjaCA9IGZ1bmN0aW9uKGludGVyZXN0KXtcclxuXHRcdFx0XHRcdGlmKHNjb3BlLnBvc3RTZWFyY2hUZXh0U3VibWl0KXtcclxuXHRcdFx0XHRcdFx0c2NvcGUucG9zdFNlYXJjaFRleHRTdWJtaXQoe2ludGVyZXN0OmludGVyZXN0fSk7XHRcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFxyXG5cdFx0XHRcdH07XHJcblx0XHRcdFx0c2NvcGUudXNlclBhZ2UgPSB1c2VyUGFnZTtcclxuXHRcdFx0XHRmdW5jdGlvbiB1c2VyUGFnZShpZCl7XHJcblx0XHRcdFx0XHRzY29wZS5tb2RhbC5oaWRlKCk7XHJcblx0XHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUudXNlclBhZ2UnLCB7IHVzZXI6IGlkIH0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRmdW5jdGlvbiBsb2FkUG9zdE1vZGFsKCkge1xyXG5cdFx0XHRcdFx0cmV0dXJuICRpb25pY01vZGFsLmZyb21UZW1wbGF0ZVVybCgnYXBwL3Bvc3Qvdmlld3MvcG9zdE1vZGFsLmh0bWwnLCB7XHJcblx0XHRcdFx0XHRcdHNjb3BlOiBzY29wZVxyXG5cdFx0XHRcdFx0fSkudGhlbihmdW5jdGlvbihtb2RhbCkge1xyXG5cdFx0XHRcdFx0XHRzY29wZS5tb2RhbCA9IG1vZGFsO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHNjb3BlLnBvc3RNb2RhbCA9IHt9O1xyXG5cdFx0XHRcdHNjb3BlLnBvc3RNb2RhbC51c2VyUGFnZSA9IHVzZXJQYWdlO1xyXG5cdFx0XHRcdFxyXG5cclxuXHRcdFx0XHRzY29wZS5zaG93UG9zdE1vZGFsID0gZnVuY3Rpb24ocG9zdCkge1xyXG5cdFx0XHRcdFx0c2NvcGUucG9zdE1vZGFsLnBvc3QgPSBwb3N0O1xyXG5cdFx0XHRcdFx0c2NvcGUucG9zdE1vZGFsLnBvc3Qudmlld3MrPTE7XHJcblx0XHRcdFx0XHRsb2FkUG9zdE1vZGFsKCkudGhlbihmdW5jdGlvbigpe1xyXG5cclxuXHRcdFx0XHRcdFx0c2NvcGUubW9kYWwuc2hvdygpO1x0XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdHNjb3BlLiRvbignbW9kYWwuaGlkZGVuJywgZnVuY3Rpb24oKSB7XHJcbiAgICBcdFx0XHRcdFx0XHRcclxuICAgIFx0XHRcdFx0XHRcdHNjb3BlLm1vZGFsLnJlbW92ZSgpO1xyXG4gIFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdFxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBvc3QnKVxyXG5cdFx0LmRpcmVjdGl2ZSgncG9zdFVwdm90ZScsIFsnJHN0YXRlJywgJ3Vwdm90ZVNlcnZpY2UnLCckdGltZW91dCcscG9zdFVwdm90ZV0pO1xyXG5cclxuXHJcblx0ZnVuY3Rpb24gcG9zdFVwdm90ZSggJHN0YXRlLCB1cHZvdGVTZXJ2aWNlLCR0aW1lb3V0KSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0UnLFxyXG5cdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wb3N0L3ZpZXdzL3Bvc3RVcHZvdGVUZW1wbGF0ZS5odG1sJyxcclxuXHRcdFx0c2NvcGU6IHtcclxuXHRcdFx0XHRwb3N0SWQ6ICc9cG9zdElkJyxcclxuXHRcdFx0XHR1cHZvdGVzTGVuZ3RoOiAnPXVwdm90ZXNMZW5ndGgnXHJcblx0XHRcdH0sXHJcblx0XHRcdHJlcGxhY2U6IHRydWUsXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uIChzY29wZSkge1xyXG5cdFx0XHRcdHNjb3BlLmNoZWNrUG9zdFVwdm90ZSA9IGNoZWNrUG9zdFVwdm90ZTtcclxuXHRcdFx0XHRzY29wZS5zdWJtaXRQb3N0VXB2b3RlID0gc3VibWl0UG9zdFVwdm90ZTtcclxuXHRcdFx0XHRzY29wZS5kZWxldGVQb3N0VXB2b3RlID0gZGVsZXRlUG9zdFVwdm90ZTtcclxuXHRcdFx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0XHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cclxuXHRcdFx0XHRcdHNjb3BlLmxvYWRpbmdVcHZvdGUgPSB0cnVlO1xyXG5cdFx0XHRcdFx0Y2hlY2tQb3N0VXB2b3RlKCk7XHRcdFx0XHRcdFxyXG5cdFx0XHRcdH1cclxuXHJcblxyXG5cdFx0XHRcdGZ1bmN0aW9uIGNoZWNrUG9zdFVwdm90ZSgpIHtcclxuXHRcdFx0XHRcdHVwdm90ZVNlcnZpY2UuZ2V0VXB2b3RlKHNjb3BlLnBvc3RJZCkudGhlbihmdW5jdGlvbihyZXMpIHtcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdHNjb3BlLnBvc3RVcHZvdGVkID0gcmVzLmRhdGE7XHJcblx0XHRcdFx0XHRcdHNjb3BlLmxvYWRpbmdVcHZvdGUgPSBmYWxzZTtcdFxyXG5cdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKFwiY2hlY2sgZXJyb3JcIik7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGZ1bmN0aW9uIHN1Ym1pdFBvc3RVcHZvdGUoKSB7XHJcblx0XHRcdFx0XHRzY29wZS5wb3N0VXB2b3RlZCA9IHRydWU7XHJcblx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdHVwdm90ZVNlcnZpY2UuY3JlYXRlVXB2b3RlKHNjb3BlLnBvc3RJZCkudGhlbihmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdHNjb3BlLnVwdm90ZXNMZW5ndGgrPTE7XHRcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCJzdWJtaXQgZXJyb3JcIik7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGZ1bmN0aW9uIGRlbGV0ZVBvc3RVcHZvdGUoKSB7XHJcblx0XHRcdFx0XHRzY29wZS5wb3N0VXB2b3RlZCA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0dXB2b3RlU2VydmljZS5kZWxldGVVcHZvdGUoc2NvcGUucG9zdElkKS50aGVuKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0c2NvcGUudXB2b3Rlc0xlbmd0aC09MTtcdFxyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0d2luZG93LmFsZXJ0KGVycik7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFxyXG5cclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdFxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wb3N0JykuXHJcblx0c2VydmljZSgncG9zdFNlcnZpY2UnLCBbJyRodHRwJywgJ2hvbWVTZXJ2aWNlJywgJ3VzZXJMb2NhdGlvblNlcnZpY2UnLCAnJHEnLCBQb3N0U2VydmljZV0pO1xyXG5cclxuXHJcblx0ZnVuY3Rpb24gUG9zdFNlcnZpY2UoJGh0dHAsIGhvbWVTZXJ2aWNlLCB1c2VyTG9jYXRpb25TZXJ2aWNlLCAkcSkge1xyXG5cdFx0dGhpcy5nZXRBbGxQb3N0cyA9IGdldEFsbFBvc3RzO1xyXG5cdFx0dGhpcy5nZXROZWFyYnlQb3N0cyA9IGdldE5lYXJieVBvc3RzO1xyXG5cdFx0dGhpcy5nZXRMYXRlc3RQb3N0cyA9IGdldExhdGVzdFBvc3RzO1xyXG5cdFx0dGhpcy5nZXRQb3B1bGFyUG9zdHMgPSBnZXRQb3B1bGFyUG9zdHM7XHJcblx0XHR0aGlzLnN1Ym1pdFBvc3QgPSBzdWJtaXRQb3N0O1xyXG5cdFx0dGhpcy5kZWxldGVQb3N0ID0gZGVsZXRlUG9zdDtcclxuXHRcdHRoaXMuZ2V0UG9zdCA9IGdldFBvc3Q7XHJcblx0XHR0aGlzLmdldERpc3RhbmNlID0gZ2V0RGlzdGFuY2U7XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0QWxsUG9zdHMocGFyYW1zKSB7XHJcblx0XHRcdFxyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncG9zdC9nZXRQb3N0cycsIHsgcGFyYW1zOiBwYXJhbXMgfSk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXRGaWx0ZXJlZFBvc3RzKGRlZmVyLHBhcmFtcyl7XHJcblx0XHRcdCRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgXCJwb3N0L2dldFBvc3RzXCIsIHsgcGFyYW1zOiBwYXJhbXMgfSkudGhlbihmdW5jdGlvbihwb3N0cykge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coXCJ3aXRob3V0IHBvc2l0aW9uXCIpO1xyXG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZShwb3N0cyk7XHJcblx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyMikge1xyXG5cdFx0XHRcdFx0ZGVmZXIucmVqZWN0KGVycjIpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ2V0TmVhcmJ5UG9zdHMocGFyYW1zKSB7XHJcblx0XHRcdHBhcmFtcy5uZWFyYnkgPSB0cnVlO1xyXG5cdFx0XHR2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xyXG5cdFx0XHRcclxuXHRcdFx0aWYocGFyYW1zLnBhZ2U9PTEpe1xyXG5cdFx0XHRcdHVzZXJMb2NhdGlvblNlcnZpY2Uuc2V0VXNlckxvY2F0aW9uKCk7XHJcbiAgICAgIFx0XHRcdH1cclxuICAgICAgXHRcdFx0XHJcblx0XHRcdHVzZXJMb2NhdGlvblNlcnZpY2UuZ2V0VXNlckxvY2F0aW9uKCkudGhlbihmdW5jdGlvbihwb3NpdGlvbikge1xyXG5cdFx0XHRcdHBhcmFtcy5sYXRpdHVkZSA9IHBvc2l0aW9uLmxhdGl0dWRlO1xyXG5cdFx0XHRcdHBhcmFtcy5sb25naXR1ZGUgPSBwb3NpdGlvbi5sb25naXR1ZGU7XHJcblx0XHRcdFx0JGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyBcInBvc3QvZ2V0UG9zdHNcIiwgeyBwYXJhbXM6IHBhcmFtcyB9KS50aGVuKGZ1bmN0aW9uKHBvc3RzKSB7XHJcblx0XHRcdFx0XHRkZWZlci5yZXNvbHZlKHBvc3RzKTtcclxuXHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdGRlZmVyLnJlamVjdChlcnIpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHR3aW5kb3cuY29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRnZXRGaWx0ZXJlZFBvc3RzKGRlZmVyLHBhcmFtcyk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0cmV0dXJuIGRlZmVyLnByb21pc2U7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldExhdGVzdFBvc3RzKHBhcmFtcykge1xyXG5cdFx0XHRwYXJhbXMuc29ydCA9ICctdGltZSc7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdwb3N0L2dldFBvc3RzJywgeyBwYXJhbXM6IHBhcmFtcyB9KTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRQb3B1bGFyUG9zdHMocGFyYW1zKSB7XHJcblx0XHRcdHBhcmFtcy5zb3J0ID0gJy11cHZvdGVzTGVuZ3RoJztcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgJ3Bvc3QvZ2V0UG9zdHMnLCB7IHBhcmFtczogcGFyYW1zIH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIHN1Ym1pdFBvc3QocG9zdCkge1xyXG5cdFx0XHR2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xyXG5cdFx0XHRjb25zb2xlLmxvZyhcImVudGVyZWQgc3VibWl0IHBvc3RcIik7XHJcblx0XHRcdHVzZXJMb2NhdGlvblNlcnZpY2UuZ2V0VXNlckxvY2F0aW9uKCkudGhlbihmdW5jdGlvbihwb3NpdGlvbikge1xyXG5cdFx0XHRcdHBvc3QubGF0aXR1ZGUgPSBwb3NpdGlvbi5sYXRpdHVkZTtcclxuXHRcdFx0XHRwb3N0LmxvbmdpdHVkZSA9IHBvc2l0aW9uLmxvbmdpdHVkZTtcclxuXHJcblx0XHRcdFx0JGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ3Bvc3QvY3JlYXRlJywgeyBwb3N0OiBwb3N0IH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHJcblx0XHRcdFx0XHRkZWZlci5yZXNvbHZlKHJlc3BvbnNlKTtcclxuXHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdGRlZmVyLnJlamVjdChlcnIpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHQkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncG9zdC9jcmVhdGUnLCB7IHBvc3Q6IHBvc3QgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XHJcblx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyMikge1xyXG5cdFx0XHRcdFx0ZGVmZXIucmVqZWN0KGVycjIpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0cmV0dXJuIGRlZmVyLnByb21pc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZGVsZXRlUG9zdChwb3N0SWQpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLmRlbGV0ZShob21lU2VydmljZS5iYXNlVVJMICsgJ3Bvc3QvZGVsZXRlLycgKyBwb3N0SWQpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFBvc3QocG9zdElkKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdwb3N0L2dldC8nICsgcG9zdElkKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXREaXN0YW5jZShwb3NPYmopIHtcclxuXHRcdFx0dmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuXHRcdFx0dmFyIGxhdDEgPSBwb3NPYmoubGF0aXR1ZGU7XHJcblx0XHRcdHZhciBsb24xID0gcG9zT2JqLmxvbmdpdHVkZTtcclxuXHRcdFx0dXNlckxvY2F0aW9uU2VydmljZS5nZXRVc2VyTG9jYXRpb24oKS50aGVuKGZ1bmN0aW9uKHBvc2l0aW9uKSB7XHJcblx0XHRcdFx0dmFyIGxhdDIgPSBwb3NpdGlvbi5sYXRpdHVkZTtcclxuXHRcdFx0XHR2YXIgbG9uMiA9IHBvc2l0aW9uLmxvbmdpdHVkZTtcclxuXHRcdFx0XHR2YXIgUiA9IDYzNzE7IC8vIFJhZGl1cyBvZiB0aGUgZWFydGggaW4ga21cclxuXHRcdFx0XHR2YXIgZExhdCA9IGRlZzJyYWQobGF0MiAtIGxhdDEpOyAvLyBkZWcycmFkIGJlbG93XHJcblx0XHRcdFx0dmFyIGRMb24gPSBkZWcycmFkKGxvbjIgLSBsb24xKTtcclxuXHRcdFx0XHR2YXIgYSA9XHJcblx0XHRcdFx0XHRNYXRoLnNpbihkTGF0IC8gMikgKiBNYXRoLnNpbihkTGF0IC8gMikgK1xyXG5cdFx0XHRcdFx0TWF0aC5jb3MoZGVnMnJhZChsYXQxKSkgKiBNYXRoLmNvcyhkZWcycmFkKGxhdDIpKSAqXHJcblx0XHRcdFx0XHRNYXRoLnNpbihkTG9uIC8gMikgKiBNYXRoLnNpbihkTG9uIC8gMik7XHJcblx0XHRcdFx0dmFyIGMgPSAyICogTWF0aC5hdGFuMihNYXRoLnNxcnQoYSksIE1hdGguc3FydCgxIC0gYSkpO1xyXG5cdFx0XHRcdHZhciBkID0gUiAqIGM7IC8vIERpc3RhbmNlIGluIGttXHJcblx0XHRcdFxyXG5cdFx0XHRcdGRlZmVyLnJlc29sdmUoTWF0aC5jZWlsKGQpKTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBkZWcycmFkKGRlZykge1xyXG5cdFx0XHRyZXR1cm4gZGVnICogKE1hdGguUEkgLyAxODApO1xyXG5cdFx0fVxyXG5cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnVzZXInKS5cclxuXHRjb250cm9sbGVyKCdVc2VyRWRpdFBhZ2VDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ2hvbWVTZXJ2aWNlJywgJ3VzZXJEYXRhJywgJ3VzZXJTZXJ2aWNlJywgJ1VwbG9hZCcsICckaW9uaWNMb2FkaW5nJywgVXNlckVkaXRQYWdlQ29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBVc2VyRWRpdFBhZ2VDb250cm9sbGVyKCRzY29wZSwgJHN0YXRlLCBob21lU2VydmljZSwgdXNlckRhdGEsIHVzZXJTZXJ2aWNlLCBVcGxvYWQsICRpb25pY0xvYWRpbmcpIHtcclxuXHJcblx0XHR2YXIgdW1wYyA9IHRoaXM7XHJcblxyXG5cdFx0dW1wYy5hY3RpdmF0ZSA9IGFjdGl2YXRlO1xyXG5cclxuXHRcdGFjdGl2YXRlKCk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0VXNlcigpIHtcclxuXHRcdFx0dW1wYy51c2VyID0gdXNlckRhdGEuZ2V0VXNlcigpO1xyXG5cdFx0XHQkc2NvcGUuZWRpdEZvcm0udXNlciA9IHVtcGMudXNlcjtcclxuXHRcdFx0aWYgKHVtcGMudXNlci5pbnRlcmVzdHMubGVuZ3RoKSB7XHJcblx0XHRcdFx0JHNjb3BlLmVkaXRGb3JtLnVzZXIuaW50ZXJlc3RzID0gJyEnICsgdW1wYy51c2VyLmludGVyZXN0cy5qb2luKCchJyk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdCRzY29wZS5lZGl0Rm9ybSA9IHt9O1xyXG5cdFx0XHRnZXRVc2VyKCk7XHJcblx0XHRcdFxyXG5cdFx0fVxyXG5cclxuXHRcdCRzY29wZS5lZGl0Rm9ybS5zdWJtaXRVc2VyID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdCRpb25pY0xvYWRpbmcuc2hvdygpO1xyXG5cdFx0XHRcclxuXHRcdFx0dXNlclNlcnZpY2UudXBkYXRlVXNlcigkc2NvcGUuZWRpdEZvcm0udXNlcikudGhlbihmdW5jdGlvbihyZXMpIHtcclxuXHRcdFx0XHR3aW5kb3cuYWxlcnQoXCJ1cGRhdGVkIHVzZXJcIik7XHJcblx0XHRcdFx0JHN0YXRlLmdvKCdob21lLnVzZXIudXNlck1lUGFnZScpO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdFxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0dXNlckRhdGEuc2V0VXNlcigpO1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblx0XHQkc2NvcGUuZWRpdEZvcm0udXBsb2FkVXNlclBpY3R1cmUgPSBmdW5jdGlvbihmaWxlLCBlcnJGaWxlcykge1xyXG5cdFx0XHQkc2NvcGUubG9hZGluZ0ltYWdlID0gdHJ1ZTtcclxuXHRcdFx0dW1wYy5maWxlID0gZmlsZTtcclxuXHRcdFx0dW1wYy5lcnJGaWxlID0gZXJyRmlsZXMgJiYgZXJyRmlsZXNbMF07XHJcblx0XHRcdGlmIChmaWxlKSB7XHJcblx0XHRcdFx0dW1wYy5maWxlLnVwbG9hZCA9IFVwbG9hZC51cGxvYWQoe1xyXG5cdFx0XHRcdFx0dXJsOiBob21lU2VydmljZS5iYXNlVVJMICsgJ3VwbG9hZC9zaW5nbGVVcGxvYWQnLFxyXG5cdFx0XHRcdFx0ZGF0YTogeyBmaWxlOiB1bXBjLmZpbGUgfVxyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHR1bXBjLmZpbGUudXBsb2FkLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdHVtcGMuZmlsZS5yZXN1bHQgPSByZXNwb25zZS5kYXRhO1xyXG5cdFx0XHRcdFx0JHNjb3BlLmVkaXRGb3JtLnVzZXIucGljdHVyZSA9IHJlc3BvbnNlLmRhdGE7XHJcblx0XHRcdFx0XHQkc2NvcGUubG9hZGluZ0ltYWdlID0gZmFsc2U7XHJcblxyXG5cclxuXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHR9O1xyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwudXNlcicpLlxyXG5cdGNvbnRyb2xsZXIoJ1VzZXJNZVBhZ2VDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJyRhdXRoJywndXNlckRhdGEnLCAncGVvcGxlU2VydmljZScsJ3Bvc3RTZXJ2aWNlJywnJHdpbmRvdycsICckaW9uaWNMb2FkaW5nJyxVc2VyTWVQYWdlQ29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBVc2VyTWVQYWdlQ29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgJGF1dGgsdXNlckRhdGEsIHBlb3BsZVNlcnZpY2UscG9zdFNlcnZpY2UsJHdpbmRvdywkaW9uaWNMb2FkaW5nKSB7XHJcblxyXG5cdFx0dmFyIHVtcGMgPSB0aGlzO1xyXG5cdFx0dW1wYy5sb2dvdXQgPSBsb2dvdXQ7XHJcblx0XHR1bXBjLmFjdGl2YXRlID0gYWN0aXZhdGU7XHJcblx0XHRcclxuXHRcdHVtcGMuYWN0aXZlVGFiID0gMTtcclxuXHRcdHVtcGMuYWN0aXZhdGVUYWIgPSBhY3RpdmF0ZVRhYjtcclxuXHRcdHVtcGMuaXNUYWJBY3RpdmUgPSBpc1RhYkFjdGl2ZTtcclxuXHJcblx0XHR1bXBjLnN1YkFjdGl2ZVRhYiA9IDE7XHJcblx0XHR1bXBjLnN1YkFjdGl2YXRlVGFiID0gc3ViQWN0aXZhdGVUYWI7XHJcblx0XHR1bXBjLmlzU3ViVGFiQWN0aXZlID0gaXNTdWJUYWJBY3RpdmU7XHJcblxyXG5cclxuXHJcblx0XHR1bXBjLm9wZW5GYWNlYm9vayA9IG9wZW5GYWNlYm9vaztcclxuXHRcdGFjdGl2YXRlKCk7XHJcblx0XHRmdW5jdGlvbiBvcGVuRmFjZWJvb2soaWQpe1xyXG5cdFx0XHQkd2luZG93Lm9wZW4oJ2h0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS8nK2lkLCAnX3N5c3RlbScpO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ2V0VXNlcigpIHtcclxuXHRcdFx0dXNlckRhdGEuc2V0VXNlcigpLnRoZW4oZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dW1wYy51c2VyID0gdXNlckRhdGEuZ2V0VXNlcigpO1xyXG5cclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHR3aW5kb3cuY29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpe1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXRVc2VyUG9zdHMoKXtcclxuXHRcdFx0dW1wYy5wYXJhbXMgPSB7XHJcblx0XHRcdFx0cGFnZTogMSxcclxuXHRcdFx0XHRsaW1pdDogMTAwLFxyXG5cdFx0XHRcdHVzZXI6IHVzZXJEYXRhLmdldFVzZXIoKS5faWRcclxuXHRcdFx0fTtcclxuXHRcdFx0cG9zdFNlcnZpY2UuZ2V0TGF0ZXN0UG9zdHModW1wYy5wYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHR1bXBjLnBvc3RzTGlzdCA9IHJlcy5kYXRhLmRvY3M7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGVUYWIodGFiSW5kZXgpe1xyXG5cdFx0XHR1bXBjLmFjdGl2ZVRhYiA9IHRhYkluZGV4O1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gaXNUYWJBY3RpdmUodGFiSW5kZXgpe1xyXG5cdFx0XHRyZXR1cm4gdGFiSW5kZXggPT09IHVtcGMuYWN0aXZlVGFiO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gc3ViQWN0aXZhdGVUYWIoc3ViVGFiSW5kZXgpe1xyXG5cdFx0XHR1bXBjLnN1YkFjdGl2ZVRhYiA9IHN1YlRhYkluZGV4O1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gaXNTdWJUYWJBY3RpdmUoc3ViVGFiSW5kZXgpe1xyXG5cdFx0XHRyZXR1cm4gc3ViVGFiSW5kZXggPT09IHVtcGMuc3ViQWN0aXZlVGFiO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGxvZ291dCgpIHtcclxuXHRcdFx0JGF1dGgubG9nb3V0KCk7XHJcblx0XHRcdCRzdGF0ZS5nbygnYXV0aGVudGljYXRlJyk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGdldFVzZXIoKTtcclxuXHRcdFx0Z2V0UmVxdWVzdGVkTGlzdCgpO1xyXG5cdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xyXG5cdFx0XHRnZXRVc2VyUG9zdHMoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSZXF1ZXN0ZWRMaXN0KCkge1xyXG5cdFx0XHRwZW9wbGVTZXJ2aWNlLmdldFJlcXVlc3RlZFVzZXJzKHsgcGFnZTogMSwgbGltaXQ6IDI1IH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHR1bXBjLnBlb3BsZUxpc3QgPSByZXNwb25zZS5kYXRhLmRvY3M7XHJcblx0XHRcdFx0dW1wYy50b3RhbCA9IHJlc3BvbnNlLmRhdGEudG90YWw7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ2V0UmVjZWl2ZWRMaXN0KCkge1xyXG5cdFx0XHRwZW9wbGVTZXJ2aWNlLmdldFJlY2VpdmVkVXNlcnMoeyBwYWdlOiAxLCBsaW1pdDogMjUgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdHVtcGMucGVvcGxlTGlzdCA9IHJlc3BvbnNlLmRhdGEuZG9jcztcclxuXHRcdFx0XHR1bXBjLnRvdGFsID0gcmVzcG9uc2UuZGF0YS50b3RhbDtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXRSZXZlYWxlZExpc3QoKSB7XHJcblx0XHRcdHBlb3BsZVNlcnZpY2UuZ2V0UmV2ZWFsZWRVc2Vycyh7IHBhZ2U6IDEsIGxpbWl0OiAyNSB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0dW1wYy5wZW9wbGVMaXN0ID0gcmVzcG9uc2UuZGF0YS5kb2NzO1xyXG5cdFx0XHRcdHVtcGMudG90YWwgPSByZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdFxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwudXNlcicpLlxyXG5cdGNvbnRyb2xsZXIoJ1VzZXJQYWdlQ29udHJvbGxlcicsIFsnJHN0YXRlJywgJyRhdXRoJywgJ3VzZXJTZXJ2aWNlJywgJ3JldmVhbFNlcnZpY2UnLCckc3RhdGVQYXJhbXMnLCAnZnJpZW5kcycsJ3Bvc3RTZXJ2aWNlJywnJHdpbmRvdycsJyRpb25pY0xvYWRpbmcnLFVzZXJQYWdlQ29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBVc2VyUGFnZUNvbnRyb2xsZXIoJHN0YXRlLCAkYXV0aCwgdXNlclNlcnZpY2UsIHJldmVhbFNlcnZpY2UsJHN0YXRlUGFyYW1zLGZyaWVuZHMscG9zdFNlcnZpY2UsJHdpbmRvdywkaW9uaWNMb2FkaW5nKSB7XHJcblxyXG5cdFx0dmFyIHVwYyA9IHRoaXM7XHJcblx0XHR1cGMuY2hlY2tSZXZlYWwgPSBjaGVja1JldmVhbDtcclxuXHRcdHVwYy5nb0JhY2sgPSBnb0JhY2s7XHJcblx0XHR1cGMuYWN0aXZhdGVUYWIgPSBhY3RpdmF0ZVRhYjtcclxuXHRcdHVwYy5pc1RhYkFjdGl2ZSA9IGlzVGFiQWN0aXZlO1xyXG5cdFx0dXBjLm9wZW5GYWNlYm9vayA9IG9wZW5GYWNlYm9vaztcclxuXHRcdHVwYy5vcGVuR29vZ2xlID0gb3Blbkdvb2dsZTtcclxuXHRcdGFjdGl2YXRlKCk7XHJcblx0XHRcclxuXHRcdGZ1bmN0aW9uIG9wZW5GYWNlYm9vayhpZCl7XHJcblx0XHRcdCR3aW5kb3cub3BlbignaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tLycraWQsICdfc3lzdGVtJyk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBvcGVuR29vZ2xlKGlkKXtcclxuXHRcdFx0JHdpbmRvdy5vcGVuKCdodHRwczovL3BsdXMuZ29vZ2xlLmNvbS8nK2lkLCAnX3N5c3RlbScpO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGdldFVzZXIoKTtcclxuXHRcdFx0dXBjLnJldmVhbENob2ljZSA9IGZyaWVuZHM7XHJcblx0XHRcdHVwYy5hY3RpdmVUYWIgPSAxO1xyXG5cdFx0XHRnZXRVc2VyUG9zdHMoKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldFVzZXJQb3N0cygpe1xyXG5cdFx0XHR1cGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdHBhZ2U6IDEsXHJcblx0XHRcdFx0bGltaXQ6IDEwMCxcclxuXHRcdFx0XHR1c2VyOiAkc3RhdGVQYXJhbXMudXNlclxyXG5cdFx0XHR9O1xyXG5cdFx0XHRwb3N0U2VydmljZS5nZXRMYXRlc3RQb3N0cyh1cGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0dXBjLnBvc3RzTGlzdCA9IHJlcy5kYXRhLmRvY3M7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGVUYWIodGFiSW5kZXgpe1xyXG5cdFx0XHR1cGMuYWN0aXZlVGFiID0gdGFiSW5kZXg7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBpc1RhYkFjdGl2ZSh0YWJJbmRleCl7XHJcblx0XHRcdHJldHVybiB0YWJJbmRleCA9PT0gdXBjLmFjdGl2ZVRhYjtcclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gY2hlY2tSZXZlYWwoKXtcclxuXHRcdFx0cmV2ZWFsU2VydmljZS5jaGVjaygkc3RhdGVQYXJhbXMudXNlcikudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdHVwYy5yZXZlYWxDaG9pY2UgPSByZXMuZGF0YS5zdGF0dXM7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ29CYWNrKCl7XHJcblx0XHRcdCR3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXRVc2VyKCkge1xyXG5cclxuXHRcdFx0dXNlclNlcnZpY2UuZ2V0VXNlcigkc3RhdGVQYXJhbXMudXNlcikudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdHVwYy51c2VyID0gcmVzcG9uc2UuZGF0YTtcclxuXHRcdFx0XHRcclxuXHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0XHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC51c2VyJykuXHJcblx0Y29udHJvbGxlcignVXNlclBhZ2VQb3N0c0NvbnRyb2xsZXInLCBbJyRzdGF0ZScsICAnJHN0YXRlUGFyYW1zJywgJ2ZyaWVuZHMnLFVzZXJQYWdlUG9zdHNDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFVzZXJQYWdlUG9zdHNDb250cm9sbGVyKCRzdGF0ZSwgICRzdGF0ZVBhcmFtcyxmcmllbmRzKSB7XHJcblx0XHRhbGVydChmcmllbmRzKTtcclxuXHJcblxyXG5cdFx0XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKXtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnVzZXInKS5cclxuXHRcdGNvbnRyb2xsZXIoJ1VzZXJQYXJlbnRDb250cm9sbGVyJyxbVXNlclBhcmVudENvbnRyb2xsZXJdKTtcclxuXHJcblx0XHRmdW5jdGlvbiBVc2VyUGFyZW50Q29udHJvbGxlcigpe1xyXG5cdFx0XHRcclxuXHRcdH1cclxufSkod2luZG93LmFuZ3VsYXIpOyIsIihmdW5jdGlvbihhbmd1bGFyKXtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnVzZXInKVxyXG5cdFx0LmRpcmVjdGl2ZSgnYmxvY2tlZExpc3QnLFsnYmxvY2tTZXJ2aWNlJyxibG9ja2VkTGlzdF0pO1xyXG5cclxuXHRmdW5jdGlvbiBibG9ja2VkTGlzdChibG9ja1NlcnZpY2Upe1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvdXNlci92aWV3cy9ibG9ja2VkTGlzdC5odG1sJyxcclxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUpe1xyXG5cdFx0XHRcdHNjb3BlLmFmdGVyQ2FsbGJhY2sgPSBmdW5jdGlvbihpbmRleCl7XHJcblx0XHRcdFx0XHRzY29wZS5wZW9wbGVMaXN0LnNwbGljZShpbmRleCwxKTtcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdGJsb2NrU2VydmljZS5nZXRCbG9ja3MoKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuXHRcdFx0XHRcdHdpbmRvdy5jb25zb2xlLmxvZyhyZXNwb25zZSk7XHJcblx0XHRcdFx0XHRzY29wZS5wZW9wbGVMaXN0ID0gcmVzcG9uc2UuZGF0YTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwudXNlcicpLlxyXG5cdHNlcnZpY2UoJ2Jsb2NrU2VydmljZScsIFsnJGh0dHAnLCAnaG9tZVNlcnZpY2UnLEJsb2NrU2VydmljZV0pO1xyXG5cclxuXHJcblx0ZnVuY3Rpb24gQmxvY2tTZXJ2aWNlKCRodHRwLCBob21lU2VydmljZSkge1xyXG5cdFx0dGhpcy5jcmVhdGUgPSBjcmVhdGU7XHJcblx0XHR0aGlzLnJlbW92ZSA9IHJlbW92ZTtcclxuXHRcdHRoaXMuZ2V0QmxvY2tzID0gZ2V0QmxvY2tzO1xyXG5cdFx0dGhpcy5jaGVjayA9IGNoZWNrO1xyXG5cdFx0XHJcblx0XHRmdW5jdGlvbiBjcmVhdGUoaWQpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdibG9jay9jcmVhdGUnLCB7IHNlY29uZFVzZXI6IGlkIH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gcmVtb3ZlKGlkKSB7XHRcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdibG9jay9kZWxldGUnLCB7IHNlY29uZFVzZXI6IGlkIH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gY2hlY2soaWQpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgJ2Jsb2NrL2dldC8nK2lkKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldEJsb2NrcygpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgJ2Jsb2NrL2dldEJsb2Nrcy8nKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwudXNlcicpLlxyXG5cdHNlcnZpY2UoJ3JldmVhbFNlcnZpY2UnLCBbJyRodHRwJywgJ2hvbWVTZXJ2aWNlJyxSZXZlYWxTZXJ2aWNlXSk7XHJcblxyXG5cclxuXHRmdW5jdGlvbiBSZXZlYWxTZXJ2aWNlKCRodHRwLCBob21lU2VydmljZSkge1xyXG5cdFx0dGhpcy5pbml0aWF0ZSA9IGluaXRpYXRlO1xyXG5cdFx0dGhpcy5hY2NlcHQgPSBhY2NlcHQ7XHJcblx0XHR0aGlzLmlnbm9yZSA9IGlnbm9yZTtcclxuXHRcdHRoaXMuY2FuY2VsID0gY2FuY2VsO1xyXG5cdFx0dGhpcy5yZWNlaXZlZCA9IHJlY2VpdmVkO1xyXG5cdFx0dGhpcy5yZXF1ZXN0ZWQgPSByZXF1ZXN0ZWQ7XHJcblx0XHR0aGlzLnJldmVhbGVkID0gcmV2ZWFsZWQ7XHJcblx0XHR0aGlzLmZpbmlzaCA9IGZpbmlzaDtcclxuXHRcdHRoaXMuY2hlY2sgPSBjaGVjaztcclxuXHJcblx0XHRmdW5jdGlvbiBnZXRQYXJhbXMoaWQpe1xyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdCdzZWNvbmRVc2VyJzogaWRcclxuXHRcdFx0fTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGluaXRpYXRlKGlkKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncmV2ZWFsL2luaXRpYXRlJywgeyBzZWNvbmRVc2VyOiBpZCB9KTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY2NlcHQoaWQpIHtcclxuXHRcdFx0XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncmV2ZWFsL2FjY2VwdCcsIHsgc2Vjb25kVXNlcjogaWQgfSk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gaWdub3JlKGlkKSB7XHJcblx0XHRcdFxyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ3JldmVhbC9pZ25vcmUnLCB7IHNlY29uZFVzZXI6IGlkIH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGNhbmNlbChpZCkge1xyXG5cdFx0XHRcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdyZXZlYWwvY2FuY2VsJywgeyBzZWNvbmRVc2VyOiBpZCB9KTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiByZWNlaXZlZChpZCkge1xyXG5cdFx0XHR2YXIgcGFyYW1zID0gZ2V0UGFyYW1zKGlkKTtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgJ3JldmVhbC9yZWNlaXZlZCcsIHtwYXJhbXM6cGFyYW1zfSk7XHJcblx0XHRcdFx0XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gcmVxdWVzdGVkKGlkKSB7XHJcblx0XHRcdHZhciBwYXJhbXMgPSBnZXRQYXJhbXMoaWQpO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncmV2ZWFsL3JlcXVlc3RlZCcsIHtwYXJhbXM6cGFyYW1zfSk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gcmV2ZWFsZWQoaWQpIHtcclxuXHRcdFx0dmFyIHBhcmFtcyA9IGdldFBhcmFtcyhpZCk7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdyZXZlYWwvcmV2ZWFsZWQnLCB7cGFyYW1zOnBhcmFtc30pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZmluaXNoKGlkKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncmV2ZWFsL2ZpbmlzaCcsIHtzZWNvbmRVc2VyOiBpZH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gY2hlY2soaWQpe1xyXG5cdFx0XHR2YXIgcGFyYW1zID0gZ2V0UGFyYW1zKGlkKTtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgJ3JldmVhbC9jaGVjaycsIHtwYXJhbXM6cGFyYW1zfSk7XHRcclxuXHRcdH1cclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7IiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC51c2VyJylcclxuXHRcdC5zZXJ2aWNlKCd1c2VyTG9jYXRpb25TZXJ2aWNlJywgWyckY29yZG92YUdlb2xvY2F0aW9uJywgJ3VzZXJTZXJ2aWNlJywgJyRxJywgJyRodHRwJywgJ3RvYXN0cicsIFVzZXJMb2NhdGlvblNlcnZpY2VdKTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIFVzZXJMb2NhdGlvblNlcnZpY2UoJGNvcmRvdmFHZW9sb2NhdGlvbiwgdXNlclNlcnZpY2UsICRxLCAkaHR0cCwgdG9hc3RyKSB7XHJcblx0XHR0aGlzLmdldFVzZXJMb2NhdGlvbiA9IGdldFVzZXJMb2NhdGlvbjtcclxuXHRcdHRoaXMuc2V0VXNlckxvY2F0aW9uID0gc2V0VXNlckxvY2F0aW9uO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFVzZXJMb2NhdGlvbigpIHtcclxuXHRcdFx0XHJcblx0XHRcdHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XHJcblx0XHRcdHZhciBvcHRpb25zID0geyB0aW1lb3V0OiAzMDAwLCBlbmFibGVIaWdoQWNjdXJhY3k6IGZhbHNlIH07XHJcblxyXG5cdFx0XHQkY29yZG92YUdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihvcHRpb25zKS50aGVuKGZ1bmN0aW9uKHBvc2l0aW9uKSB7XHJcblx0XHRcdFx0dmFyIHBvc2l0aW9ucyA9IHsgbGF0aXR1ZGU6IHBvc2l0aW9uLmNvb3Jkcy5sYXRpdHVkZSwgbG9uZ2l0dWRlOiBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlIH07XHJcblx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShwb3NpdGlvbnMpO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkaHR0cC5wb3N0KCdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9nZW9sb2NhdGlvbi92MS9nZW9sb2NhdGU/a2V5PUFJemFTeUE1YnF2Q3Axd1lYN0ZHS2lEeWQzdzBEenZKWm9Qd1FyUScpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdHZhciBjb29yZHMgPSB7XHJcblx0XHRcdFx0XHRcdGxhdGl0dWRlOiByZXNwb25zZS5kYXRhLmxvY2F0aW9uLmxhdCxcclxuXHRcdFx0XHRcdFx0bG9uZ2l0dWRlOiByZXNwb25zZS5kYXRhLmxvY2F0aW9uLmxuZ1xyXG5cdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmUoY29vcmRzKTtcclxuXHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdHdpbmRvdy5jb25zb2xlLmxvZyhcImVycm9yIGZyb20gZ29vZ2xlXCIpO1xyXG5cdFx0XHRcdFx0d2luZG93LmNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3QoJ05vdCBhYmxlIHRvIGFjY2VzIHlvdXIgbG9jYXRpb24uTWFrZSBzdXJlIGxvY2F0aW9uIGlzIGVuYWJsZWQuJyk7XHJcblx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHR9KTtcclxuXHRcdFx0cmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gc2V0VXNlckxvY2F0aW9uKCkge1xyXG5cdFx0XHR2YXIgb3B0aW9ucyA9IHsgdGltZW91dDogMzAwMCwgZW5hYmxlSGlnaEFjY3VyYWN5OiBmYWxzZSB9O1xyXG5cdFx0XHQkY29yZG92YUdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihvcHRpb25zKS50aGVuKGZ1bmN0aW9uKHBvc2l0aW9uKSB7XHJcblx0XHRcdFx0dmFyIHBvc2l0aW9ucyA9IHsgbGF0aXR1ZGU6IHBvc2l0aW9uLmNvb3Jkcy5sYXRpdHVkZSwgbG9uZ2l0dWRlOiBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlIH07XHJcblx0XHRcdFx0dXNlclNlcnZpY2UudXBkYXRlVXNlcihwb3NpdGlvbnMpO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHQkaHR0cC5wb3N0KCdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9nZW9sb2NhdGlvbi92MS9nZW9sb2NhdGU/a2V5PUFJemFTeUE1YnF2Q3Axd1lYN0ZHS2lEeWQzdzBEenZKWm9Qd1FyUScpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdHZhciBjb29yZHMgPSB7XHJcblx0XHRcdFx0XHRcdGxhdGl0dWRlOiByZXNwb25zZS5kYXRhLmxvY2F0aW9uLmxhdCxcclxuXHRcdFx0XHRcdFx0bG9uZ2l0dWRlOiByZXNwb25zZS5kYXRhLmxvY2F0aW9uLmxuZ1xyXG5cdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdHVzZXJTZXJ2aWNlLnVwZGF0ZVVzZXIoY29vcmRzKTtcclxuXHRcdFx0XHRcdFxyXG5cdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0aWYgKGVyci5jb2RlID09IDMpIHtcclxuXHRcdFx0XHRcdFx0XHR0b2FzdHIud2FybmluZygnTm90IGFibGUgdG8gYWNjZXMgeW91ciBsb2NhdGlvbi5NYWtlIHN1cmUgbG9jYXRpb24gaXMgZW5hYmxlZC4nLCAnV2FybmluZycsIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRtYXhPcGVuZWQ6IDEsXHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKGVyci5jb2RlID09IDIgfHwgZXJyLmNvZGUgPT0gMSkge1xyXG5cdFx0XHRcdFx0XHRcdHRvYXN0ci53YXJuaW5nKCdOb3QgYWJsZSB0byBhY2NlcyB5b3VyIGxvY2F0aW9uLk1ha2Ugc3VyZSBsb2NhdGlvbiBpcyBlbmFibGVkLicsICdXYXJuaW5nJywge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdG1heE9wZW5lZDogMSxcclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHJcblxyXG5cclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIC8qXHJcbiAgICpTZXJ2aWNlIGZvciBnZXR0aW5nIGEgc2luZ2xlIHN0b3JlIHdpdGggaXRzIGlkXHJcbiAgICovXHJcbiAgYW5ndWxhci5tb2R1bGUoJ3BldGFsLnVzZXInKVxyXG4gICAgLnNlcnZpY2UoJ3VzZXJTZXJ2aWNlJywgW1wiJGh0dHBcIiwgXCJob21lU2VydmljZVwiLCBVc2VyU2VydmljZV0pO1xyXG5cclxuICAvKlxyXG4gICAqIFRoaXMgc2VydmljIGhhcyBhIGZ1bmN0aW9uIG5hbWVzIGdldFN0b3JlIHdoaWNoIHRha2VzIGlkIGFzIHBhcmFtZXRlciBhbmQgcmV0dXJucyBhIHByb21pc2VcclxuICAgKi9cclxuICBmdW5jdGlvbiBVc2VyU2VydmljZSgkaHR0cCwgaG9tZVNlcnZpY2UpIHtcclxuICAgIHRoaXMudXBkYXRlVXNlciA9IHVwZGF0ZVVzZXI7XHJcbiAgICBcclxuICAgIHRoaXMuZ2V0VXNlciA9IGdldFVzZXI7XHJcbiAgICBcclxuXHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0VXNlcihpZCkge1xyXG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyBcInVzZXIvZ2V0L1wiICsgaWQpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVVc2VyKHVzZXIpIHtcclxuICAgICAgcmV0dXJuICRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICd1c2VyL3VwZGF0ZS8nLCB7IHVzZXI6IHVzZXIgfSk7XHJcbiAgICB9XHJcbiAgICBcclxuXHJcblxyXG4gIH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iXX0=
