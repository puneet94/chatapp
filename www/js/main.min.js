!function(e){"use strict";function t(t,o,n,a){n.tabs.position("bottom"),n.scrolling.jsScrolling(!1),n.views.transition("platform"),t.otherwise("/home/post/nearby"),e.extend(a,{autoDismiss:!0,maxOpened:1})}var o=e.module("petal",["ionic","ngAnimate","satellizer","ngFileUpload","btford.socket-io","ngCordova","toastr","petal.home","petal.post","petal.chat","petal.user","petal.people","petal.message"]);o.config(["$urlRouterProvider","$stateProvider","$ionicConfigProvider","toastrConfig",t]),o.run(["$rootScope","$state","$ionicPlatform","$ionicLoading","RequestsService","$cordovaPushV5","$ionicHistory",function(e,t,o,n,a,s,i){function r(){o.registerBackButtonAction(function(t){return e.backButtonPressedOnceToExit?ionic.Platform.exitApp():i.backView()?i.goBack():(e.backButtonPressedOnceToExit=!0,window.plugins.toast.showShortCenter("Press back button again to exit",function(e){},function(e){}),window.setTimeout(function(){e.backButtonPressedOnceToExit=!1},2e3)),t.preventDefault(),!1},101)}function c(){a.register(),e.$on("$cordovaPushV5:notificationReceived",function(e,t){console.log(t),console.log(e)}),e.$on("$cordovaPushV5:errorOcurred",function(e,t){})}o.ready(function(){window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0),c(),r()),window.StatusBar&&StatusBar.styleDefault(),window.onerror=function(e,t,o){return!1},e.$on("$stateChangeError",function(){t.go("home.post.nearby"),n.hide()})})}])}(window.angular),function(e){"use strict";function t(e){e.state("home.chat",{url:"/chat",abstract:!0,views:{"chat-tab":{templateUrl:"app/chat/views/chatParent.html",controller:"ChatParentController",controllerAs:"ppc"}}}).state("home.chat.all",{url:"/all",views:{"chat-tab":{templateUrl:"app/chat/views/allChat.html",controller:"AllChatController",controllerAs:"acc"}}}).state("home.chat.revealed",{url:"/revealed",views:{"chat-tab":{templateUrl:"app/chat/views/revealedChat.html",controller:"RevealedChatController",controllerAs:"rpc"}}}).state("home.chat.messageroom",{url:"/messageRoom",views:{"chat-tab":{templateUrl:"app/chat/views/messageRoomList.html",controller:"MessageRoomListController",controllerAs:"mrlc"}}}).state("chatBox",{url:"/chatBox/:user",templateUrl:"app/chat/views/chatBox.html",controller:"ChatBoxController",controllerAs:"cbc",resolve:{blocked:["$stateParams","blockService","$q",o]}})}function o(e,t,o){var n=o.defer();return t.check(e.user).then(function(e){n.resolve(e.data.blocked)}).catch(function(){n.resolve()}),n.promise}e.module("petal.chat",["ngFileUpload"]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e,t){var n="https://banana-surprise-31332.herokuapp.com/authenticate";t.facebook({clientId:"1134208830041632",url:n+"/auth/facebook",redirectUri:"https://banana-surprise-31332.herokuapp.com/"}),t.google({clientId:"742676837265-33jntkd60p87gkrh48nqe6cdd8ntsfl5.apps.googleusercontent.com",url:n+"/auth/google",redirectUri:"http://localhost:8100"}),e.state("authenticate",{url:"/authenticate",controller:"AuthenticationController",controllerAs:"ac",templateUrl:"app/home/views/authenticationPage.html"}).state("home",{url:"/home",abstract:!0,templateUrl:"app/home/views/tabs.html",controller:"HomeController",controllerAs:"hc",resolve:{redirectIfUserNotAuthenticated:["$q","$auth","$state","$timeout",o]}})}function o(e,t,o,n){var a=e.defer();return t.isAuthenticated()?a.resolve():n(function(){o.go("authenticate")}),a.promise}e.module("petal.home",[]).config(["$stateProvider","$authProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("messageRoomInterest",{url:"/messageRoom/interest/:interest",templateUrl:"app/message/views/messageRoom.html",controller:"MessageRoomController",controllerAs:"mrc",resolve:{messageRoom:["$stateParams","$q",o]}}).state("messageRoomPost",{url:"/messageRoom/post/:postId",templateUrl:"app/message/views/messageRoom.html",controller:"MessageRoomController",controllerAs:"mrc",resolve:{messageRoom:["$stateParams","$q","messageRoomService",o]}})}function o(e,t,o){var n=t.defer(),a={};return e.postId?a.postId=e.postId:a.interest=e.interest,o.getMessageRoom(a).then(function(e){n.resolve(e.data.foundMessageRoom)}).catch(function(e){console.log("Resolve mesage Room"),console.log(e)}),n.promise}e.module("petal.message",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("home.people",{url:"/people",abstract:!0,views:{"people-tab":{templateUrl:"app/people/views/peopleParent.html",controller:"PeopleParentController",controllerAs:"ppc"}}}).state("home.people.all",{url:"/all",views:{"people-tab":{templateUrl:"app/people/views/allPeople.html",controller:"AllPeopleController",controllerAs:"apc"}}}).state("home.people.revealed",{url:"/revealed",views:{"people-tab":{templateUrl:"app/people/views/revealedPeople.html",controller:"RevealedPeopleController",controllerAs:"rpc"}}}).state("home.people.received",{url:"/received",views:{"people-tab":{templateUrl:"app/people/views/receivedPeople.html",controller:"ReceivedPeopleController",controllerAs:"rpc"}}}).state("home.people.nearby",{url:"/nearby",views:{"people-tab":{templateUrl:"app/people/views/nearbyPeople.html",controller:"NearbyPeopleController",controllerAs:"npc"}}})}e.module("petal.people",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("home.post",{url:"/post",abstract:!0,views:{"post-tab":{templateUrl:"app/post/views/postParent.html",controller:"PostParentController",controllerAs:"ppc"}}}).state("home.post.all",{url:"/all",views:{"post-tab":{templateUrl:"app/post/views/allPost.html",controller:"AllPostController",controllerAs:"apc"}}}).state("home.post.latest",{url:"/latest",views:{"post-tab":{templateUrl:"app/post/views/latestPost.html",controller:"LatestPostController",controllerAs:"lpc"}}}).state("home.post.popular",{url:"/popular",views:{"post-tab":{templateUrl:"app/post/views/popularPost.html",controller:"PopularPostController",controllerAs:"ppc"}}}).state("home.post.nearby",{url:"/nearby",views:{"post-tab":{templateUrl:"app/post/views/nearbyPost.html",controller:"NearbyPostController",controllerAs:"npc"}}}).state("postSubmit",{url:"/submit",templateUrl:"app/post/views/createPost.html",controller:"CreatePostController",controllerAs:"cpc"}).state("singlePost",{url:"/post/:id",templateUrl:"app/post/views/singlePost.html",controller:"SinglePostController",controllerAs:"spc"})}e.module("petal.post",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e,t,o){var n=o.defer();return t.check(e.user).then(function(e){e.data.blocked===!0?(window.alert("Blocked profile"),window.history.back()):n.resolve()}).catch(function(){n.resolve()}),n.promise}function o(e,t,o){var n=o.defer();return t.check(e.user).then(function(e){n.resolve(e.data.status)}).catch(function(){}),n.promise}e.module("petal.user",[]).config(["$stateProvider",function(e){e.state("home.user",{url:"/user",abstract:!0,views:{"user-tab":{templateUrl:"app/user/views/userParentPage.html",controller:"UserParentController",controllerAs:"upc"}}}).state("home.user.userMePage",{url:"/userMePage",views:{"user-tab":{templateUrl:"app/user/views/userMePage.html",controller:"UserMePageController",controllerAs:"umpc"}}}).state("home.userPage",{url:"/userPage/:user",resolve:{blocked:["$stateParams","blockService","$q",t],friends:["$stateParams","revealService","$q",o]},views:{"extra-tab":{templateUrl:"app/user/views/userProfilePage.html",controller:"UserPageController",controllerAs:"upc"}}}).state("home.userEditPage",{url:"/userEditPage",views:{"extra-tab":{templateUrl:"app/user/views/userEditPage.html",controller:"UserEditPageController",controllerAs:"uepc"}}})}])}(window.angular),function(e){"use strict";function t(t,o,n,a,s){function i(e){var t={};t.creator2=e.user,t.newChat=!0,t.lastMessage={user:e.user._id,_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.chatRoomsList.length;o++)if(t.creator2._id==p.chatRoomsList[o].creator2._id&&t.lastMessage._id!==p.chatRoomsList[o].lastMessage._id)return p.chatRoomsList.splice(o,1),void p.chatRoomsList.unshift(t)}function r(){u()}function c(){p.params.page+=1,l()}function l(){n.getAllChatRooms(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.chatRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.chatRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.chatRoomsList=[],l()}var p=this;p.getAllChatRooms=l,p.loadMoreChats=c,p.pullRefreshChats=r,u(),s.on("newMessageReceived",i),p.chatPage=function(e){o.go("chatBox",{user:e})}}e.module("petal.chat").controller("AllChatController",["$scope","$state","chatService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(t,o,n,a,s,i,r,c,l,u,p,d,f){function m(){b.params.page+=1,v()}function h(){l.getUser(b.receiverUserID).then(function(e){b.receiverUser=e.data}).catch(function(e){console.log(e)})}function g(){o(function(){c.scrollBottom(!0)})}function v(){r.getChatMessages(b.chatRoomId,b.params).then(function(t){e.forEach(t.data.docs,function(e){b.chatList.unshift(e)})}).catch(function(e){console.log(e)}).finally(function(){g(),t.$broadcast("scroll.refreshComplete"),p.hide()})}function w(){n.emit("addToChatRoom",{roomId:b.chatRoomId}),n.on("messageReceived",function(e){b.chatList.push(e),g(),b.messageLoading=!1})}var b=this;b.isBlocked=f,b.isBlocked===!0&&window.alert("blocked profile"),b.currentUser=s.getUser()._id,b.receiverUserID=a.user,b.chatList=[],b.chatRoomId="",b.loadMoreChats=m,b.scrollBottom=g,b.messageLoading=!1,b.messageTryCount=0,b.params={page:1,limit:5},function(){p.show(),r.getChatRoom(b.receiverUserID).then(function(e){b.chatRoom=e.data,b.chatRoomId=e.data._id,w(),v()},function(e){console.log(e)}),h()}(),b.clickSubmit=function(e){b.messageLoading=!0,b.focusInput=!0,window.cordova&&(window.cordova.plugins.Keyboard.show(),window.cordova.plugins.Keyboard.isVisible=!0),g();var t={message:b.myMsg,receiver:a.user,roomId:b.chatRoomId};r.sendChatMessage(t).then(function(e){b.myMsg="",b.chatList.push(e.data.message),g(),b.messageTryCount=0}).catch(function(e){b.messageTryCount+=1,b.messageTryCount<=3&&b.clickSubmit()}).finally(function(){b.messageLoading=!1}),e.preventDefault()},b.submitUpload=function(){b.messageLoading=!0,b.file.upload=u.upload({url:i.baseURL+"upload/singleUpload",data:{file:b.file}}),b.file.upload.then(function(e){b.file.result=e.data,b.uploadedImage=e.data,b.cancelUpload();var t={message:b.uploadedImage,receiver:a.user,roomId:b.chatRoomId,type:"img"};r.sendChatMessage(t).then(function(e){g(),b.chatList.push(e.data.message),b.messageLoading=!1}).catch(function(e){console.log(e)})})},b.cancelUpload=function(){b.showTempImage=!1,b.tempImageUrl=""},b.uploadSingleImage=function(e,t){b.file=e,b.errFile=t&&t[0],e&&(b.showTempImage=!0,b.tempImageUrl=e,g())},b.leaveChatBox=function(){n.emit("removeFromRoom",{roomId:b.chatRoomId}),r.updateChatRoom(b.chatRoomId).then(function(e){}).catch(function(e){}).finally(function(){}),d.history.back()}}e.module("petal.chat").controller("ChatBoxController",["$scope","$timeout","Socket","$stateParams","userData","homeService","chatService","$ionicScrollDelegate","userService","Upload","$ionicLoading","$window","blocked",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.chat").controller("ChatParentController",[t])}(window.angular),function(e){"use strict";function t(t,o,n,a,s){function i(){u()}function r(e){var t={};t.creator2=e.user,t.newChat=!0,t.lastMessage={user:e.user._id,_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.chatRoomsList.length;o++)if(t.creator2._id==p.chatRoomsList[o].creator2._id&&t.lastMessage._id!==p.chatRoomsList[o].lastMessage._id)return p.chatRoomsList.splice(o,1),void p.chatRoomsList.unshift(t)}function c(){p.params.page+=1,l()}function l(){n.getRevealedChatRooms(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.chatRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.chatRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.chatRoomsList=[],l()}var p=this;p.getRevealedChatRooms=l,p.loadMoreChats=c,p.pullRefreshChats=i,u(),s.on("newMessageReceived",r)}e.module("petal.chat").controller("RevealedChatController",["$scope","$state","chatService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(e,t,o){function n(t){return e.post(o.baseURL+"chatRoom/delete/"+t)}function a(t){return e.post(o.baseURL+"chat/create/"+t.roomId,t)}function s(t,n){return e.get(o.baseURL+"chat/getChats/"+t,{params:n})}function i(t){return e.get(o.baseURL+"chatRoom/get/"+t)}function r(t){return t.revealed=!1,e.get(o.baseURL+"chatRoom/all/",{params:t})}function c(t){return t.revealed=!0,e.get(o.baseURL+"chatRoom/all/",{params:t})}function l(t){return e.post(o.baseURL+"chatRoom/update/"+t)}var u=this;u.sendChatMessage=a,u.getChatMessages=s,u.getChatRoom=i,u.getAllChatRooms=r,u.getRevealedChatRooms=c,u.updateChatRoom=l,u.deleteChatRoom=n}e.module("petal.chat").service("chatService",["$http","$stateParams","homeService",t])}(window.angular),function(e){"use strict";function t(e,t){return e({prefix:"",ioSocket:io.connect(t.baseURL)})}e.module("petal.chat").factory("Socket",["socketFactory","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o){return e({prefix:"",ioSocket:io.connect(o.baseURL+t.getUser()._id)})}e.module("petal.chat").factory("SocketUserService",["socketFactory","userData","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i,r){function c(e){n.setUser(e),a.setUserLocation(),i.register(),e.device_token?o.go("home.post.popular"):o.go("home.userEditPage")}function l(e){s.show(),t.authenticate(e).then(function(e){c(e.data.user)}).catch(function(e){s.hide()}).finally(function(){})}function u(){r.fromTemplateUrl("app/home/views/policy.html",{scope:e}).then(function(t){e.modal=t,e.modal.show()})}function p(){t.logout(),n.removeUser(),o.go("authenticate")}var d=this;d.isAuth=t.isAuthenticated(),d.isAuth&&o.go("home.post.all"),window.cordova&&(d.webSignIn=!0),d.authLogout=p,d.loadPostModal=u,d.socialAuthenticate=l,e.googleSignIn=function(){s.show({template:"Logging in..."}),window.plugins.googleplus.login({webClientId:"792068565007-rdm7nrlfmc29jvlqo5l0tkgu6ci0vboa.apps.googleusercontent.com"},function(e){var o={};o.id=e.userId,o.displayName=e.displayName,o.imageUrl=e.imageUrl,i.googleSignIn(o).then(function(e){t.setToken(e.data.token),c(e.data.user)}).catch(function(e){console.log("error"),console.log(e),s.hide()})},function(e){alert("missed"),console.log(e),s.hide()})}}e.module("petal.home").controller("AuthenticationController",["$scope","$auth","$state","userData","userLocationService","$ionicLoading","RequestsService","$ionicModal",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i){function r(e){var n=e.message;e.type&&"img"==e.type&&(n="New image");var s=e.user.anonName||e.user.facebookName||e.user.googleName;e.user._id==o.getUser()._id||("chatBox"==t.current.name?t.params.user!=e.user._id&&a.info("<p>"+s+"</p><p>"+n+"</p>",{allowHtml:!0,onTap:function(){t.go("chatBox",{user:e.user._id})}}):(a.info("<p>"+s+"</p><p>"+n+"</p>",{allowHtml:!0,onTap:function(){t.go("chatBox",{user:e.user._id})}}),l.badgeValue=1))}function c(){l.badgeValue=""}var l=this;l.badgeValue="",l.chatClicked=c,i.slideHeader=!1,i.slideHeaderPrevious=0,n.on("connect",function(){n.emit("addToSingleRoom",{roomId:o.getUser()._id}),n.on("newMessageReceived",r)}),l.goForward=function(){var e=s.selectedIndex();e!=-1&&(1===e?s.select(e+2):s.select(e+1))},l.goBack=function(){var e=s.selectedIndex();e!==-1&&0!==e&&(3===e?s.select(e-2):s.select(e-1))}}e.module("petal.home").controller("HomeController",["$scope","$state","userData","Socket","toastr","$ionicTabsDelegate","$rootScope",t])}(window.angular),function(e){"use strict";function t(){return{templateUrl:"app/home/views/ionicCustomSpinner.html"}}e.module("petal.home").directive("distanceView",["postService","$timeout",function(e,t){return{restrict:"E",templateUrl:"app/home/views/distanceViewTemplate.html",scope:{positionCords:"="},replace:!0,link:function(o){function n(){o.positionCords?(o.distanceObj={latitude:o.positionCords[1],longitude:o.positionCords[0]},e.getDistance(o.distanceObj).then(function(e){o.distanceObj.distance=e+" mi"}).catch(function(e){o.distanceObj.distance=""})):(o.distanceObj={},o.distanceObj.distance="")}t(n,1e3)}}}]).directive("ionicCustomSpinner",[t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"A",link:function(t,o){o.bind("scroll",function(t){var o=t.srcElement.scrollTop;e.slideHeader=o-0>150,e.slideHeaderPrevious>o-0&&(e.slideHeader=!1),e.slideHeaderPrevious=o-0,e.$apply()})}}}var o=function(e){return{restrict:"A",scope:{imageModal:"@"},link:function(t,o){function n(e){a().then(function(){t.currentImage=e,t.modal.show()})}function a(){return e.fromTemplateUrl("app/chat/views/chatImageModal.html",{scope:t}).then(function(e){t.modal=e})}o.bind("click",function(e){n(t.imageModal),e.stopPropagation()})}}};e.module("petal.home").directive("keepScroll",["$state","$timeout","ScrollPositions","$ionicScrollDelegate",function(e,t,o,n){return{restrict:"A",link:function(a){a.$on("$stateChangeStart",function(){o[e.current.name]=n.getScrollPosition()}),t(function(){var t;(t=o[e.current.name])&&n.scrollTo(t.left,t.top)})}}}]).factory("ScrollPositions",[function(){return{}}]).directive("isFocused",["$timeout",function(e){return{scope:{trigger:"@isFocused"},link:function(t,o){t.$watch("trigger",function(t){"true"===t&&e(function(){o[0].focus(),o.on("blur",function(){o[0].focus()})})})}}}]).directive("lazyImg",function(){return{replace:!0,template:'<div class="lazy-img"><div class="sm"><img src="{{imgSmall}}" class="small"/></div><div style="padding-bottom: 75%;"></div><img src="{{imgLarge}}" class="large"/></div>',scope:{imgLarge:"@srcLarge",imgSmall:"@srcSmall"},link:function(e,t){var o=new Image,n=new Image;o.src=e.imgSmall,o.onload=function(){t.children(".sm").find("img").css("opacity","1"),n.src=e.imgLarge,n.onload=function(){t.find("img").css("opacity","1")}}}}}).directive("imageModal",["$ionicModal",o]).directive("watchScroll",["$rootScope",t])}(window.angular),function(e){"use strict";function t(e,t){function o(t){return e.post(s.baseURL+"upload/deleteUpload",{data:{public_id:t}})}function n(t){return console.log(t),e.get(s.baseURL+"upload/getImages",{params:{imageText:t}})}function a(e){return t.upload({url:s.baseURL+"upload/singleUploadId",data:{file:e}})}this.baseURL="https://banana-surprise-31332.herokuapp.com/",this.deleteUpload=o,this.submitUpload=a,this.getImages=n;var s=this}e.module("petal.home").service("homeService",["$http","Upload",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s){function i(){var e=o.defer(),i={android:{senderID:"679461840115",vibrate:"true"},browser:{},ios:{alert:"true",badge:"true",sound:"true"},windows:{}};return a.initialize(i).then(function(){a.onNotification(function(){console.log("insideeee notification"),console.log(arguments)}),a.onError(),s.isAuthenticated()&&a.register().then(function(o){t.post(c+"notification/register",{device_token:o}).then(function(t){e.resolve(t)}).catch(function(t){e.reject(t)}).finally(function(){n.hide()})})}),e.promise}function r(e){return t.post(c+"authenticate/auth/nativeGoogle",{profile:e})}var c=e.baseURL;return{googleSignIn:r,register:i}}e.module("petal.home").service("RequestsService",["homeService","$http","$q","$ionicLoading","$cordovaPushV5","$auth",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){var s=e.localStorage,i={},r={setUser:function(e){if(e)s.setItem("user",JSON.stringify(e));else{var t=o.getPayload().sub;if(t)return n.get(a.baseURL+"user/get/"+t).then(function(e){s.setItem("user",JSON.stringify(e.data))})}},getUser:function(){return JSON.parse(s.getItem("user"))},removeUser:function(){i=null,s.removeItem("user")},isUserExists:function(){return!!r.getUser()}};return r}e.module("petal.home").factory("userData",["$window","$state","$auth","$http","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a,s,i,r,c,l,u,p,d,f){function m(){b.params.page+=1,v()}function h(){l.getUser(b.receiverUserID).then(function(e){b.receiverUser=e.data}).catch(function(e){console.log(e)})}function g(){o(function(){c.scrollBottom(!0)})}function v(){r.getChatMessages(b.messageRoomId,b.params).then(function(t){e.forEach(t.data.docs,function(e){b.messageList.unshift(e)})}).catch(function(e){console.log(e)}).finally(function(){g(),t.$broadcast("scroll.refreshComplete"),p.hide()})}function w(){n.emit("addToMessagetRoom",{roomId:b.messageRoomId}),n.on("roomMessageReceived",function(e){b.messageList.push(e),g(),b.messageLoading=!1})}var b=this;b.isBlocked=f,b.currentUser=s.getUser()._id,b.receiverUserID=a.user,b.messageList=[],b.messageRoomId="",b.loadMoreChats=m,b.scrollBottom=g,b.messageLoading=!1,b.messageTryCount=0,b.params={page:1,limit:5},function(){p.show(),r.getChatRoom(b.receiverUserID).then(function(e){b.messageRoom=e.data,b.messageRoomId=e.data._id,w(),v()},function(e){console.log(e)}),h()}(),b.clickSubmit=function(e){b.messageLoading=!0,b.focusInput=!0,window.cordova&&(window.cordova.plugins.Keyboard.show(),window.cordova.plugins.Keyboard.isVisible=!0),g();var t={message:b.myMsg,receiver:a.user,roomId:b.messageRoomId};r.sendChatMessage(t).then(function(e){b.myMsg="",b.messageList.push(e.data.message),g(),b.messageTryCount=0}).catch(function(e){b.messageTryCount+=1,b.messageTryCount<=3&&b.clickSubmit()}).finally(function(){b.messageLoading=!1}),e.preventDefault()},b.submitUpload=function(){b.messageLoading=!0,b.file.upload=u.upload({url:i.baseURL+"upload/singleUpload",data:{file:b.file}}),b.file.upload.then(function(e){b.file.result=e.data,b.uploadedImage=e.data,b.cancelUpload();var t={message:b.uploadedImage,receiver:a.user,roomId:b.messageRoomId,type:"img"};r.sendChatMessage(t).then(function(e){g(),b.messageList.push(e.data.message),b.messageLoading=!1}).catch(function(e){console.log(e)})})},b.cancelUpload=function(){b.showTempImage=!1,b.tempImageUrl=""},b.uploadSingleImage=function(e,t){b.file=e,b.errFile=t&&t[0],e&&(b.showTempImage=!0,b.tempImageUrl=e,g())},b.leaveMessageRoom=function(){n.emit("removeFromRoom",{roomId:b.messageRoomId}),r.updateChatRoom(b.messageRoomId).then(function(e){}).catch(function(e){}).finally(function(){}),d.history.back()}}e.module("petal.message").controller("MessageRoomController",["$scope","$timeout","Socket","$stateParams","userData","homeService","messageService","$ionicScrollDelegate","userService","Upload","$ionicLoading","$window","blocked",t])}(window.angular),function(e){"use strict";function t(t,o,n,a,s){function i(e){var t={};t.newMessage=!0,t.lastMessage={_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.messageRoomsList.length;o++)if(t.creator2._id==p.messageRoomsList[o].creator2._id&&t.lastMessage._id!==p.messageRoomsList[o].lastMessage._id)return p.messageRoomsList.splice(o,1),void p.messageRoomsList.unshift(t)}function r(){u()}function c(){p.params.page+=1,l()}function l(){n.getMessageRooms(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.messageRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.messageRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.messageRoomsList=[],l()}var p=this;p.getAllMessageRooms=l,p.loadMoreMessages=c,p.pullRefreshMessages=r,u(),s.on("newRoomMessageReceived",i),p.messageRoomPage=function(e){e.interest?o.go("messageRoomInterest",{interest:e.interest}):o.go("messageRoomPost",{postId:e.post})}}e.module("petal.message").controller("MessageRoomListController",["$scope","$state","messageRoomService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(e,t,o){function n(t){return e.post(o.baseURL+"message/create/"+t.roomId,t)}function a(t,n){return e.get(o.baseURL+"message/getMessages/"+t,{params:n})}function s(t){return e.get(o.baseURL+"messageRoom/get/"+t)}function i(t){return e.get(o.baseURL+"messageRoom/get/"+t)}var r=this;r.sendMessage=n,r.getMessages=a,r.getMessageRoom=s,r.getMessageRooms=i}e.module("petal.message").service("messageRoomService",["$http","$stateParams","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){u()}function i(){p.peopleSearchText="",p.showSearchCross=!1,u()}function r(e){p.showSearchCross=!0,e&&(p.peopleSearchText=e),u()}function c(){p.params.page+=1,l()}function l(){n.getAllUsers(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.peopleList.push(e)}),p.initialSearchCompleted=!0,t.data.total>p.peopleList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.peopleList=[],p.params={limit:25,page:1},p.peopleSearchText&&(p.params.interest=p.peopleSearchText),l()}var p=this;p.getAllPeople=l,p.pullRefreshPeople=s,p.loadMorePeople=c,p.searchCrossSubmit=i,p.peopleSearchTextSubmit=r,u()}e.module("petal.people").controller("AllPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){l()}function i(){u.params.page+=1,c()}function r(){l()}function c(){n.getNearbyUsers(u.params).then(function(o){e.forEach(o.data.docs,function(e){u.peopleList.push(e)}),u.noPeople=!o.data.total,u.initialSearchCompleted=!0,o.data.total>u.peopleList.length?u.canLoadMoreResults=!0:u.canLoadMoreResults=!1,t.$broadcast("scroll.infiniteScrollComplete")}).catch(function(e){console.log(e)}).finally(function(){u.initialSearchCompleted=!0,t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function l(){u.canLoadMoreResults=!1,u.initialSearchCompleted=!1,u.peopleList=[],u.params={limit:25,page:1,distance:u.distance},c()}var u=this;u.getNearbyPeople=c,u.pullRefreshPeople=s,u.loadMorePeople=i,u.releaseRange=r,u.distance=10,l()}e.module("petal.people").controller("NearbyPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.people").controller("PeopleParentController",[t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getReceivedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.noPeople=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:10,page:1},r()}var l=this;l.getReceivedPeople=r,l.pullRefreshPeople=s,l.loadMorePeople=i,c()}e.module("petal.people").controller("ReceivedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getRequestedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:25,page:1},r()}var l=this;l.getRequestedPeople=r,l.pullRefreshPeople=s,l.loadMorePeople=i,c()}e.module("petal.people").controller("RequestedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getRevealedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.noPeople=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:25,page:1},r()}var l=this;l.getRevealedPeople=r,l.pullRefreshPeople=s,l.loadMorePeople=i,c()}e.module("petal.people").controller("RevealedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"E",templateUrl:"app/people/views/peopleListTemplate.html",replace:!0,scope:{listType:"@listType",peopleList:"=peopleList",peopleSearchTextSubmit:"&peopleSearchTextSubmit"},controller:["$scope",function(t){t.currentUser=e.getUser(),t.setPeopleSearch=function(e,o){t.peopleSearchTextSubmit&&(t.peopleSearchTextSubmit({interest:e}),o.stopPropagation())},t.removeAfterDecided=function(e){t.peopleList.splice(e,1)}}]}}e.module("petal.people").directive("peopleList",["userData",t])}(window.angular),function(e){"use strict";function t(t,o){return{restrict:"E",templateUrl:"app/people/views/receivedPeopleList.html",replace:!0,controllerAs:"rpc",scope:{},controller:["$scope",function(n){function a(){t.getReceivedUsers(i.params).then(function(t){e.forEach(t.data.docs,function(e){i.peopleList.push(e)}),i.noPeople=!t.data.total,i.initialSearchCompleted=!0,t.data.total>i.peopleList.length?i.canLoadMoreResults=!0:i.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){n.$broadcast("scroll.infiniteScrollComplete"),o.hide()})}function s(){i.params.page+=1,a()}var i=this;i.getReceivedPeople=a,i.loadMorePeople=s,function(){i.canLoadMoreResults=!1,i.initialSearchCompleted=!1,i.peopleList=[],i.params={limit:10,page:1},a()}()}]}}e.module("petal.people").directive("receivedPeopleList",["peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o){return{restrict:"E",templateUrl:"app/people/views/requestedPeopleList.html",replace:!0,controllerAs:"rpc",scope:{},controller:["$scope",function(n){function a(){t.getRequestedUsers(i.params).then(function(t){e.forEach(t.data.docs,function(e){i.peopleList.push(e)}),i.noPeople=!t.data.total,i.initialSearchCompleted=!0,t.data.total>i.peopleList.length?i.canLoadMoreResults=!0:i.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){n.$broadcast("scroll.infiniteScrollComplete"),o.hide()})}function s(){i.params.page+=1,a()}var i=this;i.getRequestedPeople=a,i.loadMorePeople=s,function(){i.canLoadMoreResults=!1,i.initialSearchCompleted=!1,i.peopleList=[],i.params={limit:10,page:1},a()}()}]}}e.module("petal.people").directive("requestedPeopleList",["peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o){return{restrict:"A",scope:{deleteChat:"@",
afterCallback:"&"},link:function(n,a){a.bind("click",function(a){e.show({titleText:"Delete ",buttons:[{text:'<i class="icon ion-share"></i> Delete Chat '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.deleteChatRoom(n.deleteChat).then(function(e){n.afterCallback&&n.afterCallback(),window.alert(e.data),o.go("home.chat.all")}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),a.stopPropagation()})}}}function o(e){return{scope:{userBlock:"@",chatDelete:"@",blockId:"@"},link:function(t,o){t.userBlock="true"===t.userBlock,t.afterCallback=function(){t.popover.remove(),window.history.back()},o.bind("click",function(o){e.fromTemplateUrl("app/user/views/settingsTemplate.html",{scope:t}).then(function(e){t.popover=e,t.popover.show(o)}),o.stopPropagation()})}}}function n(e){return{scope:{chatPage:"@"},link:function(t,o){o.bind("click",function(o){e.go("chatBox",{user:t.chatPage}),o.stopPropagation()})}}}function a(e){return{scope:{userPage:"@"},link:function(t,o){o.bind("click",function(o){e.go("home.userPage",{user:t.userPage}),o.stopPropagation()})}}}function s(e,t){return{restrict:"A",scope:{afterCallback:"&",cancelReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Cancel Reveal Request'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.cancel(o.cancelReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function i(e,t){return{restrict:"A",scope:{afterCallback:"&",decideReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Accept Reveal Request'},{text:'<i class="icon ion-share"></i> Deny Reveal Request'}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e?t.accept(o.decideReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}):1===e&&t.ignore(o.decideReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function r(e,t){return{restrict:"A",scope:{afterCallback:"&",deleteReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Delete Reveal '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.finish(o.deleteReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function c(e,t){return{restrict:"A",scope:{afterCallback:"&",sendReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Send Reveal Request'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.initiate(o.sendReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function l(e,t){return{restrict:"A",scope:{createBlock:"@",afterCallback:"&"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Block User",buttons:[{text:'<i class="icon ion-share"></i> Block'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.create(o.createBlock).then(function(e){window.alert("user blocked"),o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function u(e,t){return{restrict:"A",scope:{afterCallback:"&",deleteBlock:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Block",buttons:[{text:'<i class="icon ion-share"></i> Unblock User '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.remove(o.deleteBlock).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}e.module("petal.people").directive("cancelReveal",["$ionicActionSheet","revealService",s]).directive("decideReveal",["$ionicActionSheet","revealService",i]).directive("deleteReveal",["$ionicActionSheet","revealService",r]).directive("sendReveal",["$ionicActionSheet","revealService",c]).directive("createBlock",["$ionicActionSheet","blockService",l]).directive("deleteBlock",["$ionicActionSheet","blockService",u]).directive("deleteChat",["$ionicActionSheet","chatService","$state",t]).directive("chatPage",["$state",n]).directive("userSettings",["$ionicPopover",o]).directive("userPage",["$state",a])}(window.angular),function(e){"use strict";function t(e,t,o,n){function a(o){return o.all=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function s(o){return o.revealed=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function i(o){return o.received=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function r(o){return o.requested=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function c(o,n){e.get(t.baseURL+"user/getUsers",{params:n}).then(function(e){o.resolve(e)}).catch(function(e){o.reject(e)})}function l(a){1==a.page&&o.setUserLocation(),a.nearby=!0;var s=n.defer();return o.getUserLocation().then(function(o){a.latitude=o.latitude,a.longitude=o.longitude,e.get(t.baseURL+"user/getUsers",{params:a}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}).catch(function(e){window.console.log(e),c(s,a)}),s.promise}this.getAllUsers=a,this.getRevealedUsers=s,this.getNearbyUsers=l,this.getRequestedUsers=r,this.getReceivedUsers=i,this.getNearbyUsers=l}e.module("petal.people").service("peopleService",["$http","homeService","userLocationService","$q",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.get(t.baseURL+"upvote/get/"+o)}function n(o){return e.post(t.baseURL+"upvote/create/"+o)}function a(o){return e.post(t.baseURL+"upvote/delete/"+o)}this.createUpvote=n,this.deleteUpvote=a,this.getUpvote=o}e.module("petal.post").service("upvoteService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){u()}function i(){p.postSearchText="",p.showSearchCross=!1,u()}function r(e){p.showSearchCross=!0,e&&(p.postSearchText=e),p.postSearchText&&u()}function c(){p.params.page+=1,l()}function l(){p.noPosts=!1,n.getAllPosts(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.postsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.postsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).catch(function(e){}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.postsList=[],p.params={limit:5,page:1},p.postSearchText&&(p.params.interest=p.postSearchText),l()}var p=this;p.getAllPosts=l,p.pullRefreshPosts=s,p.loadMorePosts=c,p.postSearchTextSubmit=r,p.searchCrossSubmit=i,p.params={limit:3,page:1},u()}e.module("petal.post").controller("AllPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){function s(){n.show(),o.submitPost(i.post).then(function(e){n.hide(),t.go("home.post.latest")}).catch(function(e){console.log("post controller error"),console.log(e)}).finally(function(){n.hide()})}var i=this;i.submitPost=s,i.post={},n.hide(),i.goBack=function(){window.history.back()},e.$watch(function(){return i.post.content},function(e,t){e&&e.length>300&&(i.post.content=t)}),i.selectRandomImage=function(e){i.post.image=e},i.loadRandomImages=function(e){i.loadingRandomImage=!0,i.randomImages=[],a.getImages(e).then(function(e){i.randomImages=e.data,i.loadingRandomImage=!1}).catch(function(e){console.log("images err"),console.log(e)})},i.cancelUpload=function(){i.post.imageId&&a.deleteUpload(i.post.imageId).then(function(e){i.post.image="",i.post.imageId=""})},i.submitUpload=function(e,t){i.post.imageId&&i.cancelUpload(),i.loadingImage=!0,i.file=e,i.errFile=t&&t[0],i.file&&a.submitUpload(i.file).then(function(e){i.post.image=e.data.image,i.post.imageId=e.data.imageId,i.loadingImage=!1})}}e.module("petal.post").controller("CreatePostController",["$scope","$state","postService","$ionicLoading","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getLatestPosts(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.postsList.push(e)}),l.noPosts=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.postsList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.postsList=[],l.params={limit:3,page:1},r()}var l=this;l.getLatestPosts=r,l.pullRefreshPosts=s,l.loadMorePosts=i,c()}e.module("petal.post").controller("LatestPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){l()}function i(){l()}function r(){u.params.page+=1,c()}function c(){n.getNearbyPosts(u.params).then(function(t){e.forEach(t.data.docs,function(e){u.postsList.push(e)}),u.noPosts=!t.data.total,u.initialSearchCompleted=!0,t.data.total>u.postsList.length?u.canLoadMoreResults=!0:u.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide(),u.initialSearchCompleted=!0})}function l(){u.canLoadMoreResults=!1,u.initialSearchCompleted=!1,u.postsList=[],u.params={limit:10,page:1,distance:u.distance},c()}var u=this;u.getNearbyPosts=c,u.pullRefreshPosts=s,u.loadMorePosts=r,u.releaseRange=i,u.distance=10,l()}e.module("petal.post").controller("NearbyPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function s(){c()}function i(){l.params.page+=1,r()}function r(){n.getPopularPosts(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.postsList.push(e)}),t.data.total||(l.noPosts=!0),l.initialSearchCompleted=!0,t.data.total>l.postsList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.postsList=[],l.params={limit:3,page:1},r()}var l=this;l.getPopularPosts=r,l.pullRefreshPosts=s,l.loadMorePosts=i,c()}e.module("petal.post").controller("PopularPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e){}e.module("petal.post").controller("PostParentController",["$rootScope",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s){function i(){o.getPost(n.id).then(function(e){p.post=e.data,p.distanceObj={latitude:p.post.loc[1],longitude:p.post.loc[0],diatance:0},u()})}function r(){s.getUpvote(p.currentPost).then(function(e){p.postUpvoted=e.data||!1}).catch(function(e){console.log(e)})}function c(){s.createUpvote(p.currentPost).then(function(e){r()}).catch(function(e){console.log(e)})}function l(){s.deleteUpvote(p.currentPost).then(function(e){r()}).catch(function(e){console.log(e)})}function u(){o.getDistance(p.distanceObj)}var p=this;p.getSinglePost=i,p.submitPostUpvote=c,p.deletePostUpvote=l,p.getPostDistance=u,p.back=function(){window.history.back()},function(){p.currentPost=n.id,i(),r()}()}e.module("petal.post").controller("SinglePostController",["$scope","$state","postService","$stateParams","$ionicHistory","upvoteService",t])}(window.angular),function(e){"use strict";function t(t,o){return{restrict:"A",scope:{postSearchModal:"@"},link:function(n,a){function s(){n.postSearchData.postsList=[];var e={interest:n.postSearchData.postSearchModal,page:1,limit:50};n.getPosts(e)}function i(){return t.fromTemplateUrl("app/post/views/postSearchModal.html",{scope:n}).then(function(e){n.modal=e})}n.postSearchData={},n.postSearchData.postSearchModal=n.postSearchModal,n.postSearchData.postsList=[],n.modalsList=[],n.clickPostSearch=s,n.showPostModal=function(){i().then(function(){n.modal.show()}),n.$on("modal.hidden",function(){n.modal.remove()})},n.getPosts=function(t){o.getAllPosts(t).then(function(t){e.forEach(t.data.docs,function(e){n.postSearchData.postsList.push(e)}),n.postSearchData.noPosts=!t.data.total,n.postSearchData.initialSearchCompleted=!0,t.data.total>n.postSearchData.postsList.length?n.postSearchData.canLoadMoreResults=!0:n.postSearchData.canLoadMoreResults=!1})},a.bind("click",function(e){var t={interest:n.postSearchData.postSearchModal,page:1,limit:50};n.showPostModal(),e.stopPropagation(),n.getPosts(t)})}}}e.module("petal.post").directive("postSearchModal",["$ionicModal","postService",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){return{restrict:"E",templateUrl:"app/post/views/postsListTemplate.html",scope:{postsList:"=postsList",postSearchTextSubmit:"&postSearchTextSubmit"},replace:!0,link:function(o){function n(t){o.modal.hide(),e.go("home.userPage",{user:t})}function s(){return a.fromTemplateUrl("app/post/views/postModal.html",{scope:o}).then(function(e){o.modal=e})}o.getTime=function(e){return moment(e).fromNow()},o.currentUser=t.getUser(),o.setPostSearch=function(e){o.postSearchTextSubmit&&o.postSearchTextSubmit({interest:e})},o.userPage=n,o.postModal={},o.postModal.userPage=n,o.showPostModal=function(e){o.postModal.post=e,o.postModal.post.views+=1,s().then(function(){o.modal.show()}),o.$on("modal.hidden",function(){o.modal.remove()})}}}}e.module("petal.post").directive("postsList",["$state","userData","postService","upvoteService","$ionicModal",t])}(window.angular),function(e){"use strict";function t(e,t,o){return{restrict:"E",templateUrl:"app/post/views/postUpvoteTemplate.html",scope:{postId:"=postId",upvotesLength:"=upvotesLength"},replace:!0,link:function(e){function o(){t.getUpvote(e.postId).then(function(t){e.postUpvoted=t.data,e.loadingUpvote=!1}).catch(function(e){console.log("check error"),console.log(e)})}function n(){e.postUpvoted=!0,t.createUpvote(e.postId).then(function(){e.upvotesLength+=1}).catch(function(e){console.log("submit error"),console.log(e)})}function a(){e.postUpvoted=!1,t.deleteUpvote(e.postId).then(function(){e.upvotesLength-=1}).catch(function(e){window.alert(e)})}e.checkPostUpvote=o,e.submitPostUpvote=n,e.deletePostUpvote=a,function(){e.loadingUpvote=!0,o()}()}}}e.module("petal.post").directive("postUpvote",["$state","upvoteService","$timeout",t])}(window.angular),function(e){"use strict";function t(e,t,o,n){function a(o){return e.get(t.baseURL+"post/getPosts",{params:o})}function s(o,n){e.get(t.baseURL+"post/getPosts",{params:n}).then(function(e){console.log("without position"),o.resolve(e)}).catch(function(e){o.reject(e)})}function i(a){a.nearby=!0;var i=n.defer();return 1==a.page&&o.setUserLocation(),o.getUserLocation().then(function(o){a.latitude=o.latitude,a.longitude=o.longitude,e.get(t.baseURL+"post/getPosts",{params:a}).then(function(e){i.resolve(e)}).catch(function(e){i.reject(e)})}).catch(function(e){window.console.log(e),s(i,a)}),i.promise}function r(o){return o.sort="-time",e.get(t.baseURL+"post/getPosts",{params:o})}function c(o){return o.sort="-upvotesLength",e.get(t.baseURL+"post/getPosts",{params:o})}function l(a){var s=n.defer();return console.log("entered submit post"),o.getUserLocation().then(function(o){a.latitude=o.latitude,a.longitude=o.longitude,e.post(t.baseURL+"post/create",{post:a}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}).catch(function(o){e.post(t.baseURL+"post/create",{post:a}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}),s.promise}function u(o){return e.delete(t.baseURL+"post/delete/"+o)}function p(o){return e.get(t.baseURL+"post/get/"+o)}function d(e){var t=n.defer(),a=e.latitude,s=e.longitude;return o.getUserLocation().then(function(e){var o=e.latitude,n=e.longitude,i=f(o-a),r=f(n-s),c=Math.sin(i/2)*Math.sin(i/2)+Math.cos(f(a))*Math.cos(f(o))*Math.sin(r/2)*Math.sin(r/2),l=2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),u=6371*l;t.resolve(Math.ceil(u))}).catch(function(e){console.log(e)}),t.promise}function f(e){return e*(Math.PI/180)}this.getAllPosts=a,this.getNearbyPosts=i,this.getLatestPosts=r,this.getPopularPosts=c,this.submitPost=l,this.deletePost=u,this.getPost=p,this.getDistance=d}e.module("petal.post").service("postService",["$http","homeService","userLocationService","$q",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i){function r(){l.user=n.getUser(),e.editForm.user=l.user,l.user.interests.length&&(e.editForm.user.interests="!"+l.user.interests.join("!"))}function c(){i.hide(),e.editForm={},r()}var l=this;l.activate=c,c(),e.editForm.submitUser=function(){i.show(),a.updateUser(e.editForm.user).then(function(e){window.alert("updated user"),t.go("home.user.userMePage")}).catch(function(e){}).finally(function(){n.setUser(),i.hide()})},e.editForm.uploadUserPicture=function(t,n){e.loadingImage=!0,l.file=t,l.errFile=n&&n[0],t&&(l.file.upload=s.upload({url:o.baseURL+"upload/singleUpload",data:{file:l.file}}),l.file.upload.then(function(t){l.file.result=t.data,e.editForm.user.picture=t.data,e.loadingImage=!1}))}}e.module("petal.user").controller("UserEditPageController",["$scope","$state","homeService","userData","userService","Upload","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i,r){function c(e){i.open("https://www.facebook.com/"+e,"_system")}function l(){n.setUser().then(function(){w.user=n.getUser()}).catch(function(e){window.console.log(e)}).finally(function(){r.hide()})}function u(){w.params={page:1,limit:100,user:n.getUser()._id},s.getLatestPosts(w.params).then(function(e){w.postsList=e.data.docs})}function p(e){w.activeTab=e}function d(e){return e===w.activeTab}function f(e){w.subActiveTab=e}function m(e){return e===w.subActiveTab}function h(){o.logout(),t.go("authenticate")}function g(){l(),v(),e.$broadcast("scroll.refreshComplete"),u()}function v(){a.getRequestedUsers({page:1,limit:25}).then(function(e){w.peopleList=e.data.docs,w.total=e.data.total})}var w=this;w.logout=h,w.activate=g,w.activeTab=1,w.activateTab=p,w.isTabActive=d,w.subActiveTab=1,w.subActivateTab=f,w.isSubTabActive=m,w.openFacebook=c,g()}e.module("petal.user").controller("UserMePageController",["$scope","$state","$auth","userData","peopleService","postService","$window","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,s,i,r,c){function l(e){r.open("https://www.facebook.com/"+e,"_system")}function u(e){r.open("https://plus.google.com/"+e,"_system")}function p(){v.params={page:1,limit:100,user:a.user},i.getLatestPosts(v.params).then(function(e){v.postsList=e.data.docs})}function d(e){v.activeTab=e}function f(e){return e===v.activeTab}function m(){n.check(a.user).then(function(e){v.revealChoice=e.data.status})}function h(){r.history.back()}function g(){o.getUser(a.user).then(function(e){v.user=e.data}).catch(function(e){}).finally(function(){c.hide()})}var v=this;v.checkReveal=m,v.goBack=h,v.activateTab=d,v.isTabActive=f,v.openFacebook=l,v.openGoogle=u,function(){g(),v.revealChoice=s,v.activeTab=1,p()}()}e.module("petal.user").controller("UserPageController",["$state","$auth","userService","revealService","$stateParams","friends","postService","$window","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o){alert(o)}e.module("petal.user").controller("UserPagePostsController",["$state","$stateParams","friends",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.user").controller("UserParentController",[t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"E",replace:!0,templateUrl:"app/user/views/blockedList.html",link:function(t){t.afterCallback=function(e){t.peopleList.splice(e,1)},e.getBlocks().then(function(e){window.console.log(e),t.peopleList=e.data})}}}e.module("petal.user").directive("blockedList",["blockService",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.post(t.baseURL+"block/create",{secondUser:o})}function n(o){return e.post(t.baseURL+"block/delete",{secondUser:o})}function a(o){return e.get(t.baseURL+"block/get/"+o)}function s(){return e.get(t.baseURL+"block/getBlocks/")}this.create=o,this.remove=n,this.getBlocks=s,this.check=a}e.module("petal.user").service("blockService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(e,t){function o(e){return{secondUser:e}}function n(o){return e.post(t.baseURL+"reveal/initiate",{secondUser:o})}function a(o){return e.post(t.baseURL+"reveal/accept",{secondUser:o})}function s(o){return e.post(t.baseURL+"reveal/ignore",{secondUser:o})}function i(o){return e.post(t.baseURL+"reveal/cancel",{secondUser:o})}function r(n){var a=o(n);return e.get(t.baseURL+"reveal/received",{params:a})}function c(n){var a=o(n);return e.get(t.baseURL+"reveal/requested",{params:a})}function l(n){var a=o(n);return e.get(t.baseURL+"reveal/revealed",{params:a})}function u(o){return e.post(t.baseURL+"reveal/finish",{secondUser:o})}function p(n){var a=o(n);return e.get(t.baseURL+"reveal/check",{params:a})}this.initiate=n,this.accept=a,this.ignore=s,this.cancel=i,this.received=r,this.requested=c,this.revealed=l,this.finish=u,this.check=p}e.module("petal.user").service("revealService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){function s(){var t=o.defer(),a={timeout:3e3,enableHighAccuracy:!1};return e.getCurrentPosition(a).then(function(e){var o={latitude:e.coords.latitude,longitude:e.coords.longitude};t.resolve(o)}).catch(function(){n.post("https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyA5bqvCp1wYX7FGKiDyd3w0DzvJZoPwQrQ").then(function(e){var o={latitude:e.data.location.lat,longitude:e.data.location.lng};t.resolve(o)}).catch(function(e){window.console.log("error from google"),window.console.log(e),t.reject("Not able to acces your location.Make sure location is enabled.")})}),t.promise}function i(){var o={timeout:3e3,enableHighAccuracy:!1};e.getCurrentPosition(o).then(function(e){var o={latitude:e.coords.latitude,longitude:e.coords.longitude};t.updateUser(o)}).catch(function(e){n.post("https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyA5bqvCp1wYX7FGKiDyd3w0DzvJZoPwQrQ").then(function(e){var o={latitude:e.data.location.lat,longitude:e.data.location.lng};t.updateUser(o)}).catch(function(){3==e.code?a.warning("Not able to acces your location.Make sure location is enabled.","Warning",{maxOpened:1}):2!=e.code&&1!=e.code||a.warning("Not able to acces your location.Make sure location is enabled.","Warning",{maxOpened:1})})})}this.getUserLocation=s,this.setUserLocation=i}e.module("petal.user").service("userLocationService",["$cordovaGeolocation","userService","$q","$http","toastr",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.get(t.baseURL+"user/get/"+o)}function n(o){return e.post(t.baseURL+"user/update/",{user:o})}this.updateUser=n,this.getUser=o}e.module("petal.user").service("userService",["$http","homeService",t])}(window.angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
