!function(e){"use strict";function t(t,o,a,n){a.tabs.position("bottom"),a.scrolling.jsScrolling(!1),a.views.transition("platform"),t.otherwise("/home/post/nearby"),e.extend(n,{autoDismiss:!0,maxOpened:1})}var o=e.module("petal",["ionic","ngAnimate","satellizer","ngFileUpload","btford.socket-io","ngCordova","toastr","petal.home","petal.post","petal.chat","petal.user","petal.people","petal.message"]);o.config(["$urlRouterProvider","$stateProvider","$ionicConfigProvider","toastrConfig",t]),o.run(["$rootScope","$state","$ionicPlatform","$ionicLoading","RequestsService","$cordovaPushV5","$ionicHistory",function(e,t,o,a,n,s,i){function r(){o.registerBackButtonAction(function(t){return e.backButtonPressedOnceToExit?ionic.Platform.exitApp():i.backView()?i.goBack():(e.backButtonPressedOnceToExit=!0,window.plugins.toast.showShortCenter("Press back button again to exit",function(e){},function(e){}),window.setTimeout(function(){e.backButtonPressedOnceToExit=!1},2e3)),t.preventDefault(),!1},101)}function c(){n.register(),e.$on("$cordovaPushV5:notificationReceived",function(e,t){console.log(t),console.log(e)}),e.$on("$cordovaPushV5:errorOcurred",function(e,t){})}o.ready(function(){window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0),c(),r()),window.StatusBar&&StatusBar.styleDefault(),window.onerror=function(e,t,o){return!1},e.$on("$stateChangeError",function(){t.go("home.post.nearby"),a.hide()})})}])}(window.angular),function(e){"use strict";function t(e,t){var a="https://banana-surprise-31332.herokuapp.com/authenticate";t.facebook({clientId:"1134208830041632",url:a+"/auth/facebook",redirectUri:"https://banana-surprise-31332.herokuapp.com/"}),t.google({clientId:"742676837265-33jntkd60p87gkrh48nqe6cdd8ntsfl5.apps.googleusercontent.com",url:a+"/auth/google",redirectUri:"http://localhost:8100"}),e.state("authenticate",{url:"/authenticate",controller:"AuthenticationController",controllerAs:"ac",templateUrl:"app/home/views/authenticationPage.html"}).state("home",{url:"/home",abstract:!0,templateUrl:"app/home/views/tabs.html",controller:"HomeController",controllerAs:"hc",resolve:{redirectIfUserNotAuthenticated:["$q","$auth","$state","$timeout",o]}})}function o(e,t,o,a){var n=e.defer();return t.isAuthenticated()?n.resolve():a(function(){o.go("authenticate")}),n.promise}e.module("petal.home",[]).config(["$stateProvider","$authProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("home.chat",{url:"/chat",abstract:!0,views:{"chat-tab":{templateUrl:"app/chat/views/chatParent.html",controller:"ChatParentController",controllerAs:"ppc"}}}).state("home.chat.all",{url:"/all",views:{"chat-tab":{templateUrl:"app/chat/views/allChat.html",controller:"AllChatController",controllerAs:"acc"}}}).state("home.chat.revealed",{url:"/revealed",views:{"chat-tab":{templateUrl:"app/chat/views/revealedChat.html",controller:"RevealedChatController",controllerAs:"rpc"}}}).state("home.chat.messageroom",{url:"/messageRoom",views:{"chat-tab":{templateUrl:"app/message/views/messageRoomList.html",controller:"MessageRoomListController",controllerAs:"mrlc"}}}).state("chatBox",{url:"/chatBox/:user",templateUrl:"app/chat/views/chatBox.html",controller:"ChatBoxController",controllerAs:"cbc",resolve:{blocked:["$stateParams","blockService","$q",o]}})}function o(e,t,o){var a=o.defer();return t.check(e.user).then(function(e){a.resolve(e.data.blocked)}).catch(function(){a.resolve()}),a.promise}e.module("petal.chat",["ngFileUpload"]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("messageRoomInterest",{url:"/messageRoom/interest/post/:interest/:postId",templateUrl:"app/message/views/messageRoom.html",controller:"MessageRoomController",controllerAs:"mrc",resolve:{messageRoom:["$stateParams","$q","messageRoomService",o]}}).state("messageRoom",{url:"/messageRoom/:roomId",templateUrl:"app/message/views/messageRoom.html",controller:"MessageRoomController",controllerAs:"mrc",resolve:{messageRoom:["$stateParams","$q","messageRoomService",o]}}).state("messageRoomCreate",{url:"/messageRoomCreate",templateUrl:"app/message/views/messageRoomCreate.html",controller:"MessageRoomCreateController",controllerAs:"mrcc"})}function o(e,t,o){var a=t.defer(),n={};return e.postId&&(n.postId=e.postId),e.interest&&(n.interest=e.interest),e.roomId&&(n.roomId=e.roomId),o.getMessageRoom(n).then(function(e){a.resolve(e.data.foundMessageRoom)}).catch(function(e){console.log("Resolve mesage Room"),console.log(e)}),a.promise}e.module("petal.message",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("home.people",{url:"/people",abstract:!0,views:{"people-tab":{templateUrl:"app/people/views/peopleParent.html",controller:"PeopleParentController",controllerAs:"ppc"}}}).state("home.people.all",{url:"/all",views:{"people-tab":{templateUrl:"app/people/views/allPeople.html",controller:"AllPeopleController",controllerAs:"apc"}}}).state("home.people.revealed",{url:"/revealed",views:{"people-tab":{templateUrl:"app/people/views/revealedPeople.html",controller:"RevealedPeopleController",controllerAs:"rpc"}}}).state("home.people.received",{url:"/received",views:{"people-tab":{templateUrl:"app/people/views/receivedPeople.html",controller:"ReceivedPeopleController",controllerAs:"rpc"}}}).state("home.people.nearby",{url:"/nearby",views:{"people-tab":{templateUrl:"app/people/views/nearbyPeople.html",controller:"NearbyPeopleController",controllerAs:"npc"}}})}e.module("petal.people",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("home.post",{url:"/post",abstract:!0,views:{"post-tab":{templateUrl:"app/post/views/postParent.html",controller:"PostParentController",controllerAs:"ppc"}}}).state("home.post.all",{url:"/all",views:{"post-tab":{templateUrl:"app/post/views/allPost.html",controller:"AllPostController",controllerAs:"apc"}}}).state("home.post.latest",{url:"/latest",views:{"post-tab":{templateUrl:"app/post/views/latestPost.html",controller:"LatestPostController",controllerAs:"lpc"}}}).state("home.post.popular",{url:"/popular",views:{"post-tab":{templateUrl:"app/post/views/popularPost.html",controller:"PopularPostController",controllerAs:"ppc"}}}).state("home.post.nearby",{url:"/nearby",views:{"post-tab":{templateUrl:"app/post/views/nearbyPost.html",controller:"NearbyPostController",controllerAs:"npc"}}}).state("postSubmit",{url:"/submit",templateUrl:"app/post/views/createPost.html",controller:"CreatePostController",controllerAs:"cpc"}).state("singlePost",{url:"/post/:id",templateUrl:"app/post/views/singlePost.html",controller:"SinglePostController",controllerAs:"spc"})}e.module("petal.post",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e,t,o){var a=o.defer();return t.check(e.user).then(function(e){!0===e.data.blocked?(window.alert("Blocked profile"),window.history.back()):a.resolve()}).catch(function(){a.resolve()}),a.promise}function o(e,t,o){var a=o.defer();return t.check(e.user).then(function(e){a.resolve(e.data.status)}).catch(function(){}),a.promise}e.module("petal.user",[]).config(["$stateProvider",function(e){e.state("home.user",{url:"/user",abstract:!0,views:{"user-tab":{templateUrl:"app/user/views/userParentPage.html",controller:"UserParentController",controllerAs:"upc"}}}).state("home.user.userMePage",{url:"/userMePage",views:{"user-tab":{templateUrl:"app/user/views/userMePage.html",controller:"UserMePageController",controllerAs:"umpc"}}}).state("home.userPage",{url:"/userPage/:user",resolve:{blocked:["$stateParams","blockService","$q",t],friends:["$stateParams","revealService","$q",o]},views:{"extra-tab":{templateUrl:"app/user/views/userProfilePage.html",controller:"UserPageController",controllerAs:"upc"}}}).state("home.userEditPage",{url:"/userEditPage",views:{"extra-tab":{templateUrl:"app/user/views/userEditPage.html",controller:"UserEditPageController",controllerAs:"uepc"}}})}])}(window.angular),function(e){"use strict";function t(){return{templateUrl:"app/home/views/ionicCustomSpinner.html"}}e.module("petal.home").directive("distanceView",["postService","$timeout",function(e,t){return{restrict:"E",templateUrl:"app/home/views/distanceViewTemplate.html",scope:{positionCords:"="},replace:!0,link:function(o){function a(){o.positionCords?(o.distanceObj={latitude:o.positionCords[1],longitude:o.positionCords[0]},e.getDistance(o.distanceObj).then(function(e){o.distanceObj.distance=e+" mi"}).catch(function(e){o.distanceObj.distance=""})):(o.distanceObj={},o.distanceObj.distance="")}t(a,1e3)}}}]).directive("ionicCustomSpinner",[t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"A",link:function(t,o){o.bind("scroll",function(t){var o=t.srcElement.scrollTop;e.slideHeader=o-0>150,e.slideHeaderPrevious>o-0&&(e.slideHeader=!1),e.slideHeaderPrevious=o-0,e.$apply()})}}}var o=function(e){return{restrict:"A",scope:{imageModal:"@"},link:function(t,o){function a(e){n().then(function(){t.currentImage=e,t.modal.show()})}function n(){return e.fromTemplateUrl("app/chat/views/chatImageModal.html",{scope:t}).then(function(e){t.modal=e})}o.bind("click",function(e){a(t.imageModal),e.stopPropagation()})}}};e.module("petal.home").directive("keepScroll",["$state","$timeout","ScrollPositions","$ionicScrollDelegate",function(e,t,o,a){return{restrict:"A",link:function(n){n.$on("$stateChangeStart",function(){o[e.current.name]=a.getScrollPosition()}),t(function(){var t;(t=o[e.current.name])&&a.scrollTo(t.left,t.top)})}}}]).factory("ScrollPositions",[function(){return{}}]).directive("isFocused",["$timeout",function(e){return{scope:{trigger:"@isFocused"},link:function(t,o){t.$watch("trigger",function(t){"true"===t&&e(function(){o[0].focus(),o.on("blur",function(){o[0].focus()})})})}}}]).directive("lazyImg",function(){return{replace:!0,template:'<div class="lazy-img"><div class="sm"><img src="{{imgSmall}}" class="small"/></div><div style="padding-bottom: 75%;"></div><img src="{{imgLarge}}" class="large"/></div>',scope:{imgLarge:"@srcLarge",imgSmall:"@srcSmall"},link:function(e,t){var o=new Image,a=new Image;o.src=e.imgSmall,o.onload=function(){t.children(".sm").find("img").css("opacity","1"),a.src=e.imgLarge,a.onload=function(){t.find("img").css("opacity","1")}}}}}).directive("imageModal",["$ionicModal",o]).directive("watchScroll",["$rootScope",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n,s,i,r){function c(e){a.setUser(e),n.setUserLocation(),i.register(),e.device_token?o.go("home.post.popular"):o.go("home.userEditPage")}function l(e){s.show(),t.authenticate(e).then(function(e){c(e.data.user)}).catch(function(e){s.hide()}).finally(function(){})}function u(){r.fromTemplateUrl("app/home/views/policy.html",{scope:e}).then(function(t){e.modal=t,e.modal.show()})}function p(){t.logout(),a.removeUser(),o.go("authenticate")}var d=this;d.isAuth=t.isAuthenticated(),d.isAuth&&o.go("home.post.all"),window.cordova&&(d.webSignIn=!0),d.authLogout=p,d.loadPostModal=u,d.socialAuthenticate=l,e.googleSignIn=function(){s.show({template:"Logging in..."}),window.plugins.googleplus.login({webClientId:"792068565007-rdm7nrlfmc29jvlqo5l0tkgu6ci0vboa.apps.googleusercontent.com"},function(e){var o={};o.id=e.userId,o.displayName=e.displayName,o.imageUrl=e.imageUrl,i.googleSignIn(o).then(function(e){t.setToken(e.data.token),c(e.data.user)}).catch(function(e){console.log("error"),console.log(e),s.hide()})},function(e){alert("missed"),console.log(e),s.hide()})}}e.module("petal.home").controller("AuthenticationController",["$scope","$auth","$state","userData","userLocationService","$ionicLoading","RequestsService","$ionicModal",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n,s,i){function r(e){var a=e.message;e.type&&"img"==e.type&&(a="New image");var s=e.user.anonName||e.user.facebookName||e.user.googleName;e.user._id==o.getUser()._id||("chatBox"==t.current.name?t.params.user!=e.user._id&&n.info("<p>"+s+"</p><p>"+a+"</p>",{allowHtml:!0,onTap:function(){t.go("chatBox",{user:e.user._id})}}):(n.info("<p>"+s+"</p><p>"+a+"</p>",{allowHtml:!0,onTap:function(){t.go("chatBox",{user:e.user._id})}}),l.badgeValue=1))}function c(){l.badgeValue=""}var l=this;l.badgeValue="",l.chatClicked=c,i.slideHeader=!1,i.slideHeaderPrevious=0,a.on("connect",function(){a.emit("addToSingleRoom",{roomId:o.getUser()._id}),a.on("newMessageReceived",r)}),l.goForward=function(){var e=s.selectedIndex();-1!=e&&(1===e?s.select(e+2):s.select(e+1))},l.goBack=function(){var e=s.selectedIndex();-1!==e&&0!==e&&(3===e?s.select(e-2):s.select(e-1))}}e.module("petal.home").controller("HomeController",["$scope","$state","userData","Socket","toastr","$ionicTabsDelegate","$rootScope",t])}(window.angular),function(e){"use strict";function t(e,t){function o(t){return e.post(s.baseURL+"upload/deleteUpload",{data:{public_id:t}})}function a(t){return e.get(s.baseURL+"upload/getImages",{params:{imageText:t}})}function n(e){return t.upload({url:s.baseURL+"upload/singleUploadId",data:{file:e}})}this.baseURL="https://banana-surprise-31332.herokuapp.com/",this.deleteUpload=o,this.submitUpload=n,this.getImages=a;var s=this}e.module("petal.home").service("homeService",["$http","Upload",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n,s){function i(){var e=o.defer(),i={android:{senderID:"679461840115",vibrate:"true"},browser:{},ios:{alert:"true",badge:"true",sound:"true"},windows:{}};return n.initialize(i).then(function(){n.onNotification(function(){console.log("insideeee notification"),console.log(arguments)}),n.onError(),s.isAuthenticated()&&n.register().then(function(o){t.post(c+"notification/register",{device_token:o}).then(function(t){e.resolve(t)}).catch(function(t){e.reject(t)}).finally(function(){a.hide()})})}),e.promise}function r(e){return t.post(c+"authenticate/auth/nativeGoogle",{profile:e})}var c=e.baseURL;return{googleSignIn:r,register:i}}e.module("petal.home").service("RequestsService",["homeService","$http","$q","$ionicLoading","$cordovaPushV5","$auth",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n){var s=e.localStorage,i={},r={setUser:function(e){if(e)s.setItem("user",JSON.stringify(e));else{var t=o.getPayload().sub;if(t)return a.get(n.baseURL+"user/get/"+t).then(function(e){s.setItem("user",JSON.stringify(e.data))})}},getUser:function(){return JSON.parse(s.getItem("user"))},removeUser:function(){i=null,s.removeItem("user")},isUserExists:function(){return!!r.getUser()}};return r}e.module("petal.home").factory("userData",["$window","$state","$auth","$http","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,a,n,s){function i(e){var t={};t.creator2=e.user,t.newChat=!0,t.lastMessage={user:e.user._id,_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.chatRoomsList.length;o++)if(t.creator2._id==p.chatRoomsList[o].creator2._id&&t.lastMessage._id!==p.chatRoomsList[o].lastMessage._id)return p.chatRoomsList.splice(o,1),void p.chatRoomsList.unshift(t)}function r(){u()}function c(){p.params.page+=1,l()}function l(){a.getAllChatRooms(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.chatRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.chatRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.chatRoomsList=[],l()}var p=this;p.getAllChatRooms=l,p.loadMoreChats=c,p.pullRefreshChats=r,u(),s.on("newMessageReceived",i),p.chatPage=function(e){o.go("chatBox",{user:e})}}e.module("petal.chat").controller("AllChatController",["$scope","$state","chatService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(t,o,a,n,s,i,r,c,l,u,p,d,m){function g(){R.params.page+=1,v()}function f(){l.getUser(R.receiverUserID).then(function(e){R.receiverUser=e.data}).catch(function(e){console.log(e)})}function h(){o(function(){c.scrollBottom(!0)})}function v(){r.getChatMessages(R.chatRoomId,R.params).then(function(t){e.forEach(t.data.docs,function(e){R.chatList.unshift(e)})}).catch(function(e){console.log(e)}).finally(function(){h(),t.$broadcast("scroll.refreshComplete"),p.hide()})}function w(){a.emit("addToChatRoom",{roomId:R.chatRoomId}),a.on("messageReceived",function(e){R.chatList.push(e),h(),R.messageLoading=!1})}var R=this;R.isBlocked=m,!0===R.isBlocked&&window.alert("blocked profile"),R.currentUser=s.getUser()._id,R.receiverUserID=n.user,R.chatList=[],R.chatRoomId="",R.loadMoreChats=g,R.scrollBottom=h,R.messageLoading=!1,R.messageTryCount=0,R.params={page:1,limit:5},function(){p.show(),r.getChatRoom(R.receiverUserID).then(function(e){R.chatRoom=e.data,R.chatRoomId=e.data._id,w(),v()},function(e){console.log(e)}),f()}(),R.clickSubmit=function(e){R.messageLoading=!0,R.focusInput=!0,window.cordova&&(window.cordova.plugins.Keyboard.show(),window.cordova.plugins.Keyboard.isVisible=!0),h();var t={message:R.myMsg,receiver:n.user,roomId:R.chatRoomId};r.sendChatMessage(t).then(function(e){R.myMsg="",R.chatList.push(e.data.message),h(),R.messageTryCount=0}).catch(function(e){R.messageTryCount+=1,R.messageTryCount<=3&&R.clickSubmit()}).finally(function(){R.messageLoading=!1}),e.preventDefault()},R.submitUpload=function(){R.messageLoading=!0,R.file.upload=u.upload({url:i.baseURL+"upload/singleUpload",data:{file:R.file}}),R.file.upload.then(function(e){R.file.result=e.data,R.uploadedImage=e.data,R.cancelUpload();var t={message:R.uploadedImage,receiver:n.user,roomId:R.chatRoomId,type:"img"};r.sendChatMessage(t).then(function(e){h(),R.chatList.push(e.data.message),R.messageLoading=!1}).catch(function(e){console.log(e)})})},R.cancelUpload=function(){R.showTempImage=!1,R.tempImageUrl=""},R.uploadSingleImage=function(e,t){R.file=e,R.errFile=t&&t[0],e&&(R.showTempImage=!0,R.tempImageUrl=e,h())},R.leaveChatBox=function(){a.emit("removeFromRoom",{roomId:R.chatRoomId}),r.updateChatRoom(R.chatRoomId).then(function(e){}).catch(function(e){}).finally(function(){}),d.history.back()}}e.module("petal.chat").controller("ChatBoxController",["$scope","$timeout","Socket","$stateParams","userData","homeService","chatService","$ionicScrollDelegate","userService","Upload","$ionicLoading","$window","blocked",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.chat").controller("ChatParentController",[t])}(window.angular),function(e){"use strict";function t(t,o,a,n,s){function i(){u()}function r(e){var t={};t.creator2=e.user,t.newChat=!0,t.lastMessage={user:e.user._id,_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.chatRoomsList.length;o++)if(t.creator2._id==p.chatRoomsList[o].creator2._id&&t.lastMessage._id!==p.chatRoomsList[o].lastMessage._id)return p.chatRoomsList.splice(o,1),void p.chatRoomsList.unshift(t)}function c(){p.params.page+=1,l()}function l(){a.getRevealedChatRooms(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.chatRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.chatRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.chatRoomsList=[],l()}var p=this;p.getRevealedChatRooms=l,p.loadMoreChats=c,p.pullRefreshChats=i,u(),s.on("newMessageReceived",r)}e.module("petal.chat").controller("RevealedChatController",["$scope","$state","chatService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(e,t,o){function a(t){return e.post(o.baseURL+"chatRoom/delete/"+t)}function n(t){return e.post(o.baseURL+"chat/create/"+t.roomId,t)}function s(t,a){return e.get(o.baseURL+"chat/getChats/"+t,{params:a})}function i(t){return e.get(o.baseURL+"chatRoom/get/"+t)}function r(t){return t.revealed=!1,e.get(o.baseURL+"chatRoom/all/",{params:t})}function c(t){return t.revealed=!0,e.get(o.baseURL+"chatRoom/all/",{params:t})}function l(t){return e.post(o.baseURL+"chatRoom/update/"+t)}var u=this;u.sendChatMessage=n,u.getChatMessages=s,u.getChatRoom=i,u.getAllChatRooms=r,u.getRevealedChatRooms=c,u.updateChatRoom=l,u.deleteChatRoom=a}e.module("petal.chat").service("chatService",["$http","$stateParams","homeService",t])}(window.angular),function(e){"use strict";function t(e,t){return e({prefix:"",ioSocket:io.connect(t.baseURL)})}e.module("petal.chat").factory("Socket",["socketFactory","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o){return e({prefix:"",ioSocket:io.connect(o.baseURL+t.getUser()._id)})}e.module("petal.chat").factory("SocketUserService",["socketFactory","userData","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,a,n,s,i,r,c,l,u,p,d,m){function g(){w.params.page+=1,h()}function f(){o(function(){c.scrollBottom(!0)})}function h(){r.getMessages(m._id,w.params).then(function(t){console.log("get messages"),console.log(t),e.forEach(t.data.docs,function(e){w.messageList.unshift(e)}),f()}).catch(function(e){console.log(e)}).finally(function(){f(),t.$broadcast("scroll.refreshComplete"),p.hide()})}function v(){a.emit("addToMessagetRoom",{roomId:m._id}),a.on("roomMessageReceived",function(e){w.messageList.push(e),f(),w.messageLoading=!1})}var w=this;w.currentUser=s.getUser()._id,w.messageList=[],w.messageRoom=m,w.loadMoreMessages=g,w.scrollBottom=f,w.messageLoading=!1,w.formatMessageDate=function(e){return window.moment(e).format(" MMM Do, h:mm a")},w.params={page:1,limit:5},function(){p.show(),h(),v()}(),w.clickSubmit=function(e){w.messageLoading=!0,w.focusInput=!0,window.cordova&&(window.cordova.plugins.Keyboard.show(),window.cordova.plugins.Keyboard.isVisible=!0);var t={message:w.myMsg,roomId:w.messageRoom._id};r.sendMessage(t).then(function(e){w.myMsg="",f()}).catch(function(e){console.log(e)}).finally(function(){w.messageLoading=!1}),e.preventDefault()},w.submitUpload=function(){w.messageLoading=!0,w.file.upload=u.upload({url:i.baseURL+"upload/singleUpload",data:{file:w.file}}),w.file.upload.then(function(e){w.file.result=e.data,w.uploadedImage=e.data,w.cancelUpload();var t={message:w.uploadedImage,roomId:w.messageRoom._id,type:"img"};r.sendMessage(t).then(function(e){f(),w.messageLoading=!1}).catch(function(e){console.log(e)})})},w.cancelUpload=function(){w.showTempImage=!1,w.tempImageUrl=""},w.uploadSingleImage=function(e,t){w.file=e,w.errFile=t&&t[0],e&&(w.showTempImage=!0,w.tempImageUrl=e,f())},w.leaveMessageRoom=function(){a.emit("removeFromMessageRoom",{roomId:w.messageRoom._id}),d.history.back()}}e.module("petal.message").controller("MessageRoomController",["$scope","$timeout","Socket","$stateParams","userData","homeService","messageRoomService","$ionicScrollDelegate","userService","Upload","$ionicLoading","$window","messageRoom",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n){var s=this;!function(){s.messageRoom={}}(),s.leaveMessageCreate=function(){n.history.back()},s.messageRoomPage=function(e){t.go("messageRoom",{roomId:e._id})},s.createMessageRoom=function(){o.createMessageRoom(s.messageRoom).then(function(e){s.messageRoomPage(e.data.savedMessageRoom),console.log(e)}).catch(function(e){console.log("error response"),window.alert(e.data.Message)})},s.loadRandomImages=function(e){s.loadingRandomImage=!0,s.randomImages=[],a.getImages(e).then(function(e){s.randomImages=e.data,s.loadingRandomImage=!1}).catch(function(e){console.log("images err"),console.log(e)})},s.selectRandomImage=function(e){s.messageRoom.messageRoomImage=e},s.cancelUpload=function(){s.messageRoom.imageId&&a.deleteUpload(s.messageRoom.imageId).then(function(e){s.messageRoom.messageRoomImage="",s.messageRoom.imageId=""})},s.submitUpload=function(e,t){s.post.imageId&&s.cancelUpload(),s.loadingImage=!0,s.file=e,s.errFile=t&&t[0],s.file&&a.submitUpload(s.file).then(function(e){s.messageRoom.messageRoomImage=e.data.image,s.messageRoom.imageId=e.data.imageId,s.loadingImage=!1})}}e.module("petal.message").controller("MessageRoomCreateController",["$scope","$state","messageRoomService","homeService","$window",t])}(window.angular),function(e){"use strict";function t(t,o,a,n,s){function i(e){var t={};t.newMessage=!0,t.lastMessage={_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.messageRoomsList.length;o++)if(t.creator2._id==p.messageRoomsList[o].creator2._id&&t.lastMessage._id!==p.messageRoomsList[o].lastMessage._id)return p.messageRoomsList.splice(o,1),void p.messageRoomsList.unshift(t)}function r(){u()}function c(){p.params.page+=1,l()}function l(){a.getMessageRooms().then(function(t){e.forEach(t.data.docs,function(e){p.messageRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.messageRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.messageRoomsList=[],l()}var p=this;p.getAllMessageRooms=l,p.loadMoreMessages=c,p.pullRefreshMessages=r,u(),s.on("newRoomMessageReceived",i),p.messageRoomPage=function(e){o.go("messageRoom",{roomId:e._id})}}e.module("petal.message").controller("MessageRoomListController",["$scope","$state","messageRoomService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(t,o,a){return{restrict:"A",scope:{messageRoomListModal:"@"},link:function(n,s){function i(){n.messageRoomListData.messageRoomsList=[];var e={interest:n.messageRoomListData.messageRoomSearchModal,page:1,limit:50};n.getMessageRooms(e)}function r(){return o.fromTemplateUrl("app/message/views/messageRoomListModal.html",{scope:n}).then(function(e){n.modal=e})}n.messageRoomListData={},n.messageRoomListData.messageRoomsList=[],n.modalsList=[],n.clickMessageRoomSearch=i,n.showMessageRoomModal=function(){r().then(function(){n.modal.show()}),n.$on("modal.hidden",function(){n.modal.remove()})},t.$on("$stateChangeStart",function(){n.modal&&n.modal.remove()}),n.getMessageRooms=function(t){a.getAllMessageRooms(t).then(function(t){n.messageRoomListData.messageRoomsList=[],e.forEach(t.data.docs,function(e){n.messageRoomListData.messageRoomsList.push(e)}),n.messageRoomListData.noMessageRooms=!t.data.total,n.messageRoomListData.initialSearchCompleted=!0,t.data.total>n.messageRoomListData.messageRoomsList.length?n.messageRoomListData.canLoadMoreResults=!0:n.messageRoomListData.canLoadMoreResults=!1})},s.bind("click",function(e){var t={page:1,limit:50};n.showMessageRoomModal(),e.stopPropagation(),n.getMessageRooms(t)})}}}e.module("petal.message").directive("messageRoomListModal",["$rootScope","$ionicModal","messageRoomService",t])}(window.angular),function(e){"use strict";function t(e,t,o){return{restrict:"A",scope:{messageRoomId:"@messageRoomId"},link:function(a,n){function s(e){t.fromTemplateUrl("app/message/views/messageRoomSettings.html",{scope:a}).then(function(t){a.popover=t,a.popover.show(e)}).catch(function(e){window.console.log("error pops"),window.console.log(e)})}a.openMessageSettings=s,n.bind("click",function(e){a.openMessageSettings(e)}),a.leaveRoom=function(){e.leaveMessageRoom(a.messageRoomId).then(function(){a.popover.remove(),o.history.back()}).catch(function(e){window.console.log(e),o.history.back()})}}}}e.module("petal.message").directive("messageRoomSettings",["messageRoomService","$ionicPopover","$window",t])}(window.angular),function(e){"use strict";function t(e,t,o){function a(t){return e.post(o.baseURL+"message/create/"+t.roomId,t)}function n(t,a){return e.get(o.baseURL+"message/getMessages/"+t,{params:a})}function s(t){return e.get(o.baseURL+"messageRoom/getRoom/",{params:t})}function i(t){return e.post(o.baseURL+"messageRoom/createRoom",{messageRoom:t})}function r(t){return e.post(o.baseURL+"messageRoom/leaveRoom/",{messageRoomId:t})}function c(){return e.get(o.baseURL+"messageRoom/getRooms/")}function l(t){return e.get(o.baseURL+"messageRoom/getAllRooms",{params:t})}var u=this;u.sendMessage=a,u.getMessages=n,u.getMessageRoom=s,u.createMessageRoom=i,u.getMessageRooms=c,u.leaveMessageRoom=r,u.getAllMessageRooms=l}e.module("petal.message").service("messageRoomService",["$http","$stateParams","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,a,n){function s(){u()}function i(){p.peopleSearchText="",p.showSearchCross=!1,u()}function r(e){p.showSearchCross=!0,e&&(p.peopleSearchText=e),u()}function c(){p.params.page+=1,l()}function l(){a.getAllUsers(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.peopleList.push(e)}),p.initialSearchCompleted=!0,t.data.total>p.peopleList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.peopleList=[],p.params={limit:25,page:1},p.peopleSearchText&&(p.params.interest=p.peopleSearchText),l()}var p=this;p.getAllPeople=l,p.pullRefreshPeople=s,p.loadMorePeople=c,p.searchCrossSubmit=i,p.peopleSearchTextSubmit=r,u()}e.module("petal.people").controller("AllPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,a,n){function s(){l()}function i(){u.params.page+=1,c()}function r(){l()}function c(){a.getNearbyUsers(u.params).then(function(o){e.forEach(o.data.docs,function(e){u.peopleList.push(e)}),u.noPeople=!o.data.total,u.initialSearchCompleted=!0,o.data.total>u.peopleList.length?u.canLoadMoreResults=!0:u.canLoadMoreResults=!1,t.$broadcast("scroll.infiniteScrollComplete")}).catch(function(e){console.log(e)}).finally(function(){u.initialSearchCompleted=!0,t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function l(){u.canLoadMoreResults=!1,u.initialSearchCompleted=!1,u.peopleList=[],u.params={limit:25,page:1,distance:u.distance},c()}var u=this;u.getNearbyPeople=c,u.pullRefreshPeople=s,u.loadMorePeople=i,u.releaseRange=r,u.distance=10,l()}e.module("petal.people").controller("NearbyPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.people").controller("PeopleParentController",[t])}(window.angular),function(e){"use strict";function t(t,o,a,n){function s(){c()}function i(){l.params.page+=1,r()}function r(){a.getReceivedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.noPeople=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:10,page:1},r()}var l=this;l.getReceivedPeople=r,l.pullRefreshPeople=s,l.loadMorePeople=i,c()}e.module("petal.people").controller("ReceivedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,a,n){function s(){c()}function i(){l.params.page+=1,r()}function r(){a.getRequestedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:25,page:1},r()}
var l=this;l.getRequestedPeople=r,l.pullRefreshPeople=s,l.loadMorePeople=i,c()}e.module("petal.people").controller("RequestedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,a,n){function s(){c()}function i(){l.params.page+=1,r()}function r(){a.getRevealedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.noPeople=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:25,page:1},r()}var l=this;l.getRevealedPeople=r,l.pullRefreshPeople=s,l.loadMorePeople=i,c()}e.module("petal.people").controller("RevealedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"E",templateUrl:"app/people/views/peopleListTemplate.html",replace:!0,scope:{listType:"@listType",peopleList:"=peopleList",peopleSearchTextSubmit:"&peopleSearchTextSubmit"},controller:["$scope",function(t){t.currentUser=e.getUser(),t.setPeopleSearch=function(e,o){t.peopleSearchTextSubmit&&(t.peopleSearchTextSubmit({interest:e}),o.stopPropagation())},t.removeAfterDecided=function(e){t.peopleList.splice(e,1)}}]}}e.module("petal.people").directive("peopleList",["userData",t])}(window.angular),function(e){"use strict";function t(t,o,a){return{restrict:"A",scope:{peopleSearchModal:"@"},link:function(n,s){function i(){n.peopleSearchData.peopleList=[];var e={interest:n.peopleSearchData.peopleSearchModal,page:1,limit:50};n.getPeople(e)}function r(){return o.fromTemplateUrl("app/people/views/peopleSearchModal.html",{scope:n}).then(function(e){n.modal=e})}n.peopleSearchData={},n.peopleSearchData.peopleSearchModal=n.peopleSearchModal,n.peopleSearchData.peopleList=[],n.modalsList=[],n.clickPeopleSearch=i,n.showPeopleModal=function(){r().then(function(){n.modal.show()}),n.$on("modal.hidden",function(){n.modal.remove()})},t.$on("$stateChangeStart",function(){n.modal&&n.modal.remove()}),n.getPeople=function(t){a.getAllUsers(t).then(function(t){e.forEach(t.data.docs,function(e){n.peopleSearchData.peopleList.push(e)}),n.peopleSearchData.noPeople=!t.data.total,n.peopleSearchData.initialSearchCompleted=!0,t.data.total>n.peopleSearchData.peopleList.length?n.peopleSearchData.canLoadMoreResults=!0:n.peopleSearchData.canLoadMoreResults=!1})},s.bind("click",function(e){var t={interest:n.peopleSearchData.peopleSearchModal,page:1,limit:50};n.showPeopleModal(),e.stopPropagation(),n.getPeople(t)})}}}e.module("petal.people").directive("peopleSearchModal",["$rootScope","$ionicModal","peopleService",t])}(window.angular),function(e){"use strict";function t(t,o){return{restrict:"E",templateUrl:"app/people/views/receivedPeopleList.html",replace:!0,controllerAs:"rpc",scope:{},controller:["$scope",function(a){function n(){t.getReceivedUsers(i.params).then(function(t){e.forEach(t.data.docs,function(e){i.peopleList.push(e)}),i.noPeople=!t.data.total,i.initialSearchCompleted=!0,t.data.total>i.peopleList.length?i.canLoadMoreResults=!0:i.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){a.$broadcast("scroll.infiniteScrollComplete"),o.hide()})}function s(){i.params.page+=1,n()}var i=this;i.getReceivedPeople=n,i.loadMorePeople=s,function(){i.canLoadMoreResults=!1,i.initialSearchCompleted=!1,i.peopleList=[],i.params={limit:10,page:1},n()}()}]}}e.module("petal.people").directive("receivedPeopleList",["peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o){return{restrict:"E",templateUrl:"app/people/views/requestedPeopleList.html",replace:!0,controllerAs:"rpc",scope:{},controller:["$scope",function(a){function n(){t.getRequestedUsers(i.params).then(function(t){e.forEach(t.data.docs,function(e){i.peopleList.push(e)}),i.noPeople=!t.data.total,i.initialSearchCompleted=!0,t.data.total>i.peopleList.length?i.canLoadMoreResults=!0:i.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){a.$broadcast("scroll.infiniteScrollComplete"),o.hide()})}function s(){i.params.page+=1,n()}var i=this;i.getRequestedPeople=n,i.loadMorePeople=s,function(){i.canLoadMoreResults=!1,i.initialSearchCompleted=!1,i.peopleList=[],i.params={limit:10,page:1},n()}()}]}}e.module("petal.people").directive("requestedPeopleList",["peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o){return{restrict:"A",scope:{deleteChat:"@",afterCallback:"&"},link:function(a,n){n.bind("click",function(n){e.show({titleText:"Delete ",buttons:[{text:'<i class="icon ion-share"></i> Delete Chat '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.deleteChatRoom(a.deleteChat).then(function(e){a.afterCallback&&a.afterCallback(),window.alert(e.data),o.go("home.chat.all")}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function o(e){return{scope:{userBlock:"@",chatDelete:"@",blockId:"@"},link:function(t,o){t.userBlock="true"===t.userBlock,t.afterCallback=function(){t.popover.remove(),window.history.back()},o.bind("click",function(o){e.fromTemplateUrl("app/user/views/settingsTemplate.html",{scope:t}).then(function(e){t.popover=e,t.popover.show(o)}),o.stopPropagation()})}}}function a(e){return{scope:{chatPage:"@"},link:function(t,o){o.bind("click",function(o){e.go("chatBox",{user:t.chatPage}),o.stopPropagation()})}}}function n(e){return{scope:{userPage:"@"},link:function(t,o){o.bind("click",function(o){e.go("home.userPage",{user:t.userPage}),o.stopPropagation()})}}}function s(e,t){return{restrict:"A",scope:{afterCallback:"&",cancelReveal:"@"},link:function(o,a){a.bind("click",function(a){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Cancel Reveal Request'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.cancel(o.cancelReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),a.stopPropagation()})}}}function i(e,t){return{restrict:"A",scope:{afterCallback:"&",decideReveal:"@"},link:function(o,a){a.bind("click",function(a){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Accept Reveal Request'},{text:'<i class="icon ion-share"></i> Deny Reveal Request'}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e?t.accept(o.decideReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}):1===e&&t.ignore(o.decideReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),a.stopPropagation()})}}}function r(e,t){return{restrict:"A",scope:{afterCallback:"&",deleteReveal:"@"},link:function(o,a){a.bind("click",function(a){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Delete Reveal '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.finish(o.deleteReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),a.stopPropagation()})}}}function c(e,t){return{restrict:"A",scope:{afterCallback:"&",sendReveal:"@"},link:function(o,a){a.bind("click",function(a){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Send Reveal Request'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.initiate(o.sendReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),a.stopPropagation()})}}}function l(e,t){return{restrict:"A",scope:{createBlock:"@",afterCallback:"&"},link:function(o,a){a.bind("click",function(a){e.show({titleText:"Block User",buttons:[{text:'<i class="icon ion-share"></i> Block'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.create(o.createBlock).then(function(e){window.alert("user blocked"),o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),a.stopPropagation()})}}}function u(e,t){return{restrict:"A",scope:{afterCallback:"&",deleteBlock:"@"},link:function(o,a){a.bind("click",function(a){e.show({titleText:"Block",buttons:[{text:'<i class="icon ion-share"></i> Unblock User '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.remove(o.deleteBlock).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),a.stopPropagation()})}}}e.module("petal.people").directive("cancelReveal",["$ionicActionSheet","revealService",s]).directive("decideReveal",["$ionicActionSheet","revealService",i]).directive("deleteReveal",["$ionicActionSheet","revealService",r]).directive("sendReveal",["$ionicActionSheet","revealService",c]).directive("createBlock",["$ionicActionSheet","blockService",l]).directive("deleteBlock",["$ionicActionSheet","blockService",u]).directive("deleteChat",["$ionicActionSheet","chatService","$state",t]).directive("chatPage",["$state",a]).directive("userSettings",["$ionicPopover",o]).directive("userPage",["$state",n])}(window.angular),function(e){"use strict";function t(e,t,o,a){function n(o){return o.all=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function s(o){return o.revealed=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function i(o){return o.received=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function r(o){return o.requested=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function c(o,a){e.get(t.baseURL+"user/getUsers",{params:a}).then(function(e){o.resolve(e)}).catch(function(e){o.reject(e)})}function l(n){1==n.page&&o.setUserLocation(),n.nearby=!0;var s=a.defer();return o.getUserLocation().then(function(o){n.latitude=o.latitude,n.longitude=o.longitude,e.get(t.baseURL+"user/getUsers",{params:n}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}).catch(function(e){window.console.log(e),c(s,n)}),s.promise}this.getAllUsers=n,this.getRevealedUsers=s,this.getNearbyUsers=l,this.getRequestedUsers=r,this.getReceivedUsers=i,this.getNearbyUsers=l}e.module("petal.people").service("peopleService",["$http","homeService","userLocationService","$q",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.get(t.baseURL+"upvote/get/"+o)}function a(o){return e.post(t.baseURL+"upvote/create/"+o)}function n(o){return e.post(t.baseURL+"upvote/delete/"+o)}this.createUpvote=a,this.deleteUpvote=n,this.getUpvote=o}e.module("petal.post").service("upvoteService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,a,n){function s(){u()}function i(){p.postSearchText="",p.showSearchCross=!1,u()}function r(e){p.showSearchCross=!0,e&&(p.postSearchText=e),p.postSearchText&&u()}function c(){p.params.page+=1,l()}function l(){p.noPosts=!1,a.getAllPosts(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.postsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.postsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).catch(function(e){}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.postsList=[],p.params={limit:5,page:1},p.postSearchText&&(p.params.interest=p.postSearchText),l()}var p=this;p.getAllPosts=l,p.pullRefreshPosts=s,p.loadMorePosts=c,p.postSearchTextSubmit=r,p.searchCrossSubmit=i,p.params={limit:3,page:1},u()}e.module("petal.post").controller("AllPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n){function s(){a.show(),o.submitPost(i.post).then(function(e){a.hide(),t.go("home.post.latest")}).catch(function(e){console.log("post controller error"),console.log(e)}).finally(function(){a.hide()})}var i=this;i.submitPost=s,i.post={},a.hide(),i.goBack=function(){window.history.back()},e.$watch(function(){return i.post.content},function(e,t){e&&e.length>300&&(i.post.content=t)}),i.selectRandomImage=function(e){i.post.image=e},i.loadRandomImages=function(e){i.loadingRandomImage=!0,i.randomImages=[],n.getImages(e).then(function(e){i.randomImages=e.data,i.loadingRandomImage=!1}).catch(function(e){console.log("images err"),console.log(e)})},i.cancelUpload=function(){i.post.imageId&&n.deleteUpload(i.post.imageId).then(function(e){i.post.image="",i.post.imageId=""})},i.submitUpload=function(e,t){i.post.imageId&&i.cancelUpload(),i.loadingImage=!0,i.file=e,i.errFile=t&&t[0],i.file&&n.submitUpload(i.file).then(function(e){i.post.image=e.data.image,i.post.imageId=e.data.imageId,i.loadingImage=!1})}}e.module("petal.post").controller("CreatePostController",["$scope","$state","postService","$ionicLoading","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,a,n){function s(){c()}function i(){l.params.page+=1,r()}function r(){a.getLatestPosts(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.postsList.push(e)}),l.noPosts=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.postsList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.postsList=[],l.params={limit:3,page:1},r()}var l=this;l.getLatestPosts=r,l.pullRefreshPosts=s,l.loadMorePosts=i,c()}e.module("petal.post").controller("LatestPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,a,n){function s(){l()}function i(){l()}function r(){u.params.page+=1,c()}function c(){a.getNearbyPosts(u.params).then(function(t){e.forEach(t.data.docs,function(e){u.postsList.push(e)}),u.noPosts=!t.data.total,u.initialSearchCompleted=!0,t.data.total>u.postsList.length?u.canLoadMoreResults=!0:u.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide(),u.initialSearchCompleted=!0})}function l(){u.canLoadMoreResults=!1,u.initialSearchCompleted=!1,u.postsList=[],u.params={limit:10,page:1,distance:u.distance},c()}var u=this;u.getNearbyPosts=c,u.pullRefreshPosts=s,u.loadMorePosts=r,u.releaseRange=i,u.distance=10,l()}e.module("petal.post").controller("NearbyPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,a,n){function s(){c()}function i(){l.params.page+=1,r()}function r(){a.getPopularPosts(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.postsList.push(e)}),t.data.total||(l.noPosts=!0),l.initialSearchCompleted=!0,t.data.total>l.postsList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),n.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.postsList=[],l.params={limit:3,page:1},r()}var l=this;l.getPopularPosts=r,l.pullRefreshPosts=s,l.loadMorePosts=i,c()}e.module("petal.post").controller("PopularPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(){var e=this;e.fabContainerShown=!1,e.showFabContainer=function(){e.fabContainerShown=!e.fabContainerShown}}e.module("petal.post").controller("PostParentController",[t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n,s){function i(){o.getPost(a.id).then(function(e){p.post=e.data,p.distanceObj={latitude:p.post.loc[1],longitude:p.post.loc[0],diatance:0},u()})}function r(){s.getUpvote(p.currentPost).then(function(e){p.postUpvoted=e.data||!1}).catch(function(e){console.log(e)})}function c(){s.createUpvote(p.currentPost).then(function(e){r()}).catch(function(e){console.log(e)})}function l(){s.deleteUpvote(p.currentPost).then(function(e){r()}).catch(function(e){console.log(e)})}function u(){o.getDistance(p.distanceObj)}var p=this;p.getSinglePost=i,p.submitPostUpvote=c,p.deletePostUpvote=l,p.getPostDistance=u,p.back=function(){window.history.back()},function(){p.currentPost=a.id,i(),r()}()}e.module("petal.post").controller("SinglePostController",["$scope","$state","postService","$stateParams","$ionicHistory","upvoteService",t])}(window.angular),function(e){"use strict";function t(t,o,a){return{restrict:"A",scope:{postSearchModal:"@"},link:function(n,s){function i(){n.postSearchData.postsList=[];var e={interest:n.postSearchData.postSearchModal,page:1,limit:50};n.getPosts(e)}function r(){return o.fromTemplateUrl("app/post/views/postSearchModal.html",{scope:n}).then(function(e){n.modal=e})}n.postSearchData={},n.postSearchData.postSearchModal=n.postSearchModal,n.postSearchData.postsList=[],n.modalsList=[],n.clickPostSearch=i,n.showPostModal=function(){r().then(function(){n.modal.show()}),n.$on("modal.hidden",function(){n.modal.remove()})},t.$on("$stateChangeStart",function(){n.modal&&n.modal.remove()}),n.getPosts=function(t){a.getAllPosts(t).then(function(t){e.forEach(t.data.docs,function(e){n.postSearchData.postsList.push(e)}),n.postSearchData.noPosts=!t.data.total,n.postSearchData.initialSearchCompleted=!0,t.data.total>n.postSearchData.postsList.length?n.postSearchData.canLoadMoreResults=!0:n.postSearchData.canLoadMoreResults=!1})},s.bind("click",function(e){var t={interest:n.postSearchData.postSearchModal,page:1,limit:50};n.showPostModal(),e.stopPropagation(),n.getPosts(t)})}}}e.module("petal.post").directive("postSearchModal",["$rootScope","$ionicModal","postService",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n,s){return{restrict:"E",templateUrl:"app/post/views/postsListTemplate.html",scope:{postsList:"=postsList",postSearchTextSubmit:"&postSearchTextSubmit"},replace:!0,link:function(n){function i(e){n.modal.hide(),t.go("home.userPage",{user:e})}function r(){return s.fromTemplateUrl("app/post/views/postModal.html",{scope:n}).then(function(e){n.modal=e})}n.getTime=function(e){return moment(e).fromNow()},n.currentUser=o.getUser(),n.userPage=i,n.postModal={},n.postModal.userPage=i,n.postModal.currentUser=n.currentUser,n.postModal.deletePost=function(){n.postModal.post.user._id===n.currentUser._id&&a.deletePost(n.postModal.post._id).then(function(){for(var e=n.postsList.length,t=0;t<e;t++)if(console.log("hit"+t),n.postsList[t]._id==n.postModal.post._id){console.log("hit delete"+t),n.postsList.splice(t,1),n.modal.remove();break}})},n.$on("$destroy",function(){n.modal&&n.modal.remove()}),e.$on("$stateChangeStart",function(){n.modal&&n.modal.remove()}),n.showPostModal=function(e){n.postModal.post=e,n.postModal.post.views+=1,r().then(function(){n.modal.show()}),n.$on("modal.hidden",function(){n.modal.remove()})}}}}e.module("petal.post").directive("postsList",["$rootScope","$state","userData","postService","upvoteService","$ionicModal",t])}(window.angular),function(e){"use strict";function t(e,t,o){return{restrict:"E",templateUrl:"app/post/views/postUpvoteTemplate.html",scope:{postId:"=postId",upvotesLength:"=upvotesLength"},replace:!0,link:function(e){function o(){t.getUpvote(e.postId).then(function(t){e.postUpvoted=t.data,e.loadingUpvote=!1}).catch(function(e){console.log("check error"),console.log(e)})}function a(){e.postUpvoted=!0,t.createUpvote(e.postId).then(function(){e.upvotesLength+=1}).catch(function(e){console.log("submit error"),console.log(e)})}function n(){e.postUpvoted=!1,t.deleteUpvote(e.postId).then(function(){e.upvotesLength-=1}).catch(function(e){window.alert(e)})}e.checkPostUpvote=o,e.submitPostUpvote=a,e.deletePostUpvote=n,function(){e.loadingUpvote=!0,o()}()}}}e.module("petal.post").directive("postUpvote",["$state","upvoteService","$timeout",t])}(window.angular),function(e){"use strict";function t(e,t,o,a){function n(o){return e.get(t.baseURL+"post/getPosts",{params:o})}function s(o,a){e.get(t.baseURL+"post/getPosts",{params:a}).then(function(e){console.log("without position"),o.resolve(e)}).catch(function(e){o.reject(e)})}function i(n){n.nearby=!0;var i=a.defer();return 1==n.page&&o.setUserLocation(),o.getUserLocation().then(function(o){n.latitude=o.latitude,n.longitude=o.longitude,e.get(t.baseURL+"post/getPosts",{params:n}).then(function(e){i.resolve(e)}).catch(function(e){i.reject(e)})}).catch(function(e){window.console.log(e),s(i,n)}),i.promise}function r(o){return o.sort="-time",e.get(t.baseURL+"post/getPosts",{params:o})}function c(o){return o.sort="-upvotesLength",e.get(t.baseURL+"post/getPosts",{params:o})}function l(n){var s=a.defer();return o.getUserLocation().then(function(o){n.latitude=o.latitude,n.longitude=o.longitude,e.post(t.baseURL+"post/create",{post:n}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}).catch(function(o){e.post(t.baseURL+"post/create",{post:n}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}),s.promise}function u(o){return e.delete(t.baseURL+"post/delete/"+o)}function p(o){return e.get(t.baseURL+"post/get/"+o)}function d(e){var t=a.defer(),n=e.latitude,s=e.longitude;return o.getUserLocation().then(function(e){var o=e.latitude,a=e.longitude,i=m(o-n),r=m(a-s),c=Math.sin(i/2)*Math.sin(i/2)+Math.cos(m(n))*Math.cos(m(o))*Math.sin(r/2)*Math.sin(r/2),l=2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),u=6371*l;t.resolve(Math.ceil(u))}).catch(function(e){console.log(e)}),t.promise}function m(e){return e*(Math.PI/180)}this.getAllPosts=n,this.getNearbyPosts=i,this.getLatestPosts=r,this.getPopularPosts=c,this.submitPost=l,this.deletePost=u,this.getPost=p,this.getDistance=d}e.module("petal.post").service("postService",["$http","homeService","userLocationService","$q",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n,s,i){function r(){l.user=a.getUser(),e.editForm.user=l.user,e.editForm.user.gender=l.user.gender||"Other",l.user.interests.length&&(e.editForm.user.interests="#"+l.user.interests.join("#"))}function c(){i.hide(),e.editForm={},r()}var l=this;l.activate=c,c(),e.editForm.submitUser=function(){i.show(),n.updateUser(e.editForm.user).then(function(e){window.alert("updated user"),t.go("home.user.userMePage")}).catch(function(e){}).finally(function(){a.setUser(),i.hide()})},e.editForm.uploadUserPicture=function(t,a){e.loadingImage=!0,l.file=t,l.errFile=a&&a[0],t&&(l.file.upload=s.upload({url:o.baseURL+"upload/singleUpload",data:{file:l.file}}),l.file.upload.then(function(t){l.file.result=t.data,e.editForm.user.picture=t.data,e.loadingImage=!1}))}}e.module("petal.user").controller("UserEditPageController",["$scope","$state","homeService","userData","userService","Upload","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n,s,i,r){function c(e){i.open("https://www.facebook.com/"+e,"_system")}function l(){a.setUser().then(function(){w.user=a.getUser()}).catch(function(e){window.console.log(e)}).finally(function(){r.hide()})}function u(){w.params={page:1,limit:100,user:a.getUser()._id},s.getLatestPosts(w.params).then(function(e){w.postsList=e.data.docs})}function p(e){w.activeTab=e}function d(e){return e===w.activeTab}function m(e){w.subActiveTab=e}function g(e){return e===w.subActiveTab}function f(){o.logout(),t.go("authenticate")}function h(){l(),v(),e.$broadcast("scroll.refreshComplete"),u()}function v(){n.getRequestedUsers({page:1,limit:25}).then(function(e){w.peopleList=e.data.docs,w.total=e.data.total})}var w=this;w.logout=f,w.activate=h,w.activeTab=1,w.activateTab=p,w.isTabActive=d,w.subActiveTab=1,w.subActivateTab=m,w.isSubTabActive=g,w.openFacebook=c,h()}e.module("petal.user").controller("UserMePageController",["$scope","$state","$auth","userData","peopleService","postService","$window","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n,s,i,r,c){function l(e){r.open("https://www.facebook.com/"+e,"_system")}function u(e){r.open("https://plus.google.com/"+e,"_system")}function p(){v.params={page:1,limit:100,user:n.user},i.getLatestPosts(v.params).then(function(e){v.postsList=e.data.docs})}function d(e){v.activeTab=e}function m(e){return e===v.activeTab}function g(){a.check(n.user).then(function(e){v.revealChoice=e.data.status})}function f(){r.history.back()}function h(){o.getUser(n.user).then(function(e){v.user=e.data}).catch(function(e){}).finally(function(){c.hide()})}var v=this;v.checkReveal=g,v.goBack=f,v.activateTab=d,v.isTabActive=m,v.openFacebook=l,v.openGoogle=u,function(){h(),v.revealChoice=s,v.activeTab=1,p()}()}e.module("petal.user").controller("UserPageController",["$state","$auth","userService","revealService","$stateParams","friends","postService","$window","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o){alert(o)}e.module("petal.user").controller("UserPagePostsController",["$state","$stateParams","friends",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.user").controller("UserParentController",[t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"E",replace:!0,templateUrl:"app/user/views/blockedList.html",link:function(t){t.afterCallback=function(e){t.peopleList.splice(e,1)},e.getBlocks().then(function(e){window.console.log(e),t.peopleList=e.data})}}}e.module("petal.user").directive("blockedList",["blockService",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.post(t.baseURL+"block/create",{secondUser:o})}function a(o){return e.post(t.baseURL+"block/delete",{secondUser:o})}function n(o){return e.get(t.baseURL+"block/get/"+o)}function s(){return e.get(t.baseURL+"block/getBlocks/")}this.create=o,this.remove=a,this.getBlocks=s,this.check=n}e.module("petal.user").service("blockService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(e,t){function o(e){return{secondUser:e}}function a(o){return e.post(t.baseURL+"reveal/initiate",{secondUser:o})}function n(o){return e.post(t.baseURL+"reveal/accept",{secondUser:o})}function s(o){return e.post(t.baseURL+"reveal/ignore",{secondUser:o})}function i(o){return e.post(t.baseURL+"reveal/cancel",{secondUser:o})}function r(a){var n=o(a);return e.get(t.baseURL+"reveal/received",{params:n})}function c(a){var n=o(a);return e.get(t.baseURL+"reveal/requested",{params:n})}function l(a){var n=o(a);return e.get(t.baseURL+"reveal/revealed",{params:n})}function u(o){return e.post(t.baseURL+"reveal/finish",{secondUser:o})}function p(a){var n=o(a);return e.get(t.baseURL+"reveal/check",{params:n})}this.initiate=a,this.accept=n,this.ignore=s,this.cancel=i,this.received=r,this.requested=c,this.revealed=l,this.finish=u,this.check=p}e.module("petal.user").service("revealService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o,a,n){function s(){var t=o.defer(),n={timeout:3e3,enableHighAccuracy:!1};return e.getCurrentPosition(n).then(function(e){var o={latitude:e.coords.latitude,longitude:e.coords.longitude};t.resolve(o)}).catch(function(){a.post("https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyA5bqvCp1wYX7FGKiDyd3w0DzvJZoPwQrQ").then(function(e){var o={latitude:e.data.location.lat,longitude:e.data.location.lng};t.resolve(o)}).catch(function(e){window.console.log("error from google"),window.console.log(e),t.reject("Not able to acces your location.Make sure location is enabled.")})}),t.promise}function i(){var o={timeout:3e3,enableHighAccuracy:!1};e.getCurrentPosition(o).then(function(e){var o={latitude:e.coords.latitude,longitude:e.coords.longitude};t.updateUser(o)}).catch(function(e){a.post("https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyA5bqvCp1wYX7FGKiDyd3w0DzvJZoPwQrQ").then(function(e){var o={latitude:e.data.location.lat,longitude:e.data.location.lng};t.updateUser(o)}).catch(function(){3==e.code?n.warning("Not able to acces your location.Make sure location is enabled.","Warning",{maxOpened:1}):2!=e.code&&1!=e.code||n.warning("Not able to acces your location.Make sure location is enabled.","Warning",{maxOpened:1})})})}this.getUserLocation=s,this.setUserLocation=i}e.module("petal.user").service("userLocationService",["$cordovaGeolocation","userService","$q","$http","toastr",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.get(t.baseURL+"user/get/"+o)}function a(o){return e.post(t.baseURL+"user/update/",{user:o})}this.updateUser=a,this.getUser=o}e.module("petal.user").service("userService",["$http","homeService",t])}(window.angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
