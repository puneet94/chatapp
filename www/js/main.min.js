!function(e){"use strict";function t(t,o,n,a){n.tabs.position("bottom"),n.scrolling.jsScrolling(!1),n.views.transition("none"),t.otherwise("/home/post/all"),e.extend(a,{autoDismiss:!0,maxOpened:1})}var o=e.module("petal",["ionic","ngAnimate","satellizer","ngFileUpload","btford.socket-io","ngCordova","toastr","petal.home","petal.post","petal.chat","petal.user","petal.people"]);o.config(["$urlRouterProvider","$stateProvider","$ionicConfigProvider","toastrConfig",t]),o.run(["$rootScope","$state","$ionicPlatform","$ionicLoading","RequestsService","$cordovaPushV5","$ionicHistory",function(e,t,o,n,a,i,s){function r(){o.registerBackButtonAction(function(t){return e.backButtonPressedOnceToExit?ionic.Platform.exitApp():s.backView()?s.goBack():(e.backButtonPressedOnceToExit=!0,window.plugins.toast.showShortCenter("Press back button again to exit",function(e){},function(e){}),window.setTimeout(function(){e.backButtonPressedOnceToExit=!1},2e3)),t.preventDefault(),!1},101)}function c(){a.register(),e.$on("$cordovaPushV5:notificationReceived",function(e,t){console.log(t),console.log(e)}),e.$on("$cordovaPushV5:errorOcurred",function(e,t){})}o.ready(function(){window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0),c(),r()),window.StatusBar&&StatusBar.styleDefault(),window.onerror=function(e,t,o){return!1},e.$on("$stateChangeStart",function(e,t,o,n){n.name}),e.$on("$stateChangeError",function(){t.go("home.post.all"),n.hide()})})}])}(window.angular),function(e){"use strict";function t(e){e.state("home.chat",{url:"/chat",abstract:!0,views:{"chat-tab":{templateUrl:"app/chat/views/chatParent.html",controller:"ChatParentController",controllerAs:"ppc"}}}).state("home.chat.all",{url:"/all",views:{"chat-tab":{templateUrl:"app/chat/views/allChat.html",controller:"AllChatController",controllerAs:"acc"}}}).state("home.chat.revealed",{url:"/revealed",views:{"chat-tab":{templateUrl:"app/chat/views/revealedChat.html",controller:"RevealedChatController",controllerAs:"rpc"}}}).state("chatBox",{url:"/chatBox/:user",templateUrl:"app/chat/views/chatBox.html",controller:"ChatBoxController",controllerAs:"cbc",resolve:{blocked:["$stateParams","blockService","$q",o]}})}function o(e,t,o){var n=o.defer();return t.check(e.user).then(function(e){n.resolve(e.data.blocked)}).catch(function(){n.resolve()}),n.promise}e.module("petal.chat",["ngFileUpload"]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("home.people",{url:"/people",abstract:!0,views:{"people-tab":{templateUrl:"app/people/views/peopleParent.html",controller:"PeopleParentController",controllerAs:"ppc"}}}).state("home.people.all",{url:"/all",views:{"people-tab":{templateUrl:"app/people/views/allPeople.html",controller:"AllPeopleController",controllerAs:"apc"}}}).state("home.people.revealed",{url:"/revealed",views:{"people-tab":{templateUrl:"app/people/views/revealedPeople.html",controller:"RevealedPeopleController",controllerAs:"rpc"}}}).state("home.people.received",{url:"/received",views:{"people-tab":{templateUrl:"app/people/views/receivedPeople.html",controller:"ReceivedPeopleController",controllerAs:"rpc"}}}).state("home.people.nearby",{url:"/nearby",views:{"people-tab":{templateUrl:"app/people/views/nearbyPeople.html",controller:"NearbyPeopleController",controllerAs:"npc"}}})}e.module("petal.people",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e,t){var n="https://banana-surprise-31332.herokuapp.com/authenticate";t.facebook({clientId:"1134208830041632",url:n+"/auth/facebook",redirectUri:"https://banana-surprise-31332.herokuapp.com/"}),t.google({clientId:"742676837265-33jntkd60p87gkrh48nqe6cdd8ntsfl5.apps.googleusercontent.com",url:n+"/auth/google",redirectUri:"http://localhost:8100"}),e.state("authenticate",{url:"/authenticate",controller:"AuthenticationController",controllerAs:"ac",templateUrl:"app/home/views/authenticationPage.html"}).state("home",{url:"/home",abstract:!0,templateUrl:"app/home/views/tabs.html",controller:"HomeController",controllerAs:"hc",resolve:{redirectIfUserNotAuthenticated:["$q","$auth","$state","$timeout",o]}})}function o(e,t,o,n){var a=e.defer();return t.isAuthenticated()?a.resolve():n(function(){o.go("authenticate")}),a.promise}e.module("petal.home",[]).config(["$stateProvider","$authProvider",t])}(window.angular),function(e){"use strict";function t(e){e.state("home.post",{url:"/post",abstract:!0,views:{"post-tab":{templateUrl:"app/post/views/postParent.html",controller:"PostParentController",controllerAs:"ppc"}}}).state("home.post.all",{url:"/all",views:{"post-tab":{templateUrl:"app/post/views/allPost.html",controller:"AllPostController",controllerAs:"apc"}}}).state("home.post.latest",{url:"/latest",views:{"post-tab":{templateUrl:"app/post/views/latestPost.html",controller:"LatestPostController",controllerAs:"lpc"}}}).state("home.post.popular",{url:"/popular",views:{"post-tab":{templateUrl:"app/post/views/popularPost.html",controller:"PopularPostController",controllerAs:"ppc"}}}).state("home.post.nearby",{url:"/nearby",views:{"post-tab":{templateUrl:"app/post/views/nearbyPost.html",controller:"NearbyPostController",controllerAs:"npc"}}}).state("postSubmit",{url:"/submit",templateUrl:"app/post/views/createPost.html",controller:"CreatePostController",controllerAs:"cpc"}).state("singlePost",{url:"/post/:id",templateUrl:"app/post/views/singlePost.html",controller:"SinglePostController",controllerAs:"spc"})}e.module("petal.post",[]).config(["$stateProvider",t])}(window.angular),function(e){"use strict";function t(e,t,o){var n=o.defer();return t.check(e.user).then(function(e){e.data.blocked===!0?(window.alert("Blocked profile"),window.history.back()):n.resolve()}).catch(function(){n.resolve()}),n.promise}function o(e,t,o){var n=o.defer();return t.check(e.user).then(function(e){n.resolve(e.data.status)}).catch(function(){}),n.promise}e.module("petal.user",[]).config(["$stateProvider",function(e){e.state("home.user",{url:"/user",abstract:!0,views:{"user-tab":{templateUrl:"app/user/views/userParentPage.html",controller:"UserParentController",controllerAs:"upc"}}}).state("home.user.userMePage",{url:"/userMePage",views:{"user-tab":{templateUrl:"app/user/views/userMePage.html",controller:"UserMePageController",controllerAs:"umpc"}}}).state("home.userPage",{url:"/userPage/:user",resolve:{blocked:["$stateParams","blockService","$q",t],friends:["$stateParams","revealService","$q",o]},views:{"extra-tab":{templateUrl:"app/user/views/userProfilePage.html",controller:"UserPageController",controllerAs:"upc"}}}).state("home.userEditPage",{url:"/userEditPage",views:{"extra-tab":{templateUrl:"app/user/views/userEditPage.html",controller:"UserEditPageController",controllerAs:"uepc"}}})}])}(window.angular),function(e){"use strict";function t(t,o,n,a,i){function s(e){var t={};t.creator2=e.user,t.newChat=!0,t.lastMessage={user:e.user._id,_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.chatRoomsList.length;o++)if(t.creator2._id==p.chatRoomsList[o].creator2._id&&t.lastMessage._id!==p.chatRoomsList[o].lastMessage._id)return p.chatRoomsList.splice(o,1),void p.chatRoomsList.unshift(t)}function r(){u()}function c(){p.params.page+=1,l()}function l(){n.getAllChatRooms(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.chatRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.chatRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.chatRoomsList=[],l()}var p=this;p.getAllChatRooms=l,p.loadMoreChats=c,p.pullRefreshChats=r,u(),i.on("newMessageReceived",s),p.chatPage=function(e){o.go("chatBox",{user:e})}}e.module("petal.chat").controller("AllChatController",["$scope","$state","chatService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(t,o,n,a,i,s,r,c,l,u,p,d,f){function h(){b.params.page+=1,v()}function g(){l.getUser(b.receiverUserID).then(function(e){b.receiverUser=e.data}).catch(function(e){console.log(e)})}function m(){o(function(){c.scrollBottom(!0)})}function v(){r.getChatMessages(b.chatRoomId,b.params).then(function(t){e.forEach(t.data.docs,function(e){b.chatList.unshift(e)})}).catch(function(e){console.log(e)}).finally(function(){m(),t.$broadcast("scroll.refreshComplete"),p.hide()})}function w(){n.emit("addToChatRoom",{roomId:b.chatRoomId}),n.on("messageReceived",function(e){b.chatList.push(e),m(),b.messageLoading=!1})}var b=this;b.isBlocked=f,b.isBlocked===!0&&window.alert("blocked profile"),b.currentUser=i.getUser()._id,b.receiverUserID=a.user,b.chatList=[],b.chatRoomId="",b.loadMoreChats=h,b.scrollBottom=m,b.messageLoading=!1,b.messageTryCount=0,b.params={page:1,limit:5},function(){p.show(),r.getChatRoom(b.receiverUserID).then(function(e){b.chatRoom=e.data,b.chatRoomId=e.data._id,w(),v()},function(e){console.log(e)}),g()}(),b.clickSubmit=function(){b.messageLoading=!0,b.focusInput=!0,window.cordova&&!window.cordova.plugins.Keyboard.isVisible&&window.cordova.plugins.Keyboard.show(),m();var e={message:b.myMsg,receiver:a.user,roomId:b.chatRoomId};r.sendChatMessage(e).then(function(e){b.myMsg="",b.chatList.push(e.data.message),m(),b.messageTryCount=0}).catch(function(e){console.log(e),b.messageTryCount+=1,b.messageTryCount<=3&&b.clickSubmit()}).finally(function(){b.messageLoading=!1})},b.submitUpload=function(){b.messageLoading=!0,b.file.upload=u.upload({url:s.baseURL+"upload/singleUpload",data:{file:b.file}}),b.file.upload.then(function(e){b.file.result=e.data,b.uploadedImage=e.data,b.cancelUpload();var t={message:b.uploadedImage,receiver:a.user,roomId:b.chatRoomId,type:"img"};r.sendChatMessage(t).then(function(e){m(),b.chatList.push(e.data.message),b.messageLoading=!1}).catch(function(e){console.log(e)})})},b.cancelUpload=function(){b.showTempImage=!1,b.tempImageUrl=""},b.uploadSingleImage=function(e,t){b.file=e,b.errFile=t&&t[0],e&&(b.showTempImage=!0,b.tempImageUrl=e,m())},b.leaveChatBox=function(){n.emit("removeFromRoom",{roomId:b.chatRoomId}),r.updateChatRoom(b.chatRoomId).then(function(e){}).catch(function(e){console.log(e)}).finally(function(){}),d.history.back()}}e.module("petal.chat").controller("ChatBoxController",["$scope","$timeout","Socket","$stateParams","userData","homeService","chatService","$ionicScrollDelegate","userService","Upload","$ionicLoading","$window","blocked",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.chat").controller("ChatParentController",[t])}(window.angular),function(e){"use strict";function t(t,o,n,a,i){function s(){u()}function r(e){var t={};t.creator2=e.user,t.newChat=!0,t.lastMessage={user:e.user._id,_id:e._id,message:e.message,type:e.type};for(var o=0;o<p.chatRoomsList.length;o++)if(t.creator2._id==p.chatRoomsList[o].creator2._id&&t.lastMessage._id!==p.chatRoomsList[o].lastMessage._id)return p.chatRoomsList.splice(o,1),void p.chatRoomsList.unshift(t)}function c(){p.params.page+=1,l()}function l(){n.getRevealedChatRooms(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.chatRoomsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.chatRoomsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.params={page:1,limit:25},p.chatRoomsList=[],l()}var p=this;p.getRevealedChatRooms=l,p.loadMoreChats=c,p.pullRefreshChats=s,u(),i.on("newMessageReceived",r)}e.module("petal.chat").controller("RevealedChatController",["$scope","$state","chatService","$ionicLoading","Socket",t])}(window.angular),function(e){"use strict";function t(e,t,o){function n(t){return e.post(o.baseURL+"chatRoom/delete/"+t)}function a(t){return e.post(o.baseURL+"chat/create/"+t.roomId,t)}function i(t,n){return e.get(o.baseURL+"chat/getChats/"+t,{params:n})}function s(t){return e.get(o.baseURL+"chatRoom/get/"+t)}function r(t){return t.revealed=!1,e.get(o.baseURL+"chatRoom/all/",{params:t})}function c(t){return t.revealed=!0,e.get(o.baseURL+"chatRoom/all/",{params:t})}function l(t){return e.post(o.baseURL+"chatRoom/update/"+t)}var u=this;u.sendChatMessage=a,u.getChatMessages=i,u.getChatRoom=s,u.getAllChatRooms=r,u.getRevealedChatRooms=c,u.updateChatRoom=l,u.deleteChatRoom=n}e.module("petal.chat").service("chatService",["$http","$stateParams","homeService",t])}(window.angular),function(e){"use strict";function t(e,t){return e({prefix:"",ioSocket:io.connect(t.baseURL)})}e.module("petal.chat").factory("Socket",["socketFactory","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o){return e({prefix:"",ioSocket:io.connect(o.baseURL+t.getUser()._id)})}e.module("petal.chat").factory("SocketUserService",["socketFactory","userData","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function i(){u()}function s(){p.peopleSearchText="",p.showSearchCross=!1,u()}function r(e){p.showSearchCross=!0,e&&(p.peopleSearchText=e),u()}function c(){p.params.page+=1,l()}function l(){n.getAllUsers(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.peopleList.push(e)}),p.initialSearchCompleted=!0,t.data.total>p.peopleList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.peopleList=[],p.params={limit:25,page:1},p.peopleSearchText&&(p.params.interest=p.peopleSearchText),l()}var p=this;p.getAllPeople=l,p.pullRefreshPeople=i,p.loadMorePeople=c,p.searchCrossSubmit=s,p.peopleSearchTextSubmit=r,u()}e.module("petal.people").controller("AllPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function i(){l()}function s(){u.params.page+=1,c()}function r(){l()}function c(){n.getNearbyUsers(u.params).then(function(o){e.forEach(o.data.docs,function(e){u.peopleList.push(e)}),u.noPeople=!o.data.total,u.initialSearchCompleted=!0,o.data.total>u.peopleList.length?u.canLoadMoreResults=!0:u.canLoadMoreResults=!1,t.$broadcast("scroll.infiniteScrollComplete")}).catch(function(e){console.log(e)}).finally(function(){u.initialSearchCompleted=!0,t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function l(){u.canLoadMoreResults=!1,u.initialSearchCompleted=!1,u.peopleList=[],u.params={limit:25,page:1,distance:u.distance},c()}var u=this;u.getNearbyPeople=c,u.pullRefreshPeople=i,u.loadMorePeople=s,u.releaseRange=r,u.distance=10,l()}e.module("petal.people").controller("NearbyPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.people").controller("PeopleParentController",[t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function i(){c()}function s(){l.params.page+=1,r()}function r(){n.getReceivedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.noPeople=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:10,page:1},r()}var l=this;l.getReceivedPeople=r,l.pullRefreshPeople=i,l.loadMorePeople=s,c()}e.module("petal.people").controller("ReceivedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function i(){c()}function s(){l.params.page+=1,r()}function r(){n.getRequestedUsers(l.params).then(function(t){console.log(t),e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:25,page:1},r()}var l=this;l.getRequestedPeople=r,l.pullRefreshPeople=i,l.loadMorePeople=s,c()}e.module("petal.people").controller("RequestedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function i(){c()}function s(){l.params.page+=1,r()}function r(){n.getRevealedUsers(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.peopleList.push(e)}),l.noPeople=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.peopleList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.peopleList=[],l.params={limit:25,page:1},r()}var l=this;l.getRevealedPeople=r,l.pullRefreshPeople=i,l.loadMorePeople=s,c()}e.module("petal.people").controller("RevealedPeopleController",["$scope","$state","peopleService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"E",templateUrl:"app/people/views/peopleListTemplate.html",replace:!0,scope:{listType:"@listType",peopleList:"=peopleList",peopleSearchTextSubmit:"&peopleSearchTextSubmit"},controller:["$scope",function(t){t.currentUser=e.getUser(),t.setPeopleSearch=function(e,o){t.peopleSearchTextSubmit&&(t.peopleSearchTextSubmit({interest:e}),o.stopPropagation())},t.removeAfterDecided=function(e){t.peopleList.splice(e,1)}}]}}e.module("petal.people").directive("peopleList",["userData",t])}(window.angular),function(e){"use strict";function t(e,t,o){return{restrict:"A",scope:{deleteChat:"@",afterCallback:"&"},link:function(n,a){a.bind("click",function(a){e.show({titleText:"Delete ",buttons:[{text:'<i class="icon ion-share"></i> Delete Chat '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.deleteChatRoom(n.deleteChat).then(function(e){n.afterCallback&&n.afterCallback(),window.alert(e.data),o.go("home.chat.all")}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),a.stopPropagation()})}}}function o(e){return{scope:{userBlock:"@",chatDelete:"@",blockId:"@"},link:function(t,o){t.userBlock="true"===t.userBlock,t.afterCallback=function(){t.popover.remove(),window.history.back()},o.bind("click",function(o){e.fromTemplateUrl("app/user/views/settingsTemplate.html",{scope:t}).then(function(e){t.popover=e,t.popover.show(o)}),o.stopPropagation()})}}}function n(e){return{scope:{chatPage:"@"},link:function(t,o){o.bind("click",function(o){e.go("chatBox",{user:t.chatPage}),o.stopPropagation()})}}}function a(e){return{scope:{userPage:"@"},link:function(t,o){o.bind("click",function(o){e.go("home.userPage",{user:t.userPage}),o.stopPropagation()})}}}function i(e,t){return{restrict:"A",scope:{afterCallback:"&",cancelReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Cancel Reveal Request'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.cancel(o.cancelReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function s(e,t){return{restrict:"A",scope:{afterCallback:"&",decideReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Accept Reveal Request'},{text:'<i class="icon ion-share"></i> Deny Reveal Request'}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e?t.accept(o.decideReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}):1===e&&t.ignore(o.decideReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function r(e,t){return{restrict:"A",scope:{afterCallback:"&",deleteReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Delete Reveal '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.finish(o.deleteReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function c(e,t){return{restrict:"A",scope:{afterCallback:"&",sendReveal:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Reveal",buttons:[{text:'<i class="icon ion-share"></i> Send Reveal Request'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.initiate(o.sendReveal).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function l(e,t){return{restrict:"A",scope:{createBlock:"@",afterCallback:"&"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Block User",buttons:[{text:'<i class="icon ion-share"></i> Block'}],cancelText:"Cancel",cancel:function(){},buttonClicked:function(e){return t.create(o.createBlock).then(function(e){window.alert("user blocked"),o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}function u(e,t){return{restrict:"A",scope:{afterCallback:"&",deleteBlock:"@"},link:function(o,n){n.bind("click",function(n){e.show({titleText:"Block",buttons:[{text:'<i class="icon ion-share"></i> Unblock User '}],cancelText:"Cancel",cancel:function(){console.log("CANCELLED")},buttonClicked:function(e){return 0===e&&t.remove(o.deleteBlock).then(function(e){o.afterCallback&&o.afterCallback()}).catch(function(e){window.alert(JSON.stringify(e))}),!0}}),n.stopPropagation()})}}}e.module("petal.people").directive("cancelReveal",["$ionicActionSheet","revealService",i]).directive("decideReveal",["$ionicActionSheet","revealService",s]).directive("deleteReveal",["$ionicActionSheet","revealService",r]).directive("sendReveal",["$ionicActionSheet","revealService",c]).directive("createBlock",["$ionicActionSheet","blockService",l]).directive("deleteBlock",["$ionicActionSheet","blockService",u]).directive("deleteChat",["$ionicActionSheet","chatService","$state",t]).directive("chatPage",["$state",n]).directive("userSettings",["$ionicPopover",o]).directive("userPage",["$state",a])}(window.angular),function(e){"use strict";function t(e,t,o,n){function a(o){return o.all=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function i(o){return o.revealed=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function s(o){return o.received=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function r(o){return o.requested=!0,e.get(t.baseURL+"user/getUsers",{params:o})}function c(o,n){e.get(t.baseURL+"user/getUsers",{params:n}).then(function(e){o.resolve(e)}).catch(function(e){o.reject(e)})}function l(a){1==a.page&&o.setUserLocation(),a.nearby=!0;var i=n.defer();return o.getUserLocation().then(function(o){a.latitude=o.latitude,a.longitude=o.longitude,e.get(t.baseURL+"user/getUsers",{params:a}).then(function(e){i.resolve(e)}).catch(function(e){i.reject(e)})}).catch(function(e){window.console.log(e),c(i,a)}),i.promise}this.getAllUsers=a,this.getRevealedUsers=i,this.getNearbyUsers=l,this.getRequestedUsers=r,this.getReceivedUsers=s,this.getNearbyUsers=l}e.module("petal.people").service("peopleService",["$http","homeService","userLocationService","$q",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.get(t.baseURL+"upvote/get/"+o)}function n(o){return e.post(t.baseURL+"upvote/create/"+o)}function a(o){return e.post(t.baseURL+"upvote/delete/"+o)}this.createUpvote=n,this.deleteUpvote=a,this.getUpvote=o}e.module("petal.post").service("upvoteService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,i,s,r){function c(e){n.setUser(e),a.setUserLocation(),s.register(),e.device_token?o.go("home.post.popular"):o.go("home.userEditPage")}function l(e){i.show(),t.authenticate(e).then(function(e){c(e.data.user)}).catch(function(e){i.hide()}).finally(function(){})}function u(){r.fromTemplateUrl("app/home/views/policy.html",{scope:e}).then(function(t){e.modal=t,e.modal.show()})}function p(){t.logout(),n.removeUser(),o.go("authenticate")}var d=this;d.isAuth=t.isAuthenticated(),d.isAuth&&o.go("home.post.all"),window.cordova&&(d.webSignIn=!0),d.authLogout=p,d.loadPostModal=u,d.socialAuthenticate=l,e.googleSignIn=function(){i.show({template:"Logging in..."}),window.plugins.googleplus.login({webClientId:"792068565007-rdm7nrlfmc29jvlqo5l0tkgu6ci0vboa.apps.googleusercontent.com"},function(e){var o={};o.id=e.userId,o.displayName=e.displayName,o.imageUrl=e.imageUrl,s.googleSignIn(o).then(function(e){t.setToken(e.data.token),c(e.data.user)}).catch(function(e){console.log("error"),console.log(e),i.hide()})},function(e){alert("missed"),console.log(e),i.hide()})}}e.module("petal.home").controller("AuthenticationController",["$scope","$auth","$state","userData","userLocationService","$ionicLoading","RequestsService","$ionicModal",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,i,s){function r(e){var n=e.message;e.type&&"img"==e.type&&(n="New image");var i=e.user.anonName||e.user.facebookName||e.user.googleName;e.user._id==o.getUser()._id||("chatBox"==t.current.name?t.params.user!=e.user._id&&a.info("<p>"+i+"</p><p>"+n+"</p>",{allowHtml:!0,onTap:function(){t.go("chatBox",{user:e.user._id})}}):(a.info("<p>"+i+"</p><p>"+n+"</p>",{allowHtml:!0,onTap:function(){t.go("chatBox",{user:e.user._id})}}),l.badgeValue=1))}function c(){l.badgeValue=""}var l=this;l.badgeValue="",l.chatClicked=c,s.slideHeader=!1,s.slideHeaderPrevious=0,n.on("connect",function(){n.emit("addToSingleRoom",{roomId:o.getUser()._id}),n.on("newMessageReceived",r)}),l.goForward=function(){var e=i.selectedIndex();e!=-1&&(1===e?i.select(e+2):i.select(e+1))},l.goBack=function(){var e=i.selectedIndex();e!==-1&&0!==e&&(3===e?i.select(e-2):i.select(e-1))}}e.module("petal.home").controller("HomeController",["$scope","$state","userData","Socket","toastr","$ionicTabsDelegate","$rootScope",t])}(window.angular),function(e){"use strict";e.module("petal.home").directive("distanceView",["postService","$timeout",function(e,t){return{restrict:"E",templateUrl:"app/home/views/distanceViewTemplate.html",scope:{positionCords:"="},replace:!0,link:function(o){function n(){o.positionCords?(o.distanceObj={latitude:o.positionCords[1],longitude:o.positionCords[0]},e.getDistance(o.distanceObj).then(function(e){o.distanceObj.distance=e+" mi"}).catch(function(e){o.distanceObj.distance=""})):(o.distanceObj={},o.distanceObj.distance="")}t(n,1e3)}}}])}(window.angular),function(e){"use strict";function t(e){return{restrict:"A",link:function(t,o){o.bind("scroll",function(t){var o=t.srcElement.scrollTop;e.slideHeader=o-0>150,e.slideHeaderPrevious>o-0&&(e.slideHeader=!1),e.slideHeaderPrevious=o-0,e.$apply()})}}}var o=function(e){return{restrict:"A",scope:{imageModal:"@"},link:function(t,o){function n(e){a().then(function(){t.currentImage=e,t.modal.show()})}function a(){return e.fromTemplateUrl("app/chat/views/chatImageModal.html",{scope:t}).then(function(e){t.modal=e})}o.bind("click",function(e){n(t.imageModal),e.stopPropagation()})}}};e.module("petal.home").directive("keepScroll",["$state","$timeout","ScrollPositions","$ionicScrollDelegate",function(e,t,o,n){return{restrict:"A",link:function(a){a.$on("$stateChangeStart",function(){o[e.current.name]=n.getScrollPosition()}),t(function(){var t;(t=o[e.current.name])&&n.scrollTo(t.left,t.top)})}}}]).factory("ScrollPositions",[function(){return{}}]).directive("isFocused",["$timeout",function(e){return{scope:{trigger:"@isFocused"},link:function(t,o){t.$watch("trigger",function(t){"true"===t&&e(function(){o[0].focus(),o.on("blur",function(){o[0].focus()})})})}}}]).directive("lazyImg",function(){return{replace:!0,template:'<div class="lazy-img"><div class="sm"><img src="{{imgSmall}}" class="small"/></div><div style="padding-bottom: 75%;"></div><img src="{{imgLarge}}" class="large"/></div>',scope:{imgLarge:"@srcLarge",imgSmall:"@srcSmall"},link:function(e,t){var o=new Image,n=new Image;o.src=e.imgSmall,o.onload=function(){t.children(".sm").find("img").css("opacity","1"),n.src=e.imgLarge,n.onload=function(){t.find("img").css("opacity","1")}}}}}).directive("imageModal",["$ionicModal",o]).directive("watchScroll",["$rootScope",t])}(window.angular),function(e){"use strict";function t(e,t){function o(t){return e.post(i.baseURL+"upload/deleteUpload",{data:{public_id:t}})}function n(t){return console.log(t),e.get(i.baseURL+"upload/getImages",{params:{imageText:t}})}function a(e){return t.upload({url:i.baseURL+"upload/singleUploadId",data:{file:e}})}this.baseURL="https://banana-surprise-31332.herokuapp.com/",this.deleteUpload=o,this.submitUpload=a,this.getImages=n;var i=this}e.module("petal.home").service("homeService",["$http","Upload",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,i){function s(){var e=o.defer(),s={android:{senderID:"679461840115",vibrate:"true"},browser:{},ios:{alert:"true",badge:"true",sound:"true"},windows:{}};return a.initialize(s).then(function(){a.onNotification(function(){console.log("insideeee notification"),console.log(arguments)}),a.onError(),i.isAuthenticated()&&a.register().then(function(o){t.post(c+"notification/register",{device_token:o}).then(function(t){e.resolve(t)}).catch(function(t){e.reject(t)}).finally(function(){n.hide()})})}),e.promise}function r(e){return t.post(c+"authenticate/auth/nativeGoogle",{profile:e})}var c=e.baseURL;return{googleSignIn:r,register:s}}e.module("petal.home").service("RequestsService",["homeService","$http","$q","$ionicLoading","$cordovaPushV5","$auth",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){var i=e.localStorage,s={},r={setUser:function(e){if(e)i.setItem("user",JSON.stringify(e));else{var t=o.getPayload().sub;if(t)return n.get(a.baseURL+"user/get/"+t).then(function(e){i.setItem("user",JSON.stringify(e.data))})}},getUser:function(){return JSON.parse(i.getItem("user"))},removeUser:function(){s=null,i.removeItem("user")},isUserExists:function(){return!!r.getUser()}};return r}e.module("petal.home").factory("userData",["$window","$state","$auth","$http","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function i(){u()}function s(){p.postSearchText="",p.showSearchCross=!1,u()}function r(e){p.showSearchCross=!0,e&&(p.postSearchText=e),p.postSearchText&&u()}function c(){p.params.page+=1,l()}function l(){p.noPosts=!1,n.getAllPosts(p.params).then(function(t){e.forEach(t.data.docs,function(e){p.postsList.push(e)}),p.noPosts=!t.data.total,p.initialSearchCompleted=!0,t.data.total>p.postsList.length?p.canLoadMoreResults=!0:p.canLoadMoreResults=!1}).catch(function(e){}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function u(){p.canLoadMoreResults=!1,p.initialSearchCompleted=!1,p.postsList=[],p.params={limit:5,page:1},p.postSearchText&&(p.params.interest=p.postSearchText),l()}var p=this;p.getAllPosts=l,p.pullRefreshPosts=i,p.loadMorePosts=c,p.postSearchTextSubmit=r,p.searchCrossSubmit=s,p.params={limit:3,page:1},u()}
e.module("petal.post").controller("AllPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){function i(){n.show(),o.submitPost(s.post).then(function(e){n.hide(),t.go("home.post.latest")}).catch(function(e){console.log("post controller error"),console.log(e)}).finally(function(){n.hide()})}var s=this;s.submitPost=i,s.post={},n.hide(),s.goBack=function(){window.history.back()},e.$watch(function(){return s.post.content},function(e,t){e&&e.length>300&&(s.post.content=t)}),s.selectRandomImage=function(e){s.post.image=e},s.loadRandomImages=function(e){s.loadingRandomImage=!0,s.randomImages=[],a.getImages(e).then(function(e){s.randomImages=e.data,s.loadingRandomImage=!1}).catch(function(e){console.log("images err"),console.log(e)})},s.cancelUpload=function(){s.post.imageId&&a.deleteUpload(s.post.imageId).then(function(e){s.post.image="",s.post.imageId=""})},s.submitUpload=function(e,t){s.post.imageId&&s.cancelUpload(),s.loadingImage=!0,s.file=e,s.errFile=t&&t[0],s.file&&a.submitUpload(s.file).then(function(e){s.post.image=e.data.image,s.post.imageId=e.data.imageId,s.loadingImage=!1})}}e.module("petal.post").controller("CreatePostController",["$scope","$state","postService","$ionicLoading","homeService",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function i(){c()}function s(){l.params.page+=1,r()}function r(){n.getLatestPosts(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.postsList.push(e)}),l.noPosts=!t.data.total,l.initialSearchCompleted=!0,t.data.total>l.postsList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.postsList=[],l.params={limit:3,page:1},r()}var l=this;l.getLatestPosts=r,l.pullRefreshPosts=i,l.loadMorePosts=s,c()}e.module("petal.post").controller("LatestPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function i(){l()}function s(){l()}function r(){u.params.page+=1,c()}function c(){n.getNearbyPosts(u.params).then(function(t){e.forEach(t.data.docs,function(e){u.postsList.push(e)}),u.noPosts=!t.data.total,u.initialSearchCompleted=!0,t.data.total>u.postsList.length?u.canLoadMoreResults=!0:u.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide(),u.initialSearchCompleted=!0})}function l(){u.canLoadMoreResults=!1,u.initialSearchCompleted=!1,u.postsList=[],u.params={limit:10,page:1,distance:u.distance},c()}var u=this;u.getNearbyPosts=c,u.pullRefreshPosts=i,u.loadMorePosts=r,u.releaseRange=s,u.distance=10,l()}e.module("petal.post").controller("NearbyPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(t,o,n,a){function i(){c()}function s(){l.params.page+=1,r()}function r(){n.getPopularPosts(l.params).then(function(t){e.forEach(t.data.docs,function(e){l.postsList.push(e)}),t.data.total||(l.noPosts=!0),l.initialSearchCompleted=!0,t.data.total>l.postsList.length?l.canLoadMoreResults=!0:l.canLoadMoreResults=!1}).catch(function(e){console.log(e)}).finally(function(){t.$broadcast("scroll.refreshComplete"),t.$broadcast("scroll.infiniteScrollComplete"),a.hide()})}function c(){l.canLoadMoreResults=!1,l.initialSearchCompleted=!1,l.postsList=[],l.params={limit:3,page:1},r()}var l=this;l.getPopularPosts=r,l.pullRefreshPosts=i,l.loadMorePosts=s,c()}e.module("petal.post").controller("PopularPostController",["$scope","$state","postService","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e){}e.module("petal.post").controller("PostParentController",["$rootScope",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,i){function s(){o.getPost(n.id).then(function(e){p.post=e.data,p.distanceObj={latitude:p.post.loc[1],longitude:p.post.loc[0],diatance:0},u()})}function r(){i.getUpvote(p.currentPost).then(function(e){p.postUpvoted=e.data||!1}).catch(function(e){console.log(e)})}function c(){i.createUpvote(p.currentPost).then(function(e){r()}).catch(function(e){console.log(e)})}function l(){i.deleteUpvote(p.currentPost).then(function(e){r()}).catch(function(e){console.log(e)})}function u(){o.getDistance(p.distanceObj)}var p=this;p.getSinglePost=s,p.submitPostUpvote=c,p.deletePostUpvote=l,p.getPostDistance=u,p.back=function(){window.history.back()},function(){p.currentPost=n.id,s(),r()}()}e.module("petal.post").controller("SinglePostController",["$scope","$state","postService","$stateParams","$ionicHistory","upvoteService",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){return{restrict:"E",templateUrl:"app/post/views/postsListTemplate.html",scope:{postsList:"=postsList",postSearchTextSubmit:"&postSearchTextSubmit"},replace:!0,link:function(o){function n(t){o.modal.hide(),e.go("home.userPage",{user:t})}function i(){return a.fromTemplateUrl("app/post/views/postModal.html",{scope:o}).then(function(e){o.modal=e})}o.getTime=function(e){return moment(e).fromNow()},o.currentUser=t.getUser(),o.setPostSearch=function(e){o.postSearchTextSubmit&&o.postSearchTextSubmit({interest:e})},o.userPage=n,o.postModal={},o.postModal.userPage=n,o.showPostModal=function(e){o.postModal.post=e,o.postModal.post.views+=1,i().then(function(){o.modal.show()}),o.$on("modal.hidden",function(){o.modal.remove()})}}}}e.module("petal.post").directive("postsList",["$state","userData","postService","upvoteService","$ionicModal",t])}(window.angular),function(e){"use strict";function t(e,t,o){return{restrict:"E",templateUrl:"app/post/views/postUpvoteTemplate.html",scope:{postId:"=postId",upvotesLength:"=upvotesLength"},replace:!0,link:function(e){function o(){t.getUpvote(e.postId).then(function(t){e.postUpvoted=t.data,e.loadingUpvote=!1}).catch(function(e){console.log("check error"),console.log(e)})}function n(){e.postUpvoted=!0,t.createUpvote(e.postId).then(function(){e.upvotesLength+=1}).catch(function(e){console.log("submit error"),console.log(e)})}function a(){e.postUpvoted=!1,t.deleteUpvote(e.postId).then(function(){e.upvotesLength-=1}).catch(function(e){window.alert(e)})}e.checkPostUpvote=o,e.submitPostUpvote=n,e.deletePostUpvote=a,function(){e.loadingUpvote=!0,o()}()}}}e.module("petal.post").directive("postUpvote",["$state","upvoteService","$timeout",t])}(window.angular),function(e){"use strict";function t(e,t,o,n){function a(o){return e.get(t.baseURL+"post/getPosts",{params:o})}function i(o,n){e.get(t.baseURL+"post/getPosts",{params:n}).then(function(e){console.log("without position"),o.resolve(e)}).catch(function(e){o.reject(e)})}function s(a){a.nearby=!0;var s=n.defer();return 1==a.page&&o.setUserLocation(),o.getUserLocation().then(function(o){a.latitude=o.latitude,a.longitude=o.longitude,e.get(t.baseURL+"post/getPosts",{params:a}).then(function(e){s.resolve(e)}).catch(function(e){s.reject(e)})}).catch(function(e){window.console.log(e),i(s,a)}),s.promise}function r(o){return o.sort="-time",e.get(t.baseURL+"post/getPosts",{params:o})}function c(o){return o.sort="-upvotesLength",e.get(t.baseURL+"post/getPosts",{params:o})}function l(a){var i=n.defer();return console.log("entered submit post"),o.getUserLocation().then(function(o){a.latitude=o.latitude,a.longitude=o.longitude,e.post(t.baseURL+"post/create",{post:a}).then(function(e){i.resolve(e)}).catch(function(e){i.reject(e)})}).catch(function(o){e.post(t.baseURL+"post/create",{post:a}).then(function(e){i.resolve(e)}).catch(function(e){i.reject(e)})}),i.promise}function u(o){return e.delete(t.baseURL+"post/delete/"+o)}function p(o){return e.get(t.baseURL+"post/get/"+o)}function d(e){var t=n.defer(),a=e.latitude,i=e.longitude;return o.getUserLocation().then(function(e){var o=e.latitude,n=e.longitude,s=f(o-a),r=f(n-i),c=Math.sin(s/2)*Math.sin(s/2)+Math.cos(f(a))*Math.cos(f(o))*Math.sin(r/2)*Math.sin(r/2),l=2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),u=6371*l;t.resolve(Math.ceil(u))}).catch(function(e){console.log(e)}),t.promise}function f(e){return e*(Math.PI/180)}this.getAllPosts=a,this.getNearbyPosts=s,this.getLatestPosts=r,this.getPopularPosts=c,this.submitPost=l,this.deletePost=u,this.getPost=p,this.getDistance=d}e.module("petal.post").service("postService",["$http","homeService","userLocationService","$q",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,i,s){function r(){l.user=n.getUser(),e.editForm.user=l.user,l.user.interests.length&&(e.editForm.user.interests="!"+l.user.interests.join("!"))}function c(){s.hide(),e.editForm={},r()}var l=this;l.activate=c,c(),e.editForm.submitUser=function(){s.show(),a.updateUser(e.editForm.user).then(function(e){window.alert("updated user"),t.go("home.user.userMePage")}).catch(function(e){}).finally(function(){n.setUser(),s.hide()})},e.editForm.uploadUserPicture=function(t,n){e.loadingImage=!0,l.file=t,l.errFile=n&&n[0],t&&(l.file.upload=i.upload({url:o.baseURL+"upload/singleUpload",data:{file:l.file}}),l.file.upload.then(function(t){l.file.result=t.data,e.editForm.user.picture=t.data,e.loadingImage=!1}))}}e.module("petal.user").controller("UserEditPageController",["$scope","$state","homeService","userData","userService","Upload","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,i,s,r){function c(e){s.open("https://www.facebook.com/"+e,"_system")}function l(){n.setUser().then(function(){m.user=n.getUser()}).catch(function(e){window.console.log(e)}).finally(function(){r.hide()})}function u(){m.params={page:1,limit:100,user:n.getUser()._id},i.getLatestPosts(m.params).then(function(e){m.postsList=e.data.docs})}function p(e){m.activeTab=e}function d(e){return e===m.activeTab}function f(){o.logout(),t.go("authenticate")}function h(){l(),g(),e.$broadcast("scroll.refreshComplete"),u()}function g(){a.getRequestedUsers({page:1,limit:25}).then(function(e){m.peopleList=e.data.docs,m.total=e.data.total})}var m=this;m.logout=f,m.activate=h,m.activeTab=1,m.activateTab=p,m.isTabActive=d,m.openFacebook=c,h()}e.module("petal.user").controller("UserMePageController",["$scope","$state","$auth","userData","peopleService","postService","$window","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a,i,s,r,c){function l(e){r.open("https://www.facebook.com/"+e,"_system")}function u(){m.params={page:1,limit:100,user:a.user},s.getLatestPosts(m.params).then(function(e){m.postsList=e.data.docs})}function p(e){m.activeTab=e}function d(e){return e===m.activeTab}function f(){n.check(a.user).then(function(e){m.revealChoice=e.data.status})}function h(){r.history.back()}function g(){o.getUser(a.user).then(function(e){m.user=e.data}).catch(function(e){}).finally(function(){c.hide()})}var m=this;m.checkReveal=f,m.goBack=h,m.activateTab=p,m.isTabActive=d,m.openFacebook=l,function(){g(),m.revealChoice=i,m.activeTab=1,u()}()}e.module("petal.user").controller("UserPageController",["$state","$auth","userService","revealService","$stateParams","friends","postService","$window","$ionicLoading",t])}(window.angular),function(e){"use strict";function t(e,t,o){alert(o)}e.module("petal.user").controller("UserPagePostsController",["$state","$stateParams","friends",t])}(window.angular),function(e){"use strict";function t(){}e.module("petal.user").controller("UserParentController",[t])}(window.angular),function(e){"use strict";function t(e){return{restrict:"E",replace:!0,templateUrl:"app/user/views/blockedList.html",link:function(t){t.afterCallback=function(e){t.peopleList.splice(e,1)},e.getBlocks().then(function(e){window.console.log(e),t.peopleList=e.data})}}}e.module("petal.user").directive("blockedList",["blockService",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.post(t.baseURL+"block/create",{secondUser:o})}function n(o){return e.post(t.baseURL+"block/delete",{secondUser:o})}function a(o){return e.get(t.baseURL+"block/get/"+o)}function i(){return e.get(t.baseURL+"block/getBlocks/")}this.create=o,this.remove=n,this.getBlocks=i,this.check=a}e.module("petal.user").service("blockService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(e,t){function o(e){return{secondUser:e}}function n(o){return e.post(t.baseURL+"reveal/initiate",{secondUser:o})}function a(o){return e.post(t.baseURL+"reveal/accept",{secondUser:o})}function i(o){return e.post(t.baseURL+"reveal/ignore",{secondUser:o})}function s(o){return e.post(t.baseURL+"reveal/cancel",{secondUser:o})}function r(n){var a=o(n);return e.get(t.baseURL+"reveal/received",{params:a})}function c(n){var a=o(n);return e.get(t.baseURL+"reveal/requested",{params:a})}function l(n){var a=o(n);return e.get(t.baseURL+"reveal/revealed",{params:a})}function u(o){return e.post(t.baseURL+"reveal/finish",{secondUser:o})}function p(n){var a=o(n);return e.get(t.baseURL+"reveal/check",{params:a})}this.initiate=n,this.accept=a,this.ignore=i,this.cancel=s,this.received=r,this.requested=c,this.revealed=l,this.finish=u,this.check=p}e.module("petal.user").service("revealService",["$http","homeService",t])}(window.angular),function(e){"use strict";function t(e,t,o,n,a){function i(){var t=o.defer(),a={timeout:3e3,enableHighAccuracy:!1};return e.getCurrentPosition(a).then(function(e){var o={latitude:e.coords.latitude,longitude:e.coords.longitude};t.resolve(o)}).catch(function(){n.post("https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyA5bqvCp1wYX7FGKiDyd3w0DzvJZoPwQrQ").then(function(e){var o={latitude:e.data.location.lat,longitude:e.data.location.lng};t.resolve(o)}).catch(function(e){window.console.log("error from google"),window.console.log(e),t.reject("Not able to acces your location.Make sure location is enabled.")})}),t.promise}function s(){var o={timeout:3e3,enableHighAccuracy:!1};e.getCurrentPosition(o).then(function(e){var o={latitude:e.coords.latitude,longitude:e.coords.longitude};t.updateUser(o)}).catch(function(e){n.post("https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyA5bqvCp1wYX7FGKiDyd3w0DzvJZoPwQrQ").then(function(e){var o={latitude:e.data.location.lat,longitude:e.data.location.lng};t.updateUser(o)}).catch(function(){3==e.code?a.warning("Not able to acces your location.Make sure location is enabled.","Warning",{maxOpened:1}):2!=e.code&&1!=e.code||a.warning("Not able to acces your location.Make sure location is enabled.","Warning",{maxOpened:1})})})}this.getUserLocation=i,this.setUserLocation=s}e.module("petal.user").service("userLocationService",["$cordovaGeolocation","userService","$q","$http","toastr",t])}(window.angular),function(e){"use strict";function t(e,t){function o(o){return e.get(t.baseURL+"user/get/"+o)}function n(o){return e.post(t.baseURL+"user/update/",{user:o})}this.updateUser=n,this.getUser=o}e.module("petal.user").service("userService",["$http","homeService",t])}(window.angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5tb2R1bGUuanMiLCJjaGF0L2NoYXRNb2R1bGUuanMiLCJwZW9wbGUvcGVvcGxlTW9kdWxlLmpzIiwiaG9tZS9ob21lTW9kdWxlLmpzIiwicG9zdC9wb3N0TW9kdWxlLmpzIiwidXNlci91c2VyTW9kdWxlLmpzIiwiY2hhdC9jb250cm9sbGVyL2FsbENoYXRDb250cm9sbGVyLmpzIiwiY2hhdC9jb250cm9sbGVyL2NoYXRCb3hDb250cm9sbGVyLmpzIiwiY2hhdC9jb250cm9sbGVyL2NoYXRQYXJlbnRDb250cm9sbGVyLmpzIiwiY2hhdC9jb250cm9sbGVyL3JldmVhbGVkQ2hhdENvbnRyb2xsZXIuanMiLCJjaGF0L3NlcnZpY2UvY2hhdFNlcnZpY2UuanMiLCJjaGF0L3NlcnZpY2Uvc29ja2V0LmpzIiwiY2hhdC9zZXJ2aWNlL3NvY2tldFVzZXJTZXJ2aWNlLmpzIiwicGVvcGxlL2NvbnRyb2xsZXIvYWxsUGVvcGxlQ29udHJvbGxlci5qcyIsInBlb3BsZS9jb250cm9sbGVyL25lYXJieVBlb3BsZUNvbnRyb2xsZXIuanMiLCJwZW9wbGUvY29udHJvbGxlci9wZW9wbGVQYXJlbnRDb250cm9sbGVyLmpzIiwicGVvcGxlL2NvbnRyb2xsZXIvcmVjZWl2ZWRQZW9wbGVDb250cm9sbGVyLmpzIiwicGVvcGxlL2NvbnRyb2xsZXIvcmVxdWVzdGVkUGVvcGxlQ29udHJvbGxlci5qcyIsInBlb3BsZS9jb250cm9sbGVyL3JldmVhbGVkUGVvcGxlQ29udHJvbGxlci5qcyIsInBlb3BsZS9kaXJlY3RpdmUvcGVvcGxlTGlzdERpcmVjdGl2ZS5qcyIsInBlb3BsZS9kaXJlY3RpdmUvcmV2ZWFsRGlyZWN0aXZlLmpzIiwicGVvcGxlL3NlcnZpY2UvcGVvcGxlU2VydmljZS5qcyIsInBlb3BsZS9zZXJ2aWNlL3Vwdm90ZVNlcnZpY2UuanMiLCJob21lL2NvbnRyb2xsZXIvYXV0aGVudGljYXRpb25Db250cm9sbGVyLmpzIiwiaG9tZS9jb250cm9sbGVyL2hvbWVDb250cm9sbGVyLmpzIiwiaG9tZS9kaXJlY3RpdmUvZGlzdGFuY2VWaWV3RGlyZWN0aXZlLmpzIiwiaG9tZS9kaXJlY3RpdmUva2VlcFNjcm9sbERpcmVjdGl2ZS5qcyIsImhvbWUvc2VydmljZS9ob21lU2VydmljZS5qcyIsImhvbWUvc2VydmljZS9ub3RpZmljYXRpb25TZXJ2aWNlLmpzIiwiaG9tZS9zZXJ2aWNlL3VzZXJkYXRhLmpzIiwicG9zdC9jb250cm9sbGVyL2FsbFBvc3RDb250cm9sbGVyLmpzIiwicG9zdC9jb250cm9sbGVyL2NyZWF0ZVBvc3RDb250cm9sbGVyLmpzIiwicG9zdC9jb250cm9sbGVyL2xhdGVzdFBvc3RDb250cm9sbGVyLmpzIiwicG9zdC9jb250cm9sbGVyL25lYXJieVBvc3RDb250cm9sbGVyLmpzIiwicG9zdC9jb250cm9sbGVyL3BvcHVsYXJQb3N0Q29udHJvbGxlci5qcyIsInBvc3QvY29udHJvbGxlci9wb3N0UGFyZW50Q29udHJvbGxlci5qcyIsInBvc3QvY29udHJvbGxlci9zaW5nbGVQb3N0Q29udHJvbGxlci5qcyIsInBvc3QvZGlyZWN0aXZlL3Bvc3RzTGlzdERpcmVjdGl2ZS5qcyIsInBvc3QvZGlyZWN0aXZlL3Bvc3RVcHZvdGVEaXJlY3RpdmUuanMiLCJwb3N0L3NlcnZpY2UvcG9zdFNlcnZpY2UuanMiLCJ1c2VyL2NvbnRyb2xsZXIvdXNlckVkaXRQYWdlQ29udHJvbGxlci5qcyIsInVzZXIvY29udHJvbGxlci91c2VyTWVQYWdlQ29udHJvbGxlci5qcyIsInVzZXIvY29udHJvbGxlci91c2VyUGFnZUNvbnRyb2xsZXIuanMiLCJ1c2VyL2NvbnRyb2xsZXIvdXNlclBhZ2VQb3N0c0NvbnRyb2xsZXIuanMiLCJ1c2VyL2NvbnRyb2xsZXIvdXNlclBhcmVudENvbnRyb2xsZXIuanMiLCJ1c2VyL2RpcmVjdGl2ZS9ibG9ja2VkTGlzdERpcmVjdGl2ZS5qcyIsInVzZXIvc2VydmljZS9ibG9ja1NlcnZpY2UuanMiLCJ1c2VyL3NlcnZpY2UvcmV2ZWFsU2VydmljZS5qcyIsInVzZXIvc2VydmljZS91c2VyTG9jYXRpb25TZXJ2aWNlLmpzIiwidXNlci9zZXJ2aWNlL3VzZXJTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJjb25maWdGdW5jdGlvbiIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRzdGF0ZVByb3ZpZGVyIiwiJGlvbmljQ29uZmlnUHJvdmlkZXIiLCJ0b2FzdHJDb25maWciLCJ0YWJzIiwicG9zaXRpb24iLCJzY3JvbGxpbmciLCJqc1Njcm9sbGluZyIsInZpZXdzIiwidHJhbnNpdGlvbiIsIm90aGVyd2lzZSIsImV4dGVuZCIsImF1dG9EaXNtaXNzIiwibWF4T3BlbmVkIiwiYXBwIiwibW9kdWxlIiwiY29uZmlnIiwicnVuIiwiJHJvb3RTY29wZSIsIiRzdGF0ZSIsIiRpb25pY1BsYXRmb3JtIiwiJGlvbmljTG9hZGluZyIsIlJlcXVlc3RzU2VydmljZSIsIiRjb3Jkb3ZhUHVzaFY1IiwiJGlvbmljSGlzdG9yeSIsImJhY2tCdXR0b25FeGl0IiwicmVnaXN0ZXJCYWNrQnV0dG9uQWN0aW9uIiwiZSIsImJhY2tCdXR0b25QcmVzc2VkT25jZVRvRXhpdCIsImlvbmljIiwiUGxhdGZvcm0iLCJleGl0QXBwIiwiYmFja1ZpZXciLCJnb0JhY2siLCJ3aW5kb3ciLCJwbHVnaW5zIiwidG9hc3QiLCJzaG93U2hvcnRDZW50ZXIiLCJhIiwiYiIsInNldFRpbWVvdXQiLCJwcmV2ZW50RGVmYXVsdCIsIm5vdGlmaWNhdGlvbkZ1bmN0aW9uIiwicmVnaXN0ZXIiLCIkb24iLCJldmVudCIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwicmVhZHkiLCJjb3Jkb3ZhIiwiS2V5Ym9hcmQiLCJoaWRlS2V5Ym9hcmRBY2Nlc3NvcnlCYXIiLCJkaXNhYmxlU2Nyb2xsIiwiU3RhdHVzQmFyIiwic3R5bGVEZWZhdWx0Iiwib25lcnJvciIsImVycm9yTXNnIiwidXJsIiwibGluZU51bWJlciIsInRvU3RhdGUiLCJ0b1BhcmFtcyIsImZyb21TdGF0ZSIsIm5hbWUiLCJnbyIsImhpZGUiLCJzdGF0ZSIsImFic3RyYWN0IiwiY2hhdC10YWIiLCJ0ZW1wbGF0ZVVybCIsImNvbnRyb2xsZXIiLCJjb250cm9sbGVyQXMiLCJyZXNvbHZlIiwiYmxvY2tlZCIsIiRzdGF0ZVBhcmFtcyIsImJsb2NrU2VydmljZSIsIiRxIiwiZGVmZXIiLCJjaGVjayIsInVzZXIiLCJ0aGVuIiwicmVzcG9uc2UiLCJjYXRjaCIsInByb21pc2UiLCJwZW9wbGUtdGFiIiwiJGF1dGhQcm92aWRlciIsImF1dGhlbnRpY2F0ZVVybCIsInJlZGlyZWN0VXJsMiIsImZhY2Vib29rIiwiY2xpZW50SWQiLCJyZWRpcmVjdFVyaSIsImdvb2dsZSIsInJlZGlyZWN0SWZVc2VyTm90QXV0aGVudGljYXRlZCIsIiRhdXRoIiwiJHRpbWVvdXQiLCJpc0F1dGhlbnRpY2F0ZWQiLCJwb3N0LXRhYiIsImFsZXJ0IiwiaGlzdG9yeSIsImJhY2siLCJmcmllbmRzIiwicmV2ZWFsU2VydmljZSIsInN0YXR1cyIsInVzZXItdGFiIiwiZXh0cmEtdGFiIiwiQWxsQ2hhdENvbnRyb2xsZXIiLCIkc2NvcGUiLCJjaGF0U2VydmljZSIsIlNvY2tldCIsIm1lc3NhZ2VSZWNlaXZlZCIsIm1lc3NhZ2UiLCJuZXdDaGF0Um9vbSIsImNyZWF0b3IyIiwibmV3Q2hhdCIsImxhc3RNZXNzYWdlIiwiX2lkIiwidHlwZSIsImNoIiwiYWNjIiwiY2hhdFJvb21zTGlzdCIsImxlbmd0aCIsInNwbGljZSIsInVuc2hpZnQiLCJwdWxsUmVmcmVzaENoYXRzIiwiYWN0aXZhdGUiLCJsb2FkTW9yZUNoYXRzIiwicGFyYW1zIiwicGFnZSIsImdldEFsbENoYXRSb29tcyIsImZvckVhY2giLCJkb2NzIiwidmFsdWUiLCJwdXNoIiwibm9Qb3N0cyIsInRvdGFsIiwiaW5pdGlhbFNlYXJjaENvbXBsZXRlZCIsImNhbkxvYWRNb3JlUmVzdWx0cyIsImZpbmFsbHkiLCIkYnJvYWRjYXN0IiwibGltaXQiLCJ0aGlzIiwib24iLCJjaGF0UGFnZSIsInVzZXJJZCIsIkNoYXRCb3hDb250cm9sbGVyIiwidXNlckRhdGEiLCJob21lU2VydmljZSIsIiRpb25pY1Njcm9sbERlbGVnYXRlIiwidXNlclNlcnZpY2UiLCJVcGxvYWQiLCIkd2luZG93IiwiY2JjIiwiZ2V0Q2hhdE1lc3NhZ2VzIiwiZ2V0UmVjZWl2ZXIiLCJnZXRVc2VyIiwicmVjZWl2ZXJVc2VySUQiLCJyZWNlaXZlclVzZXIiLCJlcnIiLCJzY3JvbGxCb3R0b20iLCJjaGF0Um9vbUlkIiwicmVzIiwiY2hhdCIsImNoYXRMaXN0Iiwic29ja2V0Sm9pbiIsImVtaXQiLCJyb29tSWQiLCJtZXNzYWdlTG9hZGluZyIsImlzQmxvY2tlZCIsImN1cnJlbnRVc2VyIiwibWVzc2FnZVRyeUNvdW50Iiwic2hvdyIsImdldENoYXRSb29tIiwiY2hhdFJvb20iLCJjbGlja1N1Ym1pdCIsImZvY3VzSW5wdXQiLCJpc1Zpc2libGUiLCJjaGF0T2JqIiwibXlNc2ciLCJyZWNlaXZlciIsInNlbmRDaGF0TWVzc2FnZSIsInN1Ym1pdFVwbG9hZCIsImZpbGUiLCJ1cGxvYWQiLCJiYXNlVVJMIiwicmVzdWx0IiwidXBsb2FkZWRJbWFnZSIsImNhbmNlbFVwbG9hZCIsInNob3dUZW1wSW1hZ2UiLCJ0ZW1wSW1hZ2VVcmwiLCJ1cGxvYWRTaW5nbGVJbWFnZSIsImVyckZpbGVzIiwiZXJyRmlsZSIsImxlYXZlQ2hhdEJveCIsInVwZGF0ZUNoYXRSb29tIiwiQ2hhdFBhcmVudENvbnRyb2xsZXIiLCJSZXZlYWxlZENoYXRDb250cm9sbGVyIiwiZ2V0UmV2ZWFsZWRDaGF0Um9vbXMiLCJSZXZpZXdTZXJ2aWNlIiwiJGh0dHAiLCJkZWxldGVDaGF0Um9vbSIsImlkIiwicG9zdCIsImdldCIsInJldmVhbGVkIiwicnMiLCJzZXJ2aWNlIiwiU29ja2V0RmFjdG9yeSIsInNvY2tldEZhY3RvcnkiLCJwcmVmaXgiLCJpb1NvY2tldCIsImlvIiwiY29ubmVjdCIsImZhY3RvcnkiLCJzb2NrZXRGYWN0b3J5RnVuY3Rpb24iLCJBbGxQZW9wbGVDb250cm9sbGVyIiwicGVvcGxlU2VydmljZSIsInB1bGxSZWZyZXNoUGVvcGxlIiwic2VhcmNoQ3Jvc3NTdWJtaXQiLCJhcGMiLCJwZW9wbGVTZWFyY2hUZXh0Iiwic2hvd1NlYXJjaENyb3NzIiwicGVvcGxlU2VhcmNoVGV4dFN1Ym1pdCIsImludGVyZXN0IiwibG9hZE1vcmVQZW9wbGUiLCJnZXRBbGxQZW9wbGUiLCJnZXRBbGxVc2VycyIsInBlb3BsZUxpc3QiLCJOZWFyYnlQZW9wbGVDb250cm9sbGVyIiwiZ2V0TmVhcmJ5UGVvcGxlIiwicmVsZWFzZVJhbmdlIiwiZ2V0TmVhcmJ5VXNlcnMiLCJub1Blb3BsZSIsImRpc3RhbmNlIiwiUGVvcGxlUGFyZW50Q29udHJvbGxlciIsIlJlY2VpdmVkUGVvcGxlQ29udHJvbGxlciIsImdldFJlY2VpdmVkUGVvcGxlIiwiZ2V0UmVjZWl2ZWRVc2VycyIsIlJlcXVlc3RlZFBlb3BsZUNvbnRyb2xsZXIiLCJnZXRSZXF1ZXN0ZWRQZW9wbGUiLCJnZXRSZXF1ZXN0ZWRVc2VycyIsIlJldmVhbGVkUGVvcGxlQ29udHJvbGxlciIsImdldFJldmVhbGVkUGVvcGxlIiwiZ2V0UmV2ZWFsZWRVc2VycyIsInJlc3RyaWN0IiwicmVwbGFjZSIsInNjb3BlIiwibGlzdFR5cGUiLCJzZXRQZW9wbGVTZWFyY2giLCIkZXZlbnQiLCJzdG9wUHJvcGFnYXRpb24iLCJyZW1vdmVBZnRlckRlY2lkZWQiLCJpbmRleCIsImRpcmVjdGl2ZSIsImRlbGV0ZUNoYXQiLCIkaW9uaWNBY3Rpb25TaGVldCIsImFmdGVyQ2FsbGJhY2siLCJsaW5rIiwiZWxlbSIsImJpbmQiLCJ0aXRsZVRleHQiLCJidXR0b25zIiwidGV4dCIsImNhbmNlbFRleHQiLCJjYW5jZWwiLCJidXR0b25DbGlja2VkIiwiSlNPTiIsInN0cmluZ2lmeSIsInVzZXJTZXR0aW5ncyIsIiRpb25pY1BvcG92ZXIiLCJ1c2VyQmxvY2siLCJjaGF0RGVsZXRlIiwiYmxvY2tJZCIsInBvcG92ZXIiLCJyZW1vdmUiLCJmcm9tVGVtcGxhdGVVcmwiLCJ1c2VyUGFnZSIsImNhbmNlbFJldmVhbCIsImRlY2lkZVJldmVhbCIsImFjY2VwdCIsImlnbm9yZSIsImRlbGV0ZVJldmVhbCIsImZpbmlzaCIsInNlbmRSZXZlYWwiLCJpbml0aWF0ZSIsImNyZWF0ZUJsb2NrIiwiY3JlYXRlIiwiZGVsZXRlQmxvY2siLCJQZW9wbGVTZXJ2aWNlIiwidXNlckxvY2F0aW9uU2VydmljZSIsImFsbCIsInJlY2VpdmVkIiwicmVxdWVzdGVkIiwiZ2V0RmlsdGVyZWRVc2VycyIsInVzZXJzIiwicmVqZWN0Iiwic2V0VXNlckxvY2F0aW9uIiwibmVhcmJ5IiwiZ2V0VXNlckxvY2F0aW9uIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJVcHZvdGVTZXJ2aWNlIiwiZ2V0VXB2b3RlIiwicG9zdElkIiwiY3JlYXRlVXB2b3RlIiwiZGVsZXRlVXB2b3RlIiwiQXV0aGVudGljYXRpb25Db250cm9sbGVyIiwiJGlvbmljTW9kYWwiLCJzdWNjZXNzZnVsQXV0aGVudGljYXRpb24iLCJzZXRVc2VyIiwiZGV2aWNlX3Rva2VuIiwic29jaWFsQXV0aGVudGljYXRlIiwicHJvdmlkZXIiLCJhdXRoZW50aWNhdGUiLCJsb2FkUG9zdE1vZGFsIiwibW9kYWwiLCJhdXRoTG9nb3V0IiwibG9nb3V0IiwicmVtb3ZlVXNlciIsInBoYyIsImlzQXV0aCIsIndlYlNpZ25JbiIsImdvb2dsZVNpZ25JbiIsInRlbXBsYXRlIiwiZ29vZ2xlcGx1cyIsImxvZ2luIiwid2ViQ2xpZW50SWQiLCJ1c2VyX2RhdGEiLCJwcm9maWxlIiwiZGlzcGxheU5hbWUiLCJpbWFnZVVybCIsInNldFRva2VuIiwidG9rZW4iLCJtc2ciLCJIb21lQ29udHJvbGxlciIsInRvYXN0ciIsIiRpb25pY1RhYnNEZWxlZ2F0ZSIsIm1lc3NhZ2VTdHJpbmciLCJ1c2VyTmFtZSIsImFub25OYW1lIiwiZmFjZWJvb2tOYW1lIiwiZ29vZ2xlTmFtZSIsImN1cnJlbnQiLCJpbmZvIiwiYWxsb3dIdG1sIiwib25UYXAiLCJoYyIsImJhZGdlVmFsdWUiLCJjaGF0Q2xpY2tlZCIsInNsaWRlSGVhZGVyIiwic2xpZGVIZWFkZXJQcmV2aW91cyIsImdvRm9yd2FyZCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsInNlbGVjdCIsInBvc3RTZXJ2aWNlIiwicG9zaXRpb25Db3JkcyIsImdldERpc3RhbmNlIiwiZGlzdGFuY2VPYmoiLCJ3YXRjaFNjcm9sbCIsInNjcm9sbFRvcCIsInNyY0VsZW1lbnQiLCIkYXBwbHkiLCJpbWFnZU1vZGFsIiwic2hvd0ltYWdlTW9kYWwiLCJpbWFnZSIsImxvYWRNb2RhbCIsImN1cnJlbnRJbWFnZSIsIlNjcm9sbFBvc2l0aW9ucyIsImdldFNjcm9sbFBvc2l0aW9uIiwib2Zmc2V0Iiwic2Nyb2xsVG8iLCJsZWZ0IiwidG9wIiwidHJpZ2dlciIsImVsZW1lbnQiLCIkd2F0Y2giLCJmb2N1cyIsImltZ0xhcmdlIiwiaW1nU21hbGwiLCJJbWFnZSIsInNyYyIsIm9ubG9hZCIsImNoaWxkcmVuIiwiZmluZCIsImNzcyIsIkhvbWVTZXJ2aWNlIiwiZGVsZXRlVXBsb2FkIiwidGhhdCIsInB1YmxpY19pZCIsImdldEltYWdlcyIsImltYWdlVGV4dCIsImRlZmVycmVkIiwib3B0aW9ucyIsImFuZHJvaWQiLCJzZW5kZXJJRCIsInZpYnJhdGUiLCJicm93c2VyIiwiaW9zIiwiYmFkZ2UiLCJzb3VuZCIsIndpbmRvd3MiLCJpbml0aWFsaXplIiwib25Ob3RpZmljYXRpb24iLCJhcmd1bWVudHMiLCJvbkVycm9yIiwicmVnaXN0cmF0aW9uSWQiLCJiYXNlX3VybCIsInN0b3JhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJjYWNoZWRVc2VyIiwib2JqMSIsInNldEl0ZW0iLCJnZXRQYXlsb2FkIiwic3ViIiwicGFyc2UiLCJnZXRJdGVtIiwicmVtb3ZlSXRlbSIsImlzVXNlckV4aXN0cyIsIkFsbFBvc3RDb250cm9sbGVyIiwicHVsbFJlZnJlc2hQb3N0cyIsInBvc3RTZWFyY2hUZXh0IiwicG9zdFNlYXJjaFRleHRTdWJtaXQiLCJsb2FkTW9yZVBvc3RzIiwiZ2V0QWxsUG9zdHMiLCJwb3N0c0xpc3QiLCJDcmVhdGVQb3N0Q29udHJvbGxlciIsInN1Ym1pdFBvc3QiLCJjcGMiLCJjb250ZW50IiwibmV3VmFsIiwib2xkVmFsIiwic2VsZWN0UmFuZG9tSW1hZ2UiLCJpbWciLCJsb2FkUmFuZG9tSW1hZ2VzIiwibG9hZGluZ1JhbmRvbUltYWdlIiwicmFuZG9tSW1hZ2VzIiwiaW1hZ2VJZCIsImxvYWRpbmdJbWFnZSIsIkxhdGVzdFBvc3RDb250cm9sbGVyIiwiZ2V0TGF0ZXN0UG9zdHMiLCJOZWFyYnlQb3N0Q29udHJvbGxlciIsImdldE5lYXJieVBvc3RzIiwiUG9wdWxhclBvc3RDb250cm9sbGVyIiwiZ2V0UG9wdWxhclBvc3RzIiwiUG9zdFBhcmVudENvbnRyb2xsZXIiLCJTaW5nbGVQb3N0Q29udHJvbGxlciIsInVwdm90ZVNlcnZpY2UiLCJnZXRTaW5nbGVQb3N0IiwiZ2V0UG9zdCIsImxvYyIsImRpYXRhbmNlIiwiZ2V0UG9zdERpc3RhbmNlIiwiY2hlY2tQb3N0VXB2b3RlIiwiY3VycmVudFBvc3QiLCJwb3N0VXB2b3RlZCIsInN1Ym1pdFBvc3RVcHZvdGUiLCJkZWxldGVQb3N0VXB2b3RlIiwiZ2V0VGltZSIsInRpbWUiLCJtb21lbnQiLCJmcm9tTm93Iiwic2V0UG9zdFNlYXJjaCIsInBvc3RNb2RhbCIsInNob3dQb3N0TW9kYWwiLCJwb3N0VXB2b3RlIiwidXB2b3Rlc0xlbmd0aCIsImxvYWRpbmdVcHZvdGUiLCJQb3N0U2VydmljZSIsImdldEZpbHRlcmVkUG9zdHMiLCJwb3N0cyIsImVycjIiLCJzb3J0IiwiZGVsZXRlUG9zdCIsImRlbGV0ZSIsInBvc09iaiIsImxhdDEiLCJsb24xIiwibGF0MiIsImxvbjIiLCJkTGF0IiwiZGVnMnJhZCIsImRMb24iLCJNYXRoIiwic2luIiwiY29zIiwiYyIsImF0YW4yIiwic3FydCIsImQiLCJjZWlsIiwiZGVnIiwiUEkiLCJVc2VyRWRpdFBhZ2VDb250cm9sbGVyIiwidW1wYyIsImVkaXRGb3JtIiwiaW50ZXJlc3RzIiwiam9pbiIsInN1Ym1pdFVzZXIiLCJ1cGRhdGVVc2VyIiwidXBsb2FkVXNlclBpY3R1cmUiLCJwaWN0dXJlIiwiVXNlck1lUGFnZUNvbnRyb2xsZXIiLCJvcGVuRmFjZWJvb2siLCJvcGVuIiwiZ2V0VXNlclBvc3RzIiwiYWN0aXZhdGVUYWIiLCJ0YWJJbmRleCIsImFjdGl2ZVRhYiIsImlzVGFiQWN0aXZlIiwiZ2V0UmVxdWVzdGVkTGlzdCIsIlVzZXJQYWdlQ29udHJvbGxlciIsInVwYyIsImNoZWNrUmV2ZWFsIiwicmV2ZWFsQ2hvaWNlIiwiVXNlclBhZ2VQb3N0c0NvbnRyb2xsZXIiLCJVc2VyUGFyZW50Q29udHJvbGxlciIsImJsb2NrZWRMaXN0IiwiZ2V0QmxvY2tzIiwiQmxvY2tTZXJ2aWNlIiwic2Vjb25kVXNlciIsIlJldmVhbFNlcnZpY2UiLCJnZXRQYXJhbXMiLCJVc2VyTG9jYXRpb25TZXJ2aWNlIiwiJGNvcmRvdmFHZW9sb2NhdGlvbiIsInRpbWVvdXQiLCJlbmFibGVIaWdoQWNjdXJhY3kiLCJnZXRDdXJyZW50UG9zaXRpb24iLCJwb3NpdGlvbnMiLCJjb29yZHMiLCJsb2NhdGlvbiIsImxhdCIsImxuZyIsImNvZGUiLCJ3YXJuaW5nIiwiVXNlclNlcnZpY2UiXSwibWFwcGluZ3MiOiJDQUFBLFNBQUFBLEdBRUEsWUFRQSxTQUFBQyxHQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUNBRCxFQUFBRSxLQUFBQyxTQUFBLFVBQ0FILEVBQUFJLFVBQUFDLGFBQUEsR0FDQUwsRUFBQU0sTUFBQUMsV0FBQSxRQUNBVCxFQUFBVSxVQUFBLGtCQUNBWixFQUFBYSxPQUFBUixHQUNBUyxhQUFBLEVBQ0FDLFVBQUEsSUFaQSxHQUFBQyxHQUFBaEIsRUFBQWlCLE9BQUEsU0FBQSxRQUFBLFlBQUEsYUFBQSxlQUFBLG1CQUNBLFlBQUEsU0FBQSxhQUFBLGFBQUEsYUFBQSxhQUFBLGdCQUVBRCxHQUFBRSxRQUFBLHFCQUFBLGlC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LEdBQUEwZ0IsSUFBQXJPLFNBQUFyUyxFQUFBMmdCLE9BQUF0TyxTQUFBQyxVQUFBdFMsRUFBQTJnQixPQUFBck8sVUFDQXZKLEdBQUE4VixXQUFBNkIsS0FDQTdiLE1BQUEsU0FBQTJFLEdBQ0F5QyxFQUFBRyxLQUFBLG1HQUFBekgsS0FBQSxTQUFBQyxHQUNBLEdBQUErYixJQUNBdE8sU0FBQXpOLEVBQUFuQyxLQUFBbWUsU0FBQUMsSUFDQXZPLFVBQUExTixFQUFBbkMsS0FBQW1lLFNBQUFFLElBRUEvWCxHQUFBOFYsV0FBQThCLEtBRUE5YixNQUFBLFdBQ0EsR0FBQTJFLEVBQUF1WCxLQUNBdE0sRUFBQXVNLFFBQUEsaUVBQUEsV0FFQXhnQixVQUFBLElBR0EsR0FBQWdKLEVBQUF1WCxNQUFBLEdBQUF2WCxFQUFBdVgsTUFDQXRNLEVBQUF1TSxRQUFBLGlFQUFBLFdBRUF4Z0IsVUFBQSxRQW5EQStILEtBQUE2SixnQkFBQUEsRUFDQTdKLEtBQUEySixnQkFBQUEsRUFOQXpTLEVBQUFpQixPQUFBLGNBQ0E4TCxRQUFBLHVCQUFBLHNCQUFBLGNBQUEsS0FBQSxRQUFBLFNBQUE2VCxLQW1FQXhlLE9BQUFwQyxTQ3ZFQSxTQUFBQSxHQUNBLFlBVUEsU0FBQXdoQixHQUFBaFYsRUFBQXBELEdBT0EsUUFBQVEsR0FBQThDLEdBQ0EsTUFBQUYsR0FBQUksSUFBQXhELEVBQUFxQyxRQUFBLFlBQUFpQixHQUlBLFFBQUEwUyxHQUFBbmEsR0FDQSxNQUFBdUgsR0FBQUcsS0FBQXZELEVBQUFxQyxRQUFBLGdCQUFBeEcsS0FBQUEsSUFaQTZELEtBQUFzVyxXQUFBQSxFQUVBdFcsS0FBQWMsUUFBQUEsRUFUQTVKLEVBQUFpQixPQUFBLGNBQ0E4TCxRQUFBLGVBQUEsUUFBQSxjQUFBeVUsS0F3QkFwZixPQUFBcEMiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cclxuXHR2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ3BldGFsJywgWydpb25pYycsICduZ0FuaW1hdGUnLCdzYXRlbGxpemVyJywgJ25nRmlsZVVwbG9hZCcsICdidGZvcmQuc29ja2V0LWlvJyxcclxuXHRcdCduZ0NvcmRvdmEnLCAndG9hc3RyJywgJ3BldGFsLmhvbWUnLCAncGV0YWwucG9zdCcsICdwZXRhbC5jaGF0JywgJ3BldGFsLnVzZXInLCAncGV0YWwucGVvcGxlJyxcclxuXHRdKTtcclxuXHRhcHAuY29uZmlnKFsnJHVybFJvdXRlclByb3ZpZGVyJywgJyRzdGF0ZVByb3ZpZGVyJywgJyRpb25pY0NvbmZpZ1Byb3ZpZGVyJywgJ3RvYXN0ckNvbmZpZycsIGNvbmZpZ0Z1bmN0aW9uXSk7XHJcblxyXG5cdGZ1bmN0aW9uIGNvbmZpZ0Z1bmN0aW9uKCR1cmxSb3V0ZXJQcm92aWRlciwgJHN0YXRlUHJvdmlkZXIsICRpb25pY0NvbmZpZ1Byb3ZpZGVyLCB0b2FzdHJDb25maWcpIHtcclxuXHRcdCRpb25pY0NvbmZpZ1Byb3ZpZGVyLnRhYnMucG9zaXRpb24oXCJib3R0b21cIik7XHJcblx0XHQkaW9uaWNDb25maWdQcm92aWRlci5zY3JvbGxpbmcuanNTY3JvbGxpbmcoZmFsc2UpO1xyXG5cdFx0JGlvbmljQ29uZmlnUHJvdmlkZXIudmlld3MudHJhbnNpdGlvbignbm9uZScpO1xyXG5cdFx0JHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnL2hvbWUvcG9zdC9hbGwnKTtcclxuXHRcdGFuZ3VsYXIuZXh0ZW5kKHRvYXN0ckNvbmZpZywge1xyXG5cdFx0XHRhdXRvRGlzbWlzczogdHJ1ZSxcclxuXHRcdFx0bWF4T3BlbmVkOiAxLFxyXG5cdFx0fSk7XHJcblx0XHRcclxuXHJcblx0fVxyXG5cclxuXHRhcHAucnVuKFsnJHJvb3RTY29wZScsICckc3RhdGUnLCAnJGlvbmljUGxhdGZvcm0nLCAnJGlvbmljTG9hZGluZycsICdSZXF1ZXN0c1NlcnZpY2UnLCAnJGNvcmRvdmFQdXNoVjUnLCAnJGlvbmljSGlzdG9yeScsIGZ1bmN0aW9uKCRyb290U2NvcGUsICRzdGF0ZSwgJGlvbmljUGxhdGZvcm0sICRpb25pY0xvYWRpbmcsIFJlcXVlc3RzU2VydmljZSwgJGNvcmRvdmFQdXNoVjUsICRpb25pY0hpc3RvcnkpIHtcclxuXHJcblx0XHQkaW9uaWNQbGF0Zm9ybS5yZWFkeShmdW5jdGlvbigpIHtcclxuXHRcdFx0Ly8gSGlkZSB0aGUgYWNjZXNzb3J5IGJhciBieSBkZWZhdWx0IChyZW1vdmUgdGhpcyB0byBzaG93IHRoZSBhY2Nlc3NvcnkgYmFyIGFib3ZlIHRoZSBrZXlib2FyZFxyXG5cdFx0XHQvLyBmb3IgZm9ybSBpbnB1dHMpXHJcblx0XHRcdGlmICh3aW5kb3cuY29yZG92YSAmJiB3aW5kb3cuY29yZG92YS5wbHVnaW5zICYmIHdpbmRvdy5jb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQpIHtcclxuXHRcdFx0XHRjb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQuaGlkZUtleWJvYXJkQWNjZXNzb3J5QmFyKHRydWUpO1xyXG5cdFx0XHRcdGNvcmRvdmEucGx1Z2lucy5LZXlib2FyZC5kaXNhYmxlU2Nyb2xsKHRydWUpO1xyXG5cdFx0XHRcdC8vd2luZG93LnB1c2hOb3RpZmljYXRpb24gPSB3aW5kb3cucGx1Z2lucy5wdXNoTm90aWZpY2F0aW9uO1xyXG5cdFx0XHRcdC8vYXBwU3RhdHVzKCk7XHJcblx0XHRcdFx0bm90aWZpY2F0aW9uRnVuY3Rpb24oKTtcclxuXHRcdFx0XHRiYWNrQnV0dG9uRXhpdCgpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAod2luZG93LlN0YXR1c0Jhcikge1xyXG5cdFx0XHRcdC8vIG9yZy5hcGFjaGUuY29yZG92YS5zdGF0dXNiYXIgcmVxdWlyZWRcclxuXHRcdFx0XHRTdGF0dXNCYXIuc3R5bGVEZWZhdWx0KCk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHdpbmRvdy5vbmVycm9yID0gZnVuY3Rpb24oZXJyb3JNc2csIHVybCwgbGluZU51bWJlcikge1xyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0fTtcclxuXHRcdFx0JHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZVN0YXJ0JywgZnVuY3Rpb24oZXZlbnQsIHRvU3RhdGUsIHRvUGFyYW1zLCBmcm9tU3RhdGUpIHtcclxuXHRcdFx0XHRpZiAoZnJvbVN0YXRlLm5hbWUgIT0gJ2NoYXRCb3gnKSB7XHJcblx0XHRcdFx0XHQvLyRpb25pY0xvYWRpbmcuc2hvdygpO1xyXG5cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0JHJvb3RTY29wZS4kb24oXCIkc3RhdGVDaGFuZ2VFcnJvclwiLCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUucG9zdC5hbGwnKTtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHJcblx0XHRmdW5jdGlvbiBiYWNrQnV0dG9uRXhpdCgpIHtcclxuXHRcdFx0JGlvbmljUGxhdGZvcm0ucmVnaXN0ZXJCYWNrQnV0dG9uQWN0aW9uKGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0XHRpZiAoJHJvb3RTY29wZS5iYWNrQnV0dG9uUHJlc3NlZE9uY2VUb0V4aXQpIHtcclxuXHRcdFx0XHRcdGlvbmljLlBsYXRmb3JtLmV4aXRBcHAoKTtcclxuXHRcdFx0XHR9IGVsc2UgaWYgKCRpb25pY0hpc3RvcnkuYmFja1ZpZXcoKSkge1xyXG5cdFx0XHRcdFx0JGlvbmljSGlzdG9yeS5nb0JhY2soKTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0JHJvb3RTY29wZS5iYWNrQnV0dG9uUHJlc3NlZE9uY2VUb0V4aXQgPSB0cnVlO1xyXG5cdFx0XHRcdFx0d2luZG93LnBsdWdpbnMudG9hc3Quc2hvd1Nob3J0Q2VudGVyKFxyXG5cdFx0XHRcdFx0XHRcIlByZXNzIGJhY2sgYnV0dG9uIGFnYWluIHRvIGV4aXRcIixcclxuXHRcdFx0XHRcdFx0ZnVuY3Rpb24oYSkge30sXHJcblx0XHRcdFx0XHRcdGZ1bmN0aW9uKGIpIHt9XHJcblx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdCRyb290U2NvcGUuYmFja0J1dHRvblByZXNzZWRPbmNlVG9FeGl0ID0gZmFsc2U7XHJcblx0XHRcdFx0XHR9LCAyMDAwKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0fSwgMTAxKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhcHBTdGF0dXMoKSB7XHJcblx0XHRcdCRpb25pY1BsYXRmb3JtLm9uKCdwYXVzZScsIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFJlcXVlc3RzU2VydmljZS5yZWdpc3RlcigpO1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0Ly8gVGhlIHJlc3VtZSBldmVudCBmaXJlcyB3aGVuIHRoZSBuYXRpdmUgcGxhdGZvcm1cclxuXHRcdFx0Ly8gIHB1bGxzIHRoZSBhcHBsaWNhdGlvbiBvdXQgZnJvbSB0aGUgYmFja2dyb3VuZC5cclxuXHRcdFx0JGlvbmljUGxhdGZvcm0ub24oJ3Jlc3VtZScsIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFJlcXVlc3RzU2VydmljZS5yZWdpc3RlcigpO1xyXG5cclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbm90aWZpY2F0aW9uRnVuY3Rpb24oKSB7XHJcblx0XHRcdFJlcXVlc3RzU2VydmljZS5yZWdpc3RlcigpO1xyXG5cclxuXHRcdFx0JHJvb3RTY29wZS4kb24oJyRjb3Jkb3ZhUHVzaFY1Om5vdGlmaWNhdGlvblJlY2VpdmVkJywgZnVuY3Rpb24oZXZlbnQsIGRhdGEpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhkYXRhKTtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhldmVudCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0Ly8gdHJpZ2dlcmVkIGV2ZXJ5IHRpbWUgZXJyb3Igb2NjdXJzXHJcblx0XHRcdCRyb290U2NvcGUuJG9uKCckY29yZG92YVB1c2hWNTplcnJvck9jdXJyZWQnLCBmdW5jdGlvbihldmVudCwgZSkge1xyXG5cclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fV0pO1xyXG5cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4vLyByZWQsIHBpbmssIHB1cnBsZSwgZGVlcC1wdXJwbGUsIGluZGlnbywgYmx1ZSwgbGlnaHQtYmx1ZSwgY3lhbiwgdGVhbCwgZ3JlZW4sLFxyXG4vL2xpZ2h0LWdyZWVuLCBsaW1lLCB5ZWxsb3csIGFtYmVyLCBvcmFuZ2UsIGRlZXAtb3JhbmdlLCBicm93biwgZ3JleSwgYmx1ZS1ncmV5XHJcbi8vIC5jb25maWcoZnVuY3Rpb24oJG1kVGhlbWluZ1Byb3ZpZGVyKSB7XHJcbi8vICAgJG1kVGhlbWluZ1Byb3ZpZGVyLnRoZW1lKCdkZWZhdWx0JylcclxuLy8gICAgIC5wcmltYXJ5UGFsZXR0ZSgncGluaycpXHJcbi8vICAgICAuYWNjZW50UGFsZXR0ZSgnb3JhbmdlJyk7XHJcbi8vIH0pOy8vXCJhbmd1bGFyLW1hdGVyaWFsXCI6IFwibWFzdGVyXCIsXCJuZy1kaXJlY3RpdmUtbGF6eS1pbWFnZVwiOiBcImFma2wtbGF6eS1pbWFnZSNeMC4zLjFcIlxyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwuY2hhdCcsIFsnbmdGaWxlVXBsb2FkJ10pXHJcblx0XHQuY29uZmlnKFsnJHN0YXRlUHJvdmlkZXInLCBjb25maWddKTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlcikge1xyXG5cdFx0JHN0YXRlUHJvdmlkZXJcclxuXHRcdFx0LnN0YXRlKCdob21lLmNoYXQnLCB7XHJcblx0XHRcdFx0dXJsOiAnL2NoYXQnLFxyXG5cdFx0XHRcdGFic3RyYWN0OiB0cnVlLFxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQnY2hhdC10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL2NoYXQvdmlld3MvY2hhdFBhcmVudC5odG1sJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ0NoYXRQYXJlbnRDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAncHBjJ1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH0pLnN0YXRlKCdob21lLmNoYXQuYWxsJywge1xyXG5cdFx0XHRcdHVybDogJy9hbGwnLFxyXG5cclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J2NoYXQtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9jaGF0L3ZpZXdzL2FsbENoYXQuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdBbGxDaGF0Q29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ2FjYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLnN0YXRlKCdob21lLmNoYXQucmV2ZWFsZWQnLCB7XHJcblx0XHRcdFx0dXJsOiAnL3JldmVhbGVkJyxcclxuXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdjaGF0LXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvY2hhdC92aWV3cy9yZXZlYWxlZENoYXQuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdSZXZlYWxlZENoYXRDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAncnBjJ1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSkuc3RhdGUoJ2NoYXRCb3gnLCB7XHJcblx0XHRcdFx0dXJsOiAnL2NoYXRCb3gvOnVzZXInLFxyXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL2NoYXQvdmlld3MvY2hhdEJveC5odG1sJyxcclxuXHRcdFx0XHRjb250cm9sbGVyOiAnQ2hhdEJveENvbnRyb2xsZXInLFxyXG5cdFx0XHRcdGNvbnRyb2xsZXJBczogJ2NiYycsXHJcblx0XHRcdFx0cmVzb2x2ZToge1xyXG5cdFx0XHRcdFx0YmxvY2tlZDogWyAnJHN0YXRlUGFyYW1zJywgJ2Jsb2NrU2VydmljZScsJyRxJywgYmxvY2tlZF1cclxuXHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0fSk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBibG9ja2VkKCRzdGF0ZVBhcmFtcyxibG9ja1NlcnZpY2UsJHEpe1xyXG5cdFx0dmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuXHRcdGJsb2NrU2VydmljZS5jaGVjaygkc3RhdGVQYXJhbXMudXNlcikudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcblx0XHRcdGRlZmVyLnJlc29sdmUocmVzcG9uc2UuZGF0YS5ibG9ja2VkKTtcdFx0XHRcdFx0XHJcblx0XHR9KS5jYXRjaChmdW5jdGlvbigpe1xyXG5cdFx0XHRkZWZlci5yZXNvbHZlKCk7XHRcclxuXHRcdH0pO1xyXG5cdFx0cmV0dXJuIGRlZmVyLnByb21pc2U7XHJcblx0fVxyXG5cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucGVvcGxlJywgW10pXHJcblx0XHQuY29uZmlnKFsnJHN0YXRlUHJvdmlkZXInLCBjb25maWddKTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlcikge1xyXG5cdFx0JHN0YXRlUHJvdmlkZXJcclxuXHRcdFx0LnN0YXRlKCdob21lLnBlb3BsZScse1xyXG5cdFx0XHRcdHVybDogJy9wZW9wbGUnLFxyXG5cdFx0XHRcdGFic3RyYWN0OiB0cnVlLFxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQncGVvcGxlLXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcGVvcGxlL3ZpZXdzL3Blb3BsZVBhcmVudC5odG1sJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ1Blb3BsZVBhcmVudENvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICdwcGMnXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdFxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5wZW9wbGUuYWxsJyx7XHJcblx0XHRcdFx0dXJsOiAnL2FsbCcsXHJcblx0XHRcdFx0XHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdwZW9wbGUtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wZW9wbGUvdmlld3MvYWxsUGVvcGxlLmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnQWxsUGVvcGxlQ29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ2FwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHRcdFx0XHRcclxuXHRcdFx0fSkuc3RhdGUoJ2hvbWUucGVvcGxlLnJldmVhbGVkJyx7XHJcblx0XHRcdFx0dXJsOiAnL3JldmVhbGVkJyxcclxuXHRcdFx0XHRcclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J3Blb3BsZS10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3Blb3BsZS92aWV3cy9yZXZlYWxlZFBlb3BsZS5odG1sJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ1JldmVhbGVkUGVvcGxlQ29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3JwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHRcdFx0XHRcclxuXHRcdFx0fSkuc3RhdGUoJ2hvbWUucGVvcGxlLnJlY2VpdmVkJyx7XHJcblx0XHRcdFx0dXJsOiAnL3JlY2VpdmVkJyxcclxuXHRcdFx0XHRcclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J3Blb3BsZS10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3Blb3BsZS92aWV3cy9yZWNlaXZlZFBlb3BsZS5odG1sJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ1JlY2VpdmVkUGVvcGxlQ29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3JwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHRcdFx0XHRcclxuXHRcdFx0fSkuc3RhdGUoJ2hvbWUucGVvcGxlLm5lYXJieScse1xyXG5cdFx0XHRcdHVybDogJy9uZWFyYnknLFxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQncGVvcGxlLXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcGVvcGxlL3ZpZXdzL25lYXJieVBlb3BsZS5odG1sJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ05lYXJieVBlb3BsZUNvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICducGMnXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVx0XHRcdFx0XHJcblx0XHRcdH0pO1xyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwuaG9tZScsIFtdKVxyXG5cdFx0LmNvbmZpZyhbJyRzdGF0ZVByb3ZpZGVyJywgJyRhdXRoUHJvdmlkZXInLCBjb25maWddKTtcclxuXHJcblx0ZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyLCAkYXV0aFByb3ZpZGVyKSB7XHJcblx0XHR2YXIgZmJDbGllbnRJZCA9ICcxMTM0MjA4ODMwMDQxNjMyJztcclxuXHRcdHZhciByZWRpcmVjdFVybCA9IFwiaHR0cDovL2xvY2FsaG9zdDo4MTAwXCI7XHJcblx0XHR2YXIgcmVkaXJlY3RVcmwyID0gXCJodHRwczovL2JhbmFuYS1zdXJwcmlzZS0zMTMzMi5oZXJva3VhcHAuY29tXCI7XHJcblx0XHR2YXIgYXV0aGVudGljYXRlVXJsID0gcmVkaXJlY3RVcmwyICsgJy9hdXRoZW50aWNhdGUnO1xyXG5cdFx0JGF1dGhQcm92aWRlci5mYWNlYm9vayh7XHJcblx0XHRcdGNsaWVudElkOiBmYkNsaWVudElkLFxyXG5cdFx0XHR1cmw6IGF1dGhlbnRpY2F0ZVVybCArICcvYXV0aC9mYWNlYm9vaycsXHJcblx0XHRcdHJlZGlyZWN0VXJpOiBcImh0dHBzOi8vYmFuYW5hLXN1cnByaXNlLTMxMzMyLmhlcm9rdWFwcC5jb20vXCJcclxuXHRcdH0pO1xyXG5cdFx0JGF1dGhQcm92aWRlci5nb29nbGUoe1xyXG5cdFx0XHRjbGllbnRJZDogJzc0MjY3NjgzNzI2NS0zM2pudGtkNjBwODdna3JoNDhucWU2Y2RkOG50c2ZsNS5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbScsXHJcblx0XHRcdHVybDogYXV0aGVudGljYXRlVXJsICsgJy9hdXRoL2dvb2dsZScsXHJcblx0XHRcdHJlZGlyZWN0VXJpOiByZWRpcmVjdFVybFxyXG5cdFx0fSk7XHJcblx0XHQkc3RhdGVQcm92aWRlci5zdGF0ZSgnYXV0aGVudGljYXRlJywge1xyXG5cdFx0XHR1cmw6ICcvYXV0aGVudGljYXRlJyxcclxuXHRcdFx0Y29udHJvbGxlcjogJ0F1dGhlbnRpY2F0aW9uQ29udHJvbGxlcicsXHJcblx0XHRcdGNvbnRyb2xsZXJBczogJ2FjJyxcclxuXHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvaG9tZS92aWV3cy9hdXRoZW50aWNhdGlvblBhZ2UuaHRtbCcsXHJcblx0XHRcdFxyXG5cclxuXHRcdH0pLnN0YXRlKCdob21lJywge1xyXG5cdFx0XHR1cmw6IFwiL2hvbWVcIixcclxuXHRcdFx0YWJzdHJhY3Q6IHRydWUsXHJcblx0XHRcdHRlbXBsYXRlVXJsOiBcImFwcC9ob21lL3ZpZXdzL3RhYnMuaHRtbFwiLFxyXG5cdFx0XHRjb250cm9sbGVyOiAnSG9tZUNvbnRyb2xsZXInLFxyXG5cdFx0XHRjb250cm9sbGVyQXM6ICdoYycsXHJcblx0XHRcdHJlc29sdmU6IHtcclxuXHRcdFx0XHRyZWRpcmVjdElmVXNlck5vdEF1dGhlbnRpY2F0ZWQ6IFsnJHEnLCAnJGF1dGgnLCAnJHN0YXRlJywgJyR0aW1lb3V0JywgcmVkaXJlY3RJZlVzZXJOb3RBdXRoZW50aWNhdGVkXVxyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cclxuXHJcblx0ZnVuY3Rpb24gcmVkaXJlY3RJZlVzZXJOb3RBdXRoZW50aWNhdGVkKCRxLCAkYXV0aCwgJHN0YXRlLCAkdGltZW91dCkge1xyXG5cdFx0dmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuXHJcblx0XHRpZiAoJGF1dGguaXNBdXRoZW50aWNhdGVkKCkpIHtcclxuXHJcblx0XHRcdGRlZmVyLnJlc29sdmUoKTtcclxuXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHQkdGltZW91dChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkc3RhdGUuZ28oJ2F1dGhlbnRpY2F0ZScpO1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0Ly9kZWZlci5yZWplY3QoKTtcclxuXHRcdH1cclxuXHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cdH1cclxuXHRmdW5jdGlvbiByZWRpcmVjdElmVXNlckF1dGhlbnRpY2F0ZWQoJHEsICRhdXRoKSB7XHJcblx0XHR2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xyXG5cclxuXHRcdGlmICgkYXV0aC5pc0F1dGhlbnRpY2F0ZWQoKSkge1xyXG5cdFx0XHRkZWZlci5yZWplY3QoKTtcclxuXHRcdFx0LyokdGltZW91dChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkc3RhdGUuZ28oJ2F1dGhlbnRpY2F0ZScpO1xyXG5cdFx0XHR9KTsqL1xyXG5cdFx0XHRcclxuXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRjb25zb2xlLmxvZyhcIm5vdCBhdWRzbmZcIik7XHJcblx0XHRcdGRlZmVyLnJlc29sdmUoKTtcclxuXHRcdFx0Ly9kZWZlci5yZWplY3QoKTtcclxuXHRcdH1cclxuXHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cdH1cclxuXHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBvc3QnLCBbXSlcclxuXHRcdC5jb25maWcoWyckc3RhdGVQcm92aWRlcicsIGNvbmZpZ10pO1xyXG5cclxuXHJcblx0ZnVuY3Rpb24gY29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XHJcblxyXG5cdFx0JHN0YXRlUHJvdmlkZXJcclxuXHRcdFx0LnN0YXRlKCdob21lLnBvc3QnLCB7XHJcblx0XHRcdFx0dXJsOiAnL3Bvc3QnLFxyXG5cdFx0XHRcdGFic3RyYWN0OiB0cnVlLFxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQncG9zdC10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3Bvc3Qvdmlld3MvcG9zdFBhcmVudC5odG1sJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ1Bvc3RQYXJlbnRDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAncHBjJ1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH0pLnN0YXRlKCdob21lLnBvc3QuYWxsJywge1xyXG5cdFx0XHRcdHVybDogJy9hbGwnLFxyXG5cclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J3Bvc3QtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wb3N0L3ZpZXdzL2FsbFBvc3QuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdBbGxQb3N0Q29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ2FwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLnN0YXRlKCdob21lLnBvc3QubGF0ZXN0Jywge1xyXG5cdFx0XHRcdHVybDogJy9sYXRlc3QnLFxyXG5cclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J3Bvc3QtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wb3N0L3ZpZXdzL2xhdGVzdFBvc3QuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdMYXRlc3RQb3N0Q29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ2xwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLnN0YXRlKCdob21lLnBvc3QucG9wdWxhcicsIHtcclxuXHRcdFx0XHR1cmw6ICcvcG9wdWxhcicsXHJcblxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQncG9zdC10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3Bvc3Qvdmlld3MvcG9wdWxhclBvc3QuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdQb3B1bGFyUG9zdENvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICdwcGMnXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KS5zdGF0ZSgnaG9tZS5wb3N0Lm5lYXJieScsIHtcclxuXHRcdFx0XHR1cmw6ICcvbmVhcmJ5JyxcclxuXHJcblx0XHRcdFx0dmlld3M6IHtcclxuXHRcdFx0XHRcdCdwb3N0LXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcG9zdC92aWV3cy9uZWFyYnlQb3N0Lmh0bWwnLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiAnTmVhcmJ5UG9zdENvbnRyb2xsZXInLFxyXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyQXM6ICducGMnXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KS5zdGF0ZSgncG9zdFN1Ym1pdCcsIHtcclxuXHRcdFx0XHR1cmw6ICcvc3VibWl0JyxcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wb3N0L3ZpZXdzL2NyZWF0ZVBvc3QuaHRtbCcsXHJcblx0XHRcdFx0Y29udHJvbGxlcjogJ0NyZWF0ZVBvc3RDb250cm9sbGVyJyxcclxuXHRcdFx0XHRjb250cm9sbGVyQXM6ICdjcGMnXHJcblx0XHRcdFx0Lyp2aWV3czoge1xyXG5cdFx0XHRcdFx0J3Bvc3RTdWJtaXQtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9Ki9cclxuXHRcdFx0fSkuc3RhdGUoJ3NpbmdsZVBvc3QnLCB7XHJcblx0XHRcdFx0dXJsOiAnL3Bvc3QvOmlkJyxcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wb3N0L3ZpZXdzL3NpbmdsZVBvc3QuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdTaW5nbGVQb3N0Q29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3NwYydcclxuXHRcdFx0XHQvKnZpZXdzOiB7XHJcblx0XHRcdFx0XHQnc2luZ2xlUG9zdC10YWInOiB7XHJcblx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0qL1xyXG5cclxuXHJcblx0XHRcdH0pO1xyXG5cdH1cclxuXHJcblxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC51c2VyJywgW10pLmNvbmZpZyhbJyRzdGF0ZVByb3ZpZGVyJyxcclxuXHRcdGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyKSB7XHJcblx0XHRcdCRzdGF0ZVByb3ZpZGVyLlxyXG5cdFx0XHRzdGF0ZSgnaG9tZS51c2VyJywge1xyXG5cdFx0XHRcdHVybDogJy91c2VyJyxcclxuXHRcdFx0XHQnYWJzdHJhY3QnOiB0cnVlLFxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQndXNlci10YWInOiB7XHJcblx0XHRcdFx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3VzZXIvdmlld3MvdXNlclBhcmVudFBhZ2UuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdVc2VyUGFyZW50Q29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3VwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHR9KS5cclxuXHRcdFx0c3RhdGUoJ2hvbWUudXNlci51c2VyTWVQYWdlJywge1xyXG5cdFx0XHRcdHVybDogJy91c2VyTWVQYWdlJyxcclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J3VzZXItdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC91c2VyL3ZpZXdzL3VzZXJNZVBhZ2UuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdVc2VyTWVQYWdlQ29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3VtcGMnLFxyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHR9KS5cclxuXHRcdFx0c3RhdGUoJ2hvbWUudXNlclBhZ2UnLCB7XHJcblx0XHRcdFx0dXJsOiAnL3VzZXJQYWdlLzp1c2VyJyxcclxuXHRcdFx0XHRyZXNvbHZlOiB7XHJcblx0XHRcdFx0XHRibG9ja2VkOiBbICckc3RhdGVQYXJhbXMnLCAnYmxvY2tTZXJ2aWNlJywnJHEnLCBibG9ja2VkXSxcclxuXHRcdFx0XHRcdGZyaWVuZHM6IFsgJyRzdGF0ZVBhcmFtcycsICdyZXZlYWxTZXJ2aWNlJywnJHEnLCBmcmllbmRzXVxyXG5cclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHZpZXdzOiB7XHJcblx0XHRcdFx0XHQnZXh0cmEtdGFiJzoge1xyXG5cdFx0XHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC91c2VyL3ZpZXdzL3VzZXJQcm9maWxlUGFnZS5odG1sJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJ1VzZXJQYWdlQ29udHJvbGxlcicsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXJBczogJ3VwYydcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdFxyXG5cclxuXHRcdFx0fSlcclxuXHRcdFx0LnN0YXRlKCdob21lLnVzZXJFZGl0UGFnZScsIHtcclxuXHRcdFx0XHR1cmw6ICcvdXNlckVkaXRQYWdlJyxcclxuXHRcdFx0XHR2aWV3czoge1xyXG5cdFx0XHRcdFx0J2V4dHJhLXRhYic6IHtcclxuXHRcdFx0XHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvdXNlci92aWV3cy91c2VyRWRpdFBhZ2UuaHRtbCcsXHJcblx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6ICdVc2VyRWRpdFBhZ2VDb250cm9sbGVyJyxcclxuXHRcdFx0XHRcdFx0Y29udHJvbGxlckFzOiAndWVwYycsXHJcblx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdF0pO1xyXG5cdGZ1bmN0aW9uIGJsb2NrZWQoJHN0YXRlUGFyYW1zLGJsb2NrU2VydmljZSwkcSl7XHJcblx0XHR2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xyXG5cdFx0YmxvY2tTZXJ2aWNlLmNoZWNrKCRzdGF0ZVBhcmFtcy51c2VyKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuXHRcdFx0XHJcblx0XHRcdGlmKHJlc3BvbnNlLmRhdGEuYmxvY2tlZD09PXRydWUpe1xyXG5cdFx0XHRcdHdpbmRvdy5hbGVydChcIkJsb2NrZWQgcHJvZmlsZVwiKTtcclxuXHRcdFx0XHR3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRkZWZlci5yZXNvbHZlKCk7XHRcclxuXHRcdFx0fVxyXG5cdFx0XHRcclxuXHRcdFx0XHJcblx0XHR9KS5jYXRjaChmdW5jdGlvbigpe1xyXG5cdFx0XHRkZWZlci5yZXNvbHZlKCk7XHRcclxuXHRcdH0pO1xyXG5cdFx0cmV0dXJuIGRlZmVyLnByb21pc2U7XHJcblx0fVxyXG5cdGZ1bmN0aW9uIGZyaWVuZHMoJHN0YXRlUGFyYW1zLHJldmVhbFNlcnZpY2UsJHEpe1xyXG5cdFx0dmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuXHJcblxyXG5cdFx0cmV2ZWFsU2VydmljZS5jaGVjaygkc3RhdGVQYXJhbXMudXNlcikudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcblx0XHRcdFxyXG5cdFx0XHRkZWZlci5yZXNvbHZlKHJlc3BvbnNlLmRhdGEuc3RhdHVzKTtcclxuXHRcdFx0Ly9yZXR1cm4gO1xyXG5cdFx0fSkuY2F0Y2goZnVuY3Rpb24oKXtcclxuXHRcdFx0XHJcblx0XHR9KTtcclxuXHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cdH1cclxuXHJcblx0XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmNoYXQnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ0FsbENoYXRDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ2NoYXRTZXJ2aWNlJywgJyRpb25pY0xvYWRpbmcnLCAnU29ja2V0JyxBbGxDaGF0Q29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBBbGxDaGF0Q29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgY2hhdFNlcnZpY2UsICRpb25pY0xvYWRpbmcsU29ja2V0KSB7XHJcblx0XHR2YXIgYWNjID0gdGhpcztcclxuXHRcdGFjYy5nZXRBbGxDaGF0Um9vbXMgPSBnZXRBbGxDaGF0Um9vbXM7XHJcblx0XHRhY2MubG9hZE1vcmVDaGF0cyA9IGxvYWRNb3JlQ2hhdHM7XHJcblx0XHRhY2MucHVsbFJlZnJlc2hDaGF0cyA9IHB1bGxSZWZyZXNoQ2hhdHM7XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0U29ja2V0Lm9uKCduZXdNZXNzYWdlUmVjZWl2ZWQnLCBtZXNzYWdlUmVjZWl2ZWQpO1xyXG5cdFx0XHJcblx0XHRhY2MuY2hhdFBhZ2UgPSBmdW5jdGlvbih1c2VySWQpe1xyXG5cdFx0XHQkc3RhdGUuZ28oJ2NoYXRCb3gnLCB7IHVzZXI6IHVzZXJJZH0pO1xyXG5cdFx0fTtcclxuXHRcdGZ1bmN0aW9uIG1lc3NhZ2VSZWNlaXZlZChtZXNzYWdlKXtcclxuXHRcdFx0dmFyIG5ld0NoYXRSb29tID0ge307XHJcblx0XHRcdG5ld0NoYXRSb29tLmNyZWF0b3IyID0gbWVzc2FnZS51c2VyO1xyXG5cdFx0XHRuZXdDaGF0Um9vbS5uZXdDaGF0ID0gdHJ1ZTtcclxuXHRcdFx0bmV3Q2hhdFJvb20ubGFzdE1lc3NhZ2UgPSB7XHJcblx0XHRcdFx0dXNlcjptZXNzYWdlLnVzZXIuX2lkLFxyXG5cdFx0XHRcdF9pZDptZXNzYWdlLl9pZCxcclxuXHRcdFx0XHRtZXNzYWdlOm1lc3NhZ2UubWVzc2FnZSxcclxuXHRcdFx0XHR0eXBlOiBtZXNzYWdlLnR5cGVcclxuXHRcdFx0fTtcclxuXHRcdFxyXG5cclxuXHRcdFx0Zm9yKHZhciBjaD0wO2NoPGFjYy5jaGF0Um9vbXNMaXN0Lmxlbmd0aDtjaCsrKXtcclxuXHRcdFx0XHRpZihuZXdDaGF0Um9vbS5jcmVhdG9yMi5faWQ9PWFjYy5jaGF0Um9vbXNMaXN0W2NoXS5jcmVhdG9yMi5faWQpe1xyXG5cdFx0XHRcdFx0aWYgKG5ld0NoYXRSb29tLmxhc3RNZXNzYWdlLl9pZCAhPT0gYWNjLmNoYXRSb29tc0xpc3RbY2hdLmxhc3RNZXNzYWdlLl9pZCkge1xyXG5cdFx0XHRcdFx0XHRhY2MuY2hhdFJvb21zTGlzdC5zcGxpY2UoY2gsMSk7XHJcblx0XHRcdFx0XHRcdGFjYy5jaGF0Um9vbXNMaXN0LnVuc2hpZnQobmV3Q2hhdFJvb20pO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoQ2hhdHMoKSB7XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVDaGF0cygpIHtcclxuXHRcdFx0YWNjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldEFsbENoYXRSb29tcygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldEFsbENoYXRSb29tcygpIHtcclxuXHRcdFx0Y2hhdFNlcnZpY2UuZ2V0QWxsQ2hhdFJvb21zKGFjYy5wYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UuZGF0YS5kb2NzLCBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRcdFx0YWNjLmNoYXRSb29tc0xpc3QucHVzaCh2YWx1ZSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0YWNjLm5vUG9zdHMgPSFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGFjYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFjYy5jaGF0Um9vbXNMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YWNjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHRhY2MuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLmluZmluaXRlU2Nyb2xsQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGFjYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0YWNjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0YWNjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRwYWdlOiAxLFxyXG5cdFx0XHRcdGxpbWl0OiAyNVxyXG5cdFx0XHR9O1xyXG5cdFx0XHRhY2MuY2hhdFJvb21zTGlzdCA9IFtdO1xyXG5cdFx0XHRnZXRBbGxDaGF0Um9vbXMoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmNoYXQnKVxyXG5cclxuXHQuY29udHJvbGxlcignQ2hhdEJveENvbnRyb2xsZXInLCBbJyRzY29wZScsICckdGltZW91dCcsICdTb2NrZXQnLCAnJHN0YXRlUGFyYW1zJywgJ3VzZXJEYXRhJywgJ2hvbWVTZXJ2aWNlJywgJ2NoYXRTZXJ2aWNlJywgJyRpb25pY1Njcm9sbERlbGVnYXRlJywgJ3VzZXJTZXJ2aWNlJywgJ1VwbG9hZCcsICckaW9uaWNMb2FkaW5nJywgJyR3aW5kb3cnLCAnYmxvY2tlZCcsIENoYXRCb3hDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIENoYXRCb3hDb250cm9sbGVyKCRzY29wZSwgJHRpbWVvdXQsIFNvY2tldCwgJHN0YXRlUGFyYW1zLCB1c2VyRGF0YSwgaG9tZVNlcnZpY2UsIGNoYXRTZXJ2aWNlLCAkaW9uaWNTY3JvbGxEZWxlZ2F0ZSwgdXNlclNlcnZpY2UsIFVwbG9hZCwgJGlvbmljTG9hZGluZywgJHdpbmRvdywgYmxvY2tlZCkge1xyXG5cdFx0dmFyIGNiYyA9IHRoaXM7XHJcblx0XHRjYmMuaXNCbG9ja2VkID0gYmxvY2tlZDtcclxuXHRcdGlmIChjYmMuaXNCbG9ja2VkID09PSB0cnVlKSB7XHJcblx0XHRcdHdpbmRvdy5hbGVydChcImJsb2NrZWQgcHJvZmlsZVwiKTtcclxuXHRcdH1cclxuXHRcdGNiYy5jdXJyZW50VXNlciA9IHVzZXJEYXRhLmdldFVzZXIoKS5faWQ7XHJcblx0XHRjYmMucmVjZWl2ZXJVc2VySUQgPSAkc3RhdGVQYXJhbXMudXNlcjtcclxuXHRcdGNiYy5jaGF0TGlzdCA9IFtdO1xyXG5cdFx0Y2JjLmNoYXRSb29tSWQgPSAnJztcclxuXHRcdGNiYy5sb2FkTW9yZUNoYXRzID0gbG9hZE1vcmVDaGF0cztcclxuXHRcdGNiYy5zY3JvbGxCb3R0b20gPSBzY3JvbGxCb3R0b207XHJcblx0XHRjYmMubWVzc2FnZUxvYWRpbmcgPSBmYWxzZTtcclxuXHRcdGNiYy5tZXNzYWdlVHJ5Q291bnQgPSAwO1xyXG5cdFx0Y2JjLnBhcmFtcyA9IHtcclxuXHRcdFx0cGFnZTogMSxcclxuXHRcdFx0bGltaXQ6IDVcclxuXHRcdH07XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGxvYWRNb3JlQ2hhdHMoKSB7XHJcblx0XHRcdGNiYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXRDaGF0TWVzc2FnZXMoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSZWNlaXZlcigpIHtcclxuXHRcdFx0dXNlclNlcnZpY2UuZ2V0VXNlcihjYmMucmVjZWl2ZXJVc2VySUQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRjYmMucmVjZWl2ZXJVc2VyID0gcmVzcG9uc2UuZGF0YTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblxyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIHNjcm9sbEJvdHRvbSgpIHtcclxuXHRcdFx0JHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JGlvbmljU2Nyb2xsRGVsZWdhdGUuc2Nyb2xsQm90dG9tKHRydWUpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0Q2hhdE1lc3NhZ2VzKCkge1xyXG5cdFx0XHRjaGF0U2VydmljZS5nZXRDaGF0TWVzc2FnZXMoY2JjLmNoYXRSb29tSWQsIGNiYy5wYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblxyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXMuZGF0YS5kb2NzLCBmdW5jdGlvbihjaGF0KSB7XHJcblx0XHRcdFx0XHRjYmMuY2hhdExpc3QudW5zaGlmdChjaGF0KTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24ocmVzKSB7XHJcblxyXG5cdFx0XHRcdGNvbnNvbGUubG9nKHJlcyk7XHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0c2Nyb2xsQm90dG9tKCk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHQkaW9uaWNMb2FkaW5nLnNob3coKTtcclxuXHRcdFx0Y2hhdFNlcnZpY2UuZ2V0Q2hhdFJvb20oY2JjLnJlY2VpdmVyVXNlcklEKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cdFx0XHRcdGNiYy5jaGF0Um9vbSA9IHJlcy5kYXRhO1xyXG5cdFx0XHRcdGNiYy5jaGF0Um9vbUlkID0gcmVzLmRhdGEuX2lkO1xyXG5cclxuXHRcdFx0XHRzb2NrZXRKb2luKCk7XHJcblx0XHRcdFx0Z2V0Q2hhdE1lc3NhZ2VzKCk7XHJcblxyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0Z2V0UmVjZWl2ZXIoKTtcclxuXHJcblxyXG5cclxuXHRcdH1cclxuXHJcblxyXG5cdFx0ZnVuY3Rpb24gc29ja2V0Sm9pbigpIHtcclxuXHRcdFx0U29ja2V0LmVtaXQoJ2FkZFRvQ2hhdFJvb20nLCB7ICdyb29tSWQnOiBjYmMuY2hhdFJvb21JZCB9KTtcclxuXHRcdFx0U29ja2V0Lm9uKCdtZXNzYWdlUmVjZWl2ZWQnLCBmdW5jdGlvbihtZXNzYWdlKSB7XHJcblxyXG5cdFx0XHRcdGNiYy5jaGF0TGlzdC5wdXNoKG1lc3NhZ2UpO1xyXG5cdFx0XHRcdHNjcm9sbEJvdHRvbSgpO1xyXG5cdFx0XHRcdGNiYy5tZXNzYWdlTG9hZGluZyA9IGZhbHNlO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0Y2JjLmNsaWNrU3VibWl0ID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHRjYmMubWVzc2FnZUxvYWRpbmcgPSB0cnVlO1xyXG5cdFx0XHRjYmMuZm9jdXNJbnB1dCA9IHRydWU7XHJcblxyXG5cdFx0XHRpZiAod2luZG93LmNvcmRvdmEgJiYgKCF3aW5kb3cuY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmlzVmlzaWJsZSkpIHtcclxuXHRcdFx0XHR3aW5kb3cuY29yZG92YS5wbHVnaW5zLktleWJvYXJkLnNob3coKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRzY3JvbGxCb3R0b20oKTtcclxuXHRcdFx0dmFyIGNoYXRPYmogPSB7ICdtZXNzYWdlJzogY2JjLm15TXNnLCByZWNlaXZlcjogJHN0YXRlUGFyYW1zLnVzZXIsICdyb29tSWQnOiBjYmMuY2hhdFJvb21JZCB9O1xyXG5cdFx0XHRjaGF0U2VydmljZS5zZW5kQ2hhdE1lc3NhZ2UoY2hhdE9iaikudGhlbihmdW5jdGlvbihyZXMpIHtcclxuXHRcdFx0XHRjYmMubXlNc2cgPSAnJztcclxuXHRcdFx0XHRjYmMuY2hhdExpc3QucHVzaChyZXMuZGF0YS5tZXNzYWdlKTtcclxuXHRcdFx0XHRzY3JvbGxCb3R0b20oKTtcclxuXHRcdFx0XHRjYmMubWVzc2FnZVRyeUNvdW50ID0gMDtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRjYmMubWVzc2FnZVRyeUNvdW50ICs9IDE7XHJcblxyXG5cdFx0XHRcdGlmIChjYmMubWVzc2FnZVRyeUNvdW50IDw9IDMpIHtcclxuXHRcdFx0XHRcdGNiYy5jbGlja1N1Ym1pdCgpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0Y2JjLm1lc3NhZ2VMb2FkaW5nID0gZmFsc2U7XHJcblx0XHRcdH0pO1xyXG5cclxuXHJcblx0XHR9O1xyXG5cclxuXHJcblx0XHRjYmMuc3VibWl0VXBsb2FkID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdGNiYy5tZXNzYWdlTG9hZGluZyA9IHRydWU7XHJcblx0XHRcdGNiYy5maWxlLnVwbG9hZCA9IFVwbG9hZC51cGxvYWQoe1xyXG5cdFx0XHRcdHVybDogaG9tZVNlcnZpY2UuYmFzZVVSTCArICd1cGxvYWQvc2luZ2xlVXBsb2FkJyxcclxuXHRcdFx0XHRkYXRhOiB7IGZpbGU6IGNiYy5maWxlIH1cclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHRjYmMuZmlsZS51cGxvYWQudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdGNiYy5maWxlLnJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7XHJcblx0XHRcdFx0Y2JjLnVwbG9hZGVkSW1hZ2UgPSByZXNwb25zZS5kYXRhO1xyXG5cdFx0XHRcdGNiYy5jYW5jZWxVcGxvYWQoKTtcclxuXHRcdFx0XHR2YXIgY2hhdE9iaiA9IHsgJ21lc3NhZ2UnOiBjYmMudXBsb2FkZWRJbWFnZSwgcmVjZWl2ZXI6ICRzdGF0ZVBhcmFtcy51c2VyLCAncm9vbUlkJzogY2JjLmNoYXRSb29tSWQsIHR5cGU6ICdpbWcnIH07XHJcblx0XHRcdFx0Y2hhdFNlcnZpY2Uuc2VuZENoYXRNZXNzYWdlKGNoYXRPYmopLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblx0XHRcdFx0XHRzY3JvbGxCb3R0b20oKTtcclxuXHRcdFx0XHRcdGNiYy5jaGF0TGlzdC5wdXNoKHJlcy5kYXRhLm1lc3NhZ2UpO1xyXG5cdFx0XHRcdFx0Y2JjLm1lc3NhZ2VMb2FkaW5nID0gZmFsc2U7XHJcblx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cclxuXHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHRcdGNiYy5jYW5jZWxVcGxvYWQgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0Y2JjLnNob3dUZW1wSW1hZ2UgPSBmYWxzZTtcclxuXHRcdFx0Y2JjLnRlbXBJbWFnZVVybCA9ICcnO1xyXG5cdFx0fTtcclxuXHRcdGNiYy51cGxvYWRTaW5nbGVJbWFnZSA9IGZ1bmN0aW9uKGZpbGUsIGVyckZpbGVzKSB7XHJcblx0XHRcdGNiYy5maWxlID0gZmlsZTtcclxuXHRcdFx0Y2JjLmVyckZpbGUgPSBlcnJGaWxlcyAmJiBlcnJGaWxlc1swXTtcclxuXHRcdFx0aWYgKGZpbGUpIHtcclxuXHRcdFx0XHRjYmMuc2hvd1RlbXBJbWFnZSA9IHRydWU7XHJcblx0XHRcdFx0Y2JjLnRlbXBJbWFnZVVybCA9IGZpbGU7XHJcblx0XHRcdFx0c2Nyb2xsQm90dG9tKCk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0XHRjYmMubGVhdmVDaGF0Qm94ID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFNvY2tldC5lbWl0KCdyZW1vdmVGcm9tUm9vbScsIHsgJ3Jvb21JZCc6IGNiYy5jaGF0Um9vbUlkIH0pO1xyXG5cclxuXHRcdFx0Y2hhdFNlcnZpY2UudXBkYXRlQ2hhdFJvb20oY2JjLmNoYXRSb29tSWQpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblxyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cclxuXHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0JHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuXHJcblxyXG5cdFx0fTtcclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcblxyXG4vKnVzZXJTZXJ2aWNlLmdldFVzZXJEZXRhaWxzKGNiYy5yZWNlaXZlclVzZXJJRElkLCB7ICdmaWVsZHMnOiAnZGlzcGxheU5hbWUgZmlyc3ROYW1lJyB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcInRoZSByZWNlaXZlclwiKTtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xyXG5cdFx0XHRcdFx0Y2JjLnJlY2VpdmVyVXNlcklEID0gcmVzcG9uc2UuZGF0YS5kaXNwbGF5TmFtZSB8fCAocmVzcG9uc2UuZGF0YS5maXJzdE5hbWUpO1xyXG5cdFx0XHRcdH0pOyovXHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKXtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmNoYXQnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ0NoYXRQYXJlbnRDb250cm9sbGVyJyxbQ2hhdFBhcmVudENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gQ2hhdFBhcmVudENvbnRyb2xsZXIoKXtcclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7IiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmNoYXQnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ1JldmVhbGVkQ2hhdENvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGUnLCAnY2hhdFNlcnZpY2UnLCAnJGlvbmljTG9hZGluZycsICdTb2NrZXQnLCBSZXZlYWxlZENoYXRDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFJldmVhbGVkQ2hhdENvbnRyb2xsZXIoJHNjb3BlLCAkc3RhdGUsIGNoYXRTZXJ2aWNlLCAkaW9uaWNMb2FkaW5nLCBTb2NrZXQpIHtcclxuXHRcdHZhciBhY2MgPSB0aGlzO1xyXG5cdFx0YWNjLmdldFJldmVhbGVkQ2hhdFJvb21zID0gZ2V0UmV2ZWFsZWRDaGF0Um9vbXM7XHJcblx0XHRhY2MubG9hZE1vcmVDaGF0cyA9IGxvYWRNb3JlQ2hhdHM7XHJcblx0XHRhY2MucHVsbFJlZnJlc2hDaGF0cyA9IHB1bGxSZWZyZXNoQ2hhdHM7XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoQ2hhdHMoKSB7XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblx0XHR9XHJcblx0XHRTb2NrZXQub24oJ25ld01lc3NhZ2VSZWNlaXZlZCcsIG1lc3NhZ2VSZWNlaXZlZCk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gbWVzc2FnZVJlY2VpdmVkKG1lc3NhZ2UpIHtcclxuXHRcdFx0dmFyIG5ld0NoYXRSb29tID0ge307XHJcblx0XHRcdG5ld0NoYXRSb29tLmNyZWF0b3IyID0gbWVzc2FnZS51c2VyO1xyXG5cdFx0XHRuZXdDaGF0Um9vbS5uZXdDaGF0ID0gdHJ1ZTtcclxuXHRcdFx0bmV3Q2hhdFJvb20ubGFzdE1lc3NhZ2UgPSB7XHJcblx0XHRcdFx0dXNlcjogbWVzc2FnZS51c2VyLl9pZCxcclxuXHRcdFx0XHRfaWQ6IG1lc3NhZ2UuX2lkLFxyXG5cdFx0XHRcdG1lc3NhZ2U6IG1lc3NhZ2UubWVzc2FnZSxcclxuXHRcdFx0XHR0eXBlOiBtZXNzYWdlLnR5cGVcclxuXHRcdFx0fTtcclxuXHJcblxyXG5cdFx0XHRmb3IgKHZhciBjaCA9IDA7IGNoIDwgYWNjLmNoYXRSb29tc0xpc3QubGVuZ3RoOyBjaCsrKSB7XHJcblx0XHRcdFx0aWYgKG5ld0NoYXRSb29tLmNyZWF0b3IyLl9pZCA9PSBhY2MuY2hhdFJvb21zTGlzdFtjaF0uY3JlYXRvcjIuX2lkKSB7XHJcblx0XHRcdFx0XHRpZiAobmV3Q2hhdFJvb20ubGFzdE1lc3NhZ2UuX2lkICE9PSBhY2MuY2hhdFJvb21zTGlzdFtjaF0ubGFzdE1lc3NhZ2UuX2lkKSB7XHJcblx0XHRcdFx0XHRcdGFjYy5jaGF0Um9vbXNMaXN0LnNwbGljZShjaCwgMSk7XHJcblx0XHRcdFx0XHRcdGFjYy5jaGF0Um9vbXNMaXN0LnVuc2hpZnQobmV3Q2hhdFJvb20pO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBsb2FkTW9yZUNoYXRzKCkge1xyXG5cdFx0XHRhY2MucGFyYW1zLnBhZ2UgKz0gMTtcclxuXHRcdFx0Z2V0UmV2ZWFsZWRDaGF0Um9vbXMoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSZXZlYWxlZENoYXRSb29tcygpIHtcclxuXHRcdFx0Y2hhdFNlcnZpY2UuZ2V0UmV2ZWFsZWRDaGF0Um9vbXMoYWNjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRhY2MuY2hhdFJvb21zTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhY2Mubm9Qb3N0cyA9ICFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdGFjYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFjYy5jaGF0Um9vbXNMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YWNjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGFjYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHRhY2MuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHJcblx0XHRcdGFjYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gZmFsc2U7XHJcblx0XHRcdGFjYy5wYXJhbXMgPSB7XHJcblx0XHRcdFx0cGFnZTogMSxcclxuXHRcdFx0XHRsaW1pdDogMjVcclxuXHRcdFx0fTtcclxuXHRcdFx0YWNjLmNoYXRSb29tc0xpc3QgPSBbXTtcclxuXHRcdFx0Z2V0UmV2ZWFsZWRDaGF0Um9vbXMoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLmNoYXQnKVxyXG5cdFx0LnNlcnZpY2UoJ2NoYXRTZXJ2aWNlJywgWyckaHR0cCcsICckc3RhdGVQYXJhbXMnLCAnaG9tZVNlcnZpY2UnLCBSZXZpZXdTZXJ2aWNlXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFJldmlld1NlcnZpY2UoJGh0dHAsICRzdGF0ZVBhcmFtcywgaG9tZVNlcnZpY2UpIHtcclxuXHRcdHZhciBycyA9IHRoaXM7XHJcblx0XHRycy5zZW5kQ2hhdE1lc3NhZ2UgPSBzZW5kQ2hhdE1lc3NhZ2U7XHJcblx0XHRycy5nZXRDaGF0TWVzc2FnZXMgPSBnZXRDaGF0TWVzc2FnZXM7XHJcblx0XHRycy5nZXRDaGF0Um9vbSA9IGdldENoYXRSb29tO1xyXG5cdFx0cnMuZ2V0QWxsQ2hhdFJvb21zID0gZ2V0QWxsQ2hhdFJvb21zO1xyXG5cdFx0cnMuZ2V0UmV2ZWFsZWRDaGF0Um9vbXMgPSBnZXRSZXZlYWxlZENoYXRSb29tcztcclxuXHRcdHJzLnVwZGF0ZUNoYXRSb29tID0gdXBkYXRlQ2hhdFJvb207XHJcblx0XHRycy5kZWxldGVDaGF0Um9vbSA9IGRlbGV0ZUNoYXRSb29tO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGRlbGV0ZUNoYXRSb29tKGlkKXtcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdjaGF0Um9vbS9kZWxldGUvJyArIGlkKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHNlbmRDaGF0TWVzc2FnZShjaGF0KSB7XHJcblx0XHRcdFxyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ2NoYXQvY3JlYXRlLycgKyBjaGF0LnJvb21JZCwgY2hhdCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0Q2hhdE1lc3NhZ2VzKGNoYXRSb29tSWQscGFyYW1zKSB7XHJcblx0XHRcdFxyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAnY2hhdC9nZXRDaGF0cy8nICsgY2hhdFJvb21JZCx7cGFyYW1zOnBhcmFtc30pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldENoYXRSb29tKHVzZXIpIHtcclxuXHRcdFx0XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdjaGF0Um9vbS9nZXQvJyArIHVzZXIpO1xyXG5cclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldEFsbENoYXRSb29tcyhwYXJhbXMpIHtcclxuXHRcdFx0cGFyYW1zLnJldmVhbGVkID0gZmFsc2U7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdjaGF0Um9vbS9hbGwvJyx7cGFyYW1zOnBhcmFtc30pO1xyXG5cclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldFJldmVhbGVkQ2hhdFJvb21zKHBhcmFtcykge1xyXG5cdFx0XHRwYXJhbXMucmV2ZWFsZWQgPSB0cnVlO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAnY2hhdFJvb20vYWxsLycse3BhcmFtczpwYXJhbXN9KTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiB1cGRhdGVDaGF0Um9vbShpZCl7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwrJ2NoYXRSb29tL3VwZGF0ZS8nK2lkKTtcclxuXHRcdH1cclxuXHJcblx0XHRcclxuXHJcblxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcil7XG4ndXNlIHN0cmljdCc7XG5hbmd1bGFyLm1vZHVsZSgncGV0YWwuY2hhdCcpLmZhY3RvcnkoJ1NvY2tldCcsIFsnc29ja2V0RmFjdG9yeScsJ2hvbWVTZXJ2aWNlJyxTb2NrZXRGYWN0b3J5XSk7XG4gICAgXG4gICAgZnVuY3Rpb24gU29ja2V0RmFjdG9yeShzb2NrZXRGYWN0b3J5LGhvbWVTZXJ2aWNlKSB7XG4gICAgICAgIHJldHVybiBzb2NrZXRGYWN0b3J5KHtcbiAgICAgICAgICAgIHByZWZpeDogJycsXG4gICAgICAgICAgICBpb1NvY2tldDogaW8uY29ubmVjdChob21lU2VydmljZS5iYXNlVVJMKVxuICAgICAgICB9KTtcbiAgICB9XG5cbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcil7XG4ndXNlIHN0cmljdCc7XG5cblxuXG5hbmd1bGFyLm1vZHVsZSgncGV0YWwuY2hhdCcpXG5cdC5mYWN0b3J5KCdTb2NrZXRVc2VyU2VydmljZScsIFsnc29ja2V0RmFjdG9yeScsJ3VzZXJEYXRhJywnaG9tZVNlcnZpY2UnLHNvY2tldEZhY3RvcnlGdW5jdGlvbl0pO1xuICAgIGZ1bmN0aW9uIHNvY2tldEZhY3RvcnlGdW5jdGlvbihzb2NrZXRGYWN0b3J5LHVzZXJEYXRhLGhvbWVTZXJ2aWNlKSB7XG4gICAgICAgIHJldHVybiBzb2NrZXRGYWN0b3J5KHtcbiAgICAgICAgICAgIHByZWZpeDogJycsXG4gICAgICAgICAgICBpb1NvY2tldDogaW8uY29ubmVjdChob21lU2VydmljZS5iYXNlVVJMK3VzZXJEYXRhLmdldFVzZXIoKS5faWQpXG4gICAgICAgIH0pO1xuICAgIH1cbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucGVvcGxlJylcclxuXHRcdC5jb250cm9sbGVyKCdBbGxQZW9wbGVDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ3Blb3BsZVNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJywgQWxsUGVvcGxlQ29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBBbGxQZW9wbGVDb250cm9sbGVyKCRzY29wZSwgJHN0YXRlLCBwZW9wbGVTZXJ2aWNlLCRpb25pY0xvYWRpbmcpIHtcclxuXHRcdHZhciBhcGMgPSB0aGlzO1xyXG5cdFx0YXBjLmdldEFsbFBlb3BsZSA9IGdldEFsbFBlb3BsZTtcclxuXHRcdGFwYy5wdWxsUmVmcmVzaFBlb3BsZSA9IHB1bGxSZWZyZXNoUGVvcGxlO1xyXG5cdFx0YXBjLmxvYWRNb3JlUGVvcGxlID0gbG9hZE1vcmVQZW9wbGU7XHJcblx0XHRhcGMuc2VhcmNoQ3Jvc3NTdWJtaXQgPSBzZWFyY2hDcm9zc1N1Ym1pdDtcclxuXHRcdGFwYy5wZW9wbGVTZWFyY2hUZXh0U3VibWl0ID0gcGVvcGxlU2VhcmNoVGV4dFN1Ym1pdDtcclxuXHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoUGVvcGxlKCkge1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHNlYXJjaENyb3NzU3VibWl0KCl7XHJcblx0XHRcdGFwYy5wZW9wbGVTZWFyY2hUZXh0ID0gJyc7XHJcblx0XHRcdGFwYy5zaG93U2VhcmNoQ3Jvc3MgPSBmYWxzZTtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHBlb3BsZVNlYXJjaFRleHRTdWJtaXQoaW50ZXJlc3Qpe1xyXG5cdFx0XHRhcGMuc2hvd1NlYXJjaENyb3NzID0gdHJ1ZTtcclxuXHRcdFx0aWYoaW50ZXJlc3Qpe1xyXG5cdFx0XHRcdGFwYy5wZW9wbGVTZWFyY2hUZXh0ID0gaW50ZXJlc3Q7XHRcclxuXHRcdFx0fVxyXG5cdFx0XHRcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGxvYWRNb3JlUGVvcGxlKCkge1xyXG5cdFx0XHRhcGMucGFyYW1zLnBhZ2UgKz0gMTtcclxuXHRcdFx0Z2V0QWxsUGVvcGxlKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0QWxsUGVvcGxlKCkge1xyXG5cdFx0XHRwZW9wbGVTZXJ2aWNlLmdldEFsbFVzZXJzKGFwYy5wYXJhbXMpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UuZGF0YS5kb2NzLCBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRcdFx0YXBjLnBlb3BsZUxpc3QucHVzaCh2YWx1ZSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSB0cnVlO1xyXG5cdFx0XHRcdGlmIChyZXNwb25zZS5kYXRhLnRvdGFsID4gYXBjLnBlb3BsZUxpc3QubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcdFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLmluZmluaXRlU2Nyb2xsQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHJcblx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gZmFsc2U7XHJcblx0XHRcdGFwYy5wZW9wbGVMaXN0ID0gW107XHJcblx0XHRcdGFwYy5wYXJhbXMgPSB7XHJcblx0XHRcdFx0bGltaXQ6IDI1LFxyXG5cdFx0XHRcdHBhZ2U6IDFcclxuXHRcdFx0fTtcclxuXHRcdFx0aWYoYXBjLnBlb3BsZVNlYXJjaFRleHQpe1xyXG5cdFx0XHRcdGFwYy5wYXJhbXMuaW50ZXJlc3QgPSBcdGFwYy5wZW9wbGVTZWFyY2hUZXh0O1xyXG5cdFx0XHR9XHJcblx0XHRcdGdldEFsbFBlb3BsZSgpO1xyXG5cdFx0fVxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucGVvcGxlJylcclxuXHRcdC5jb250cm9sbGVyKCdOZWFyYnlQZW9wbGVDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ3Blb3BsZVNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJywgTmVhcmJ5UGVvcGxlQ29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBOZWFyYnlQZW9wbGVDb250cm9sbGVyKCRzY29wZSwgJHN0YXRlLCBwZW9wbGVTZXJ2aWNlLCRpb25pY0xvYWRpbmcpIHtcclxuXHRcdHZhciBhcGMgPSB0aGlzO1xyXG5cdFx0YXBjLmdldE5lYXJieVBlb3BsZSA9IGdldE5lYXJieVBlb3BsZTtcclxuXHRcdGFwYy5wdWxsUmVmcmVzaFBlb3BsZSA9IHB1bGxSZWZyZXNoUGVvcGxlO1xyXG5cdFx0YXBjLmxvYWRNb3JlUGVvcGxlID0gbG9hZE1vcmVQZW9wbGU7XHJcblx0XHRhcGMucmVsZWFzZVJhbmdlID0gcmVsZWFzZVJhbmdlO1xyXG5cdFx0YXBjLmRpc3RhbmNlID0gMTA7XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoUGVvcGxlKCkge1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBsb2FkTW9yZVBlb3BsZSgpIHtcclxuXHRcdFx0YXBjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldE5lYXJieVBlb3BsZSgpO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gcmVsZWFzZVJhbmdlKCl7XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXROZWFyYnlQZW9wbGUoKSB7XHJcblx0XHRcdHBlb3BsZVNlcnZpY2UuZ2V0TmVhcmJ5VXNlcnMoYXBjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRhcGMucGVvcGxlTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhcGMubm9QZW9wbGUgPSFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFwYy5wZW9wbGVMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSB0cnVlO1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1xyXG5cdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IGZhbHNlO1xyXG5cdFx0XHRhcGMucGVvcGxlTGlzdCA9IFtdO1xyXG5cdFx0XHRhcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdGxpbWl0OiAyNSxcclxuXHRcdFx0XHRwYWdlOiAxLFxyXG5cdFx0XHRcdGRpc3RhbmNlOiBhcGMuZGlzdGFuY2VcclxuXHRcdFx0fTtcclxuXHRcdFx0Z2V0TmVhcmJ5UGVvcGxlKCk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKXtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBlb3BsZScpXHJcblx0XHQuY29udHJvbGxlcignUGVvcGxlUGFyZW50Q29udHJvbGxlcicsW1Blb3BsZVBhcmVudENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gUGVvcGxlUGFyZW50Q29udHJvbGxlcigpe1xyXG5cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucGVvcGxlJylcclxuXHRcdC5jb250cm9sbGVyKCdSZWNlaXZlZFBlb3BsZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGUnLCAncGVvcGxlU2VydmljZScsJyRpb25pY0xvYWRpbmcnLCBSZWNlaXZlZFBlb3BsZUNvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gUmVjZWl2ZWRQZW9wbGVDb250cm9sbGVyKCRzY29wZSwgJHN0YXRlLCBwZW9wbGVTZXJ2aWNlLCRpb25pY0xvYWRpbmcpIHtcclxuXHRcdHZhciBhcGMgPSB0aGlzO1xyXG5cdFx0YXBjLmdldFJlY2VpdmVkUGVvcGxlID0gZ2V0UmVjZWl2ZWRQZW9wbGU7XHJcblx0XHRhcGMucHVsbFJlZnJlc2hQZW9wbGUgPSBwdWxsUmVmcmVzaFBlb3BsZTtcclxuXHRcdGFwYy5sb2FkTW9yZVBlb3BsZSA9IGxvYWRNb3JlUGVvcGxlO1xyXG5cclxuXHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoUGVvcGxlKCkge1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBsb2FkTW9yZVBlb3BsZSgpIHtcclxuXHRcdFx0YXBjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldFJlY2VpdmVkUGVvcGxlKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0UmVjZWl2ZWRQZW9wbGUoKSB7XHJcblx0XHRcdHBlb3BsZVNlcnZpY2UuZ2V0UmVjZWl2ZWRVc2VycyhhcGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0YW5ndWxhci5mb3JFYWNoKHJlc3BvbnNlLmRhdGEuZG9jcywgZnVuY3Rpb24odmFsdWUpIHtcclxuXHRcdFx0XHRcdGFwYy5wZW9wbGVMaXN0LnB1c2godmFsdWUpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGFwYy5ub1Blb3BsZSA9IXJlc3BvbnNlLmRhdGEudG90YWw7XHJcblx0XHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSB0cnVlO1xyXG5cdFx0XHRcdGlmIChyZXNwb25zZS5kYXRhLnRvdGFsID4gYXBjLnBlb3BsZUxpc3QubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcdFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLmluZmluaXRlU2Nyb2xsQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHJcblx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gZmFsc2U7XHJcblx0XHRcdGFwYy5wZW9wbGVMaXN0ID0gW107XHJcblx0XHRcdGFwYy5wYXJhbXMgPSB7XHJcblx0XHRcdFx0bGltaXQ6IDEwLFxyXG5cdFx0XHRcdHBhZ2U6IDFcclxuXHRcdFx0fTtcclxuXHRcdFx0Z2V0UmVjZWl2ZWRQZW9wbGUoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBlb3BsZScpXHJcblx0XHQuY29udHJvbGxlcignUmVxdWVzdGVkUGVvcGxlQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZScsICdwZW9wbGVTZXJ2aWNlJywnJGlvbmljTG9hZGluZycsIFJlcXVlc3RlZFBlb3BsZUNvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gUmVxdWVzdGVkUGVvcGxlQ29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgcGVvcGxlU2VydmljZSwkaW9uaWNMb2FkaW5nKSB7XHJcblx0XHR2YXIgYXBjID0gdGhpcztcclxuXHRcdGFwYy5nZXRSZXF1ZXN0ZWRQZW9wbGUgPSBnZXRSZXF1ZXN0ZWRQZW9wbGU7XHJcblx0XHRhcGMucHVsbFJlZnJlc2hQZW9wbGUgPSBwdWxsUmVmcmVzaFBlb3BsZTtcclxuXHRcdGFwYy5sb2FkTW9yZVBlb3BsZSA9IGxvYWRNb3JlUGVvcGxlO1xyXG5cclxuXHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoUGVvcGxlKCkge1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBsb2FkTW9yZVBlb3BsZSgpIHtcclxuXHRcdFx0YXBjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldFJlcXVlc3RlZFBlb3BsZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFJlcXVlc3RlZFBlb3BsZSgpIHtcclxuXHRcdFx0cGVvcGxlU2VydmljZS5nZXRSZXF1ZXN0ZWRVc2VycyhhcGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2cocmVzcG9uc2UpO1xyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRhcGMucGVvcGxlTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IHRydWU7XHJcblx0XHRcdFx0aWYgKHJlc3BvbnNlLmRhdGEudG90YWwgPiBhcGMucGVvcGxlTGlzdC5sZW5ndGgpIHtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNle1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1x0XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cclxuXHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwuaW5maW5pdGVTY3JvbGxDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0YXBjLnBlb3BsZUxpc3QgPSBbXTtcclxuXHRcdFx0YXBjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRsaW1pdDogMjUsXHJcblx0XHRcdFx0cGFnZTogMVxyXG5cdFx0XHR9O1xyXG5cdFx0XHRnZXRSZXF1ZXN0ZWRQZW9wbGUoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBlb3BsZScpXHJcblx0XHQuY29udHJvbGxlcignUmV2ZWFsZWRQZW9wbGVDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ3Blb3BsZVNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJywgUmV2ZWFsZWRQZW9wbGVDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFJldmVhbGVkUGVvcGxlQ29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgcGVvcGxlU2VydmljZSwkaW9uaWNMb2FkaW5nKSB7XHJcblx0XHR2YXIgYXBjID0gdGhpcztcclxuXHRcdGFwYy5nZXRSZXZlYWxlZFBlb3BsZSA9IGdldFJldmVhbGVkUGVvcGxlO1xyXG5cdFx0YXBjLnB1bGxSZWZyZXNoUGVvcGxlID0gcHVsbFJlZnJlc2hQZW9wbGU7XHJcblx0XHRhcGMubG9hZE1vcmVQZW9wbGUgPSBsb2FkTW9yZVBlb3BsZTtcclxuXHJcblxyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBwdWxsUmVmcmVzaFBlb3BsZSgpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVQZW9wbGUoKSB7XHJcblx0XHRcdGFwYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXRSZXZlYWxlZFBlb3BsZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFJldmVhbGVkUGVvcGxlKCkge1xyXG5cdFx0XHRwZW9wbGVTZXJ2aWNlLmdldFJldmVhbGVkVXNlcnMoYXBjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRhcGMucGVvcGxlTGlzdC5wdXNoKHZhbHVlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRhcGMubm9QZW9wbGUgPSFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFwYy5wZW9wbGVMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IGZhbHNlO1xyXG5cdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IGZhbHNlO1xyXG5cdFx0XHRhcGMucGVvcGxlTGlzdCA9IFtdO1xyXG5cdFx0XHRhcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdGxpbWl0OiAyNSxcclxuXHRcdFx0XHRwYWdlOiAxXHJcblx0XHRcdH07XHJcblx0XHRcdGdldFJldmVhbGVkUGVvcGxlKCk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wZW9wbGUnKVxyXG5cdFx0LmRpcmVjdGl2ZSgncGVvcGxlTGlzdCcsIFsgJ3VzZXJEYXRhJyxwZW9wbGVMaXN0XSk7XHJcblxyXG5cclxuXHRmdW5jdGlvbiBwZW9wbGVMaXN0KCB1c2VyRGF0YSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcGVvcGxlL3ZpZXdzL3Blb3BsZUxpc3RUZW1wbGF0ZS5odG1sJyxcclxuXHRcdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdFx0c2NvcGU6IHtcclxuXHRcdFx0XHRsaXN0VHlwZTogJ0BsaXN0VHlwZScsXHJcblx0XHRcdFx0cGVvcGxlTGlzdDogJz1wZW9wbGVMaXN0JyxcclxuXHRcdFx0XHRwZW9wbGVTZWFyY2hUZXh0U3VibWl0OiAnJnBlb3BsZVNlYXJjaFRleHRTdWJtaXQnXHJcblx0XHRcdH0sXHJcblx0XHRcdGNvbnRyb2xsZXI6IFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XHJcblx0XHRcdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlckRhdGEuZ2V0VXNlcigpO1xyXG5cdFx0XHRcdCRzY29wZS5zZXRQZW9wbGVTZWFyY2ggPSBmdW5jdGlvbihpbnRlcmVzdCwkZXZlbnQpe1xyXG5cdFx0XHRcdFx0aWYoJHNjb3BlLnBlb3BsZVNlYXJjaFRleHRTdWJtaXQpe1xyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0JHNjb3BlLnBlb3BsZVNlYXJjaFRleHRTdWJtaXQoe2ludGVyZXN0OmludGVyZXN0fSk7XHRcclxuXHRcdFx0XHRcdFx0JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0XHQkc2NvcGUucmVtb3ZlQWZ0ZXJEZWNpZGVkID0gZnVuY3Rpb24oaW5kZXgpe1xyXG5cdFx0XHRcdFx0JHNjb3BlLnBlb3BsZUxpc3Quc3BsaWNlKGluZGV4LDEpO1xyXG5cdFx0XHRcdH07XHJcblx0XHRcdFx0XHJcblx0XHRcdH1dXHJcblx0XHR9O1xyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucGVvcGxlJylcclxuXHRcdC5kaXJlY3RpdmUoJ2NhbmNlbFJldmVhbCcsIFsnJGlvbmljQWN0aW9uU2hlZXQnLCAncmV2ZWFsU2VydmljZScsIGNhbmNlbFJldmVhbF0pXHJcblx0XHQuZGlyZWN0aXZlKCdkZWNpZGVSZXZlYWwnLCBbJyRpb25pY0FjdGlvblNoZWV0JywgJ3JldmVhbFNlcnZpY2UnLCBkZWNpZGVSZXZlYWxdKVxyXG5cdFx0LmRpcmVjdGl2ZSgnZGVsZXRlUmV2ZWFsJywgWyckaW9uaWNBY3Rpb25TaGVldCcsICdyZXZlYWxTZXJ2aWNlJywgZGVsZXRlUmV2ZWFsXSlcclxuXHRcdC5kaXJlY3RpdmUoJ3NlbmRSZXZlYWwnLCBbJyRpb25pY0FjdGlvblNoZWV0JywgJ3JldmVhbFNlcnZpY2UnLCBzZW5kUmV2ZWFsXSlcclxuXHRcdC5kaXJlY3RpdmUoJ2NyZWF0ZUJsb2NrJywgWyckaW9uaWNBY3Rpb25TaGVldCcsICdibG9ja1NlcnZpY2UnLCBjcmVhdGVCbG9ja10pXHJcblx0XHQuZGlyZWN0aXZlKCdkZWxldGVCbG9jaycsIFsnJGlvbmljQWN0aW9uU2hlZXQnLCAnYmxvY2tTZXJ2aWNlJywgZGVsZXRlQmxvY2tdKVxyXG5cdFx0LmRpcmVjdGl2ZSgnZGVsZXRlQ2hhdCcsIFsnJGlvbmljQWN0aW9uU2hlZXQnLCAnY2hhdFNlcnZpY2UnLCckc3RhdGUnLCBkZWxldGVDaGF0XSlcclxuXHRcdC5kaXJlY3RpdmUoJ2NoYXRQYWdlJywgWyckc3RhdGUnLCBjaGF0UGFnZV0pXHJcblx0XHQuZGlyZWN0aXZlKCd1c2VyU2V0dGluZ3MnLCBbJyRpb25pY1BvcG92ZXInLCB1c2VyU2V0dGluZ3NdKVxyXG5cdFx0LmRpcmVjdGl2ZSgndXNlclBhZ2UnLCBbJyRzdGF0ZScsIHVzZXJQYWdlXSk7XHJcblxyXG5cdFxyXG5cdGZ1bmN0aW9uIGRlbGV0ZUNoYXQoJGlvbmljQWN0aW9uU2hlZXQsIGNoYXRTZXJ2aWNlLCRzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVzdHJpY3Q6ICdBJyxcclxuXHRcdFx0c2NvcGU6IHtcclxuXHRcdFx0XHRkZWxldGVDaGF0OiAnQCcsXHJcblx0XHRcdFx0YWZ0ZXJDYWxsYmFjazogJyYnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHQkaW9uaWNBY3Rpb25TaGVldC5zaG93KHtcclxuXHRcdFx0XHRcdFx0dGl0bGVUZXh0OiAnRGVsZXRlICcsXHJcblx0XHRcdFx0XHRcdGJ1dHRvbnM6IFt7XHJcblx0XHRcdFx0XHRcdFx0dGV4dDogJzxpIGNsYXNzPVwiaWNvbiBpb24tc2hhcmVcIj48L2k+IERlbGV0ZSBDaGF0ICdcclxuXHRcdFx0XHRcdFx0fSwgXSxcclxuXHJcblx0XHRcdFx0XHRcdGNhbmNlbFRleHQ6ICdDYW5jZWwnLFxyXG5cdFx0XHRcdFx0XHRjYW5jZWw6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKCdDQU5DRUxMRUQnKTtcclxuXHRcdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdFx0YnV0dG9uQ2xpY2tlZDogZnVuY3Rpb24oaW5kZXgpIHtcclxuXHRcdFx0XHRcdFx0XHRpZiAoaW5kZXggPT09IDApIHtcclxuXHRcdFx0XHRcdFx0XHRcdGNoYXRTZXJ2aWNlLmRlbGV0ZUNoYXRSb29tKHNjb3BlLmRlbGV0ZUNoYXQpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmIChzY29wZS5hZnRlckNhbGxiYWNrKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0c2NvcGUuYWZ0ZXJDYWxsYmFjaygpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChyZXMuZGF0YSk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdCRzdGF0ZS5nbygnaG9tZS5jaGF0LmFsbCcpO1xyXG5cdFx0XHRcdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIHVzZXJTZXR0aW5ncygkaW9uaWNQb3BvdmVyKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdHVzZXJCbG9jazogJ0AnLFxyXG5cdFx0XHRcdGNoYXREZWxldGU6ICdAJyxcclxuXHRcdFx0XHRibG9ja0lkOiAnQCdcclxuXHRcdFx0fSxcclxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pIHtcclxuXHRcdFx0XHRzY29wZS51c2VyQmxvY2sgPSAoc2NvcGUudXNlckJsb2NrPT09XCJ0cnVlXCIpO1xyXG5cdFx0XHRcdHNjb3BlLmFmdGVyQ2FsbGJhY2sgPSBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0c2NvcGUucG9wb3Zlci5yZW1vdmUoKTtcclxuXHRcdFx0XHRcdHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdGVsZW0uYmluZCgnY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0XHRcdFx0JGlvbmljUG9wb3Zlci5mcm9tVGVtcGxhdGVVcmwoJ2FwcC91c2VyL3ZpZXdzL3NldHRpbmdzVGVtcGxhdGUuaHRtbCcsIHtcclxuXHRcdFx0XHRcdFx0c2NvcGU6IHNjb3BlXHJcblx0XHRcdFx0XHR9KS50aGVuKGZ1bmN0aW9uKHBvcG92ZXIpIHtcclxuXHRcdFx0XHRcdFx0c2NvcGUucG9wb3ZlciA9IHBvcG92ZXI7XHJcblx0XHRcdFx0XHRcdHNjb3BlLnBvcG92ZXIuc2hvdyhldmVudCk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gY2hhdFBhZ2UoJHN0YXRlKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdGNoYXRQYWdlOiAnQCdcclxuXHRcdFx0fSxcclxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW0pIHtcclxuXHRcdFx0XHRlbGVtLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdFx0XHRcdCRzdGF0ZS5nbygnY2hhdEJveCcsIHsgdXNlcjogc2NvcGUuY2hhdFBhZ2UgfSk7XHJcblx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIHVzZXJQYWdlKCRzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0c2NvcGU6IHtcclxuXHRcdFx0XHR1c2VyUGFnZTogJ0AnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUudXNlclBhZ2UnLCB7IHVzZXI6IHNjb3BlLnVzZXJQYWdlIH0pO1xyXG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBjYW5jZWxSZXZlYWwoJGlvbmljQWN0aW9uU2hlZXQsIHJldmVhbFNlcnZpY2UpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0YWZ0ZXJDYWxsYmFjazogJyYnLFxyXG5cdFx0XHRcdGNhbmNlbFJldmVhbDogJ0AnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHQkaW9uaWNBY3Rpb25TaGVldC5zaG93KHtcclxuXHRcdFx0XHRcdFx0dGl0bGVUZXh0OiAnUmV2ZWFsJyxcclxuXHRcdFx0XHRcdFx0YnV0dG9uczogW3tcclxuXHRcdFx0XHRcdFx0XHR0ZXh0OiAnPGkgY2xhc3M9XCJpY29uIGlvbi1zaGFyZVwiPjwvaT4gQ2FuY2VsIFJldmVhbCBSZXF1ZXN0J1xyXG5cdFx0XHRcdFx0XHR9LCBdLFxyXG5cdFx0XHRcdFx0XHRjYW5jZWxUZXh0OiAnQ2FuY2VsJyxcclxuXHRcdFx0XHRcdFx0Y2FuY2VsOiBmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdGJ1dHRvbkNsaWNrZWQ6IGZ1bmN0aW9uKGluZGV4KSB7XHJcblx0XHRcdFx0XHRcdFx0cmV2ZWFsU2VydmljZS5jYW5jZWwoc2NvcGUuY2FuY2VsUmV2ZWFsKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdGlmIChzY29wZS5hZnRlckNhbGxiYWNrKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHNjb3BlLmFmdGVyQ2FsbGJhY2soKTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuYWxlcnQoSlNPTi5zdHJpbmdpZnkoZXJyKSk7XHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gZGVjaWRlUmV2ZWFsKCRpb25pY0FjdGlvblNoZWV0LCByZXZlYWxTZXJ2aWNlKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0EnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdGFmdGVyQ2FsbGJhY2s6ICcmJyxcclxuXHRcdFx0XHRkZWNpZGVSZXZlYWw6ICdAJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbSkge1xyXG5cdFx0XHRcdGVsZW0uYmluZCgnY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0XHRcdFx0JGlvbmljQWN0aW9uU2hlZXQuc2hvdyh7XHJcblx0XHRcdFx0XHRcdHRpdGxlVGV4dDogJ1JldmVhbCcsXHJcblx0XHRcdFx0XHRcdGJ1dHRvbnM6IFt7XHJcblx0XHRcdFx0XHRcdFx0dGV4dDogJzxpIGNsYXNzPVwiaWNvbiBpb24tc2hhcmVcIj48L2k+IEFjY2VwdCBSZXZlYWwgUmVxdWVzdCdcclxuXHRcdFx0XHRcdFx0fSwge1xyXG5cdFx0XHRcdFx0XHRcdHRleHQ6ICc8aSBjbGFzcz1cImljb24gaW9uLXNoYXJlXCI+PC9pPiBEZW55IFJldmVhbCBSZXF1ZXN0J1xyXG5cdFx0XHRcdFx0XHR9LCBdLFxyXG5cclxuXHRcdFx0XHRcdFx0Y2FuY2VsVGV4dDogJ0NhbmNlbCcsXHJcblx0XHRcdFx0XHRcdGNhbmNlbDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ0NBTkNFTExFRCcpO1xyXG5cdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRidXR0b25DbGlja2VkOiBmdW5jdGlvbihpbmRleCkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRpZiAoaW5kZXggPT09IDApIHtcclxuXHRcdFx0XHRcdFx0XHRcdHJldmVhbFNlcnZpY2UuYWNjZXB0KHNjb3BlLmRlY2lkZVJldmVhbCkudGhlbihmdW5jdGlvbihyZXMpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKHNjb3BlLmFmdGVyQ2FsbGJhY2spIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRzY29wZS5hZnRlckNhbGxiYWNrKCk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuYWxlcnQoSlNPTi5zdHJpbmdpZnkoZXJyKSk7XHJcblx0XHRcdFx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmIChpbmRleCA9PT0gMSkge1xyXG5cdFx0XHRcdFx0XHRcdFx0cmV2ZWFsU2VydmljZS5pZ25vcmUoc2NvcGUuZGVjaWRlUmV2ZWFsKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKHNjb3BlLmFmdGVyQ2FsbGJhY2spIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRzY29wZS5hZnRlckNhbGxiYWNrKCk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuYWxlcnQoSlNPTi5zdHJpbmdpZnkoZXJyKSk7XHJcblx0XHRcdFx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gZGVsZXRlUmV2ZWFsKCRpb25pY0FjdGlvblNoZWV0LCByZXZlYWxTZXJ2aWNlKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0EnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdGFmdGVyQ2FsbGJhY2s6ICcmJyxcclxuXHRcdFx0XHRkZWxldGVSZXZlYWw6ICdAJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbSkge1xyXG5cdFx0XHRcdGVsZW0uYmluZCgnY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0XHRcdFx0JGlvbmljQWN0aW9uU2hlZXQuc2hvdyh7XHJcblx0XHRcdFx0XHRcdHRpdGxlVGV4dDogJ1JldmVhbCcsXHJcblx0XHRcdFx0XHRcdGJ1dHRvbnM6IFt7XHJcblx0XHRcdFx0XHRcdFx0dGV4dDogJzxpIGNsYXNzPVwiaWNvbiBpb24tc2hhcmVcIj48L2k+IERlbGV0ZSBSZXZlYWwgJ1xyXG5cdFx0XHRcdFx0XHR9LCBdLFxyXG5cclxuXHRcdFx0XHRcdFx0Y2FuY2VsVGV4dDogJ0NhbmNlbCcsXHJcblx0XHRcdFx0XHRcdGNhbmNlbDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ0NBTkNFTExFRCcpO1xyXG5cdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRidXR0b25DbGlja2VkOiBmdW5jdGlvbihpbmRleCkge1xyXG5cdFx0XHRcdFx0XHRcdGlmIChpbmRleCA9PT0gMCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0cmV2ZWFsU2VydmljZS5maW5pc2goc2NvcGUuZGVsZXRlUmV2ZWFsKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoc2NvcGUuYWZ0ZXJDYWxsYmFjaykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNjb3BlLmFmdGVyQ2FsbGJhY2soKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIHNlbmRSZXZlYWwoJGlvbmljQWN0aW9uU2hlZXQsIHJldmVhbFNlcnZpY2UpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0YWZ0ZXJDYWxsYmFjazogJyYnLFxyXG5cdFx0XHRcdHNlbmRSZXZlYWw6ICdAJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbSkge1xyXG5cdFx0XHRcdGVsZW0uYmluZCgnY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0XHRcdFx0JGlvbmljQWN0aW9uU2hlZXQuc2hvdyh7XHJcblx0XHRcdFx0XHRcdHRpdGxlVGV4dDogJ1JldmVhbCcsXHJcblx0XHRcdFx0XHRcdGJ1dHRvbnM6IFt7XHJcblx0XHRcdFx0XHRcdFx0dGV4dDogJzxpIGNsYXNzPVwiaWNvbiBpb24tc2hhcmVcIj48L2k+IFNlbmQgUmV2ZWFsIFJlcXVlc3QnXHJcblx0XHRcdFx0XHRcdH0sIF0sXHJcblxyXG5cdFx0XHRcdFx0XHRjYW5jZWxUZXh0OiAnQ2FuY2VsJyxcclxuXHRcdFx0XHRcdFx0Y2FuY2VsOiBmdW5jdGlvbigpIHt9LFxyXG5cdFx0XHRcdFx0XHRidXR0b25DbGlja2VkOiBmdW5jdGlvbihpbmRleCkge1xyXG5cdFx0XHRcdFx0XHRcdHJldmVhbFNlcnZpY2UuaW5pdGlhdGUoc2NvcGUuc2VuZFJldmVhbCkudGhlbihmdW5jdGlvbihyZXMpIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRpZiAoc2NvcGUuYWZ0ZXJDYWxsYmFjaykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRzY29wZS5hZnRlckNhbGxiYWNrKCk7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuYWxlcnQoSlNPTi5zdHJpbmdpZnkoZXJyKSk7XHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBjcmVhdGVCbG9jaygkaW9uaWNBY3Rpb25TaGVldCwgYmxvY2tTZXJ2aWNlKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0EnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdGNyZWF0ZUJsb2NrOiAnQCcsXHJcblx0XHRcdFx0YWZ0ZXJDYWxsYmFjazogJyYnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHQkaW9uaWNBY3Rpb25TaGVldC5zaG93KHtcclxuXHRcdFx0XHRcdFx0dGl0bGVUZXh0OiAnQmxvY2sgVXNlcicsXHJcblx0XHRcdFx0XHRcdGJ1dHRvbnM6IFt7XHJcblx0XHRcdFx0XHRcdFx0dGV4dDogJzxpIGNsYXNzPVwiaWNvbiBpb24tc2hhcmVcIj48L2k+IEJsb2NrJ1xyXG5cdFx0XHRcdFx0XHR9LCBdLFxyXG5cclxuXHRcdFx0XHRcdFx0Y2FuY2VsVGV4dDogJ0NhbmNlbCcsXHJcblx0XHRcdFx0XHRcdGNhbmNlbDogZnVuY3Rpb24oKSB7fSxcclxuXHRcdFx0XHRcdFx0YnV0dG9uQ2xpY2tlZDogZnVuY3Rpb24oaW5kZXgpIHtcclxuXHRcdFx0XHRcdFx0XHRibG9ja1NlcnZpY2UuY3JlYXRlKHNjb3BlLmNyZWF0ZUJsb2NrKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChcInVzZXIgYmxvY2tlZFwiKTtcclxuXHRcdFx0XHRcdFx0XHRcdGlmKHNjb3BlLmFmdGVyQ2FsbGJhY2spe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRzY29wZS5hZnRlckNhbGxiYWNrKCk7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuYWxlcnQoSlNPTi5zdHJpbmdpZnkoZXJyKSk7XHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkZWxldGVCbG9jaygkaW9uaWNBY3Rpb25TaGVldCwgYmxvY2tTZXJ2aWNlKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0EnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdGFmdGVyQ2FsbGJhY2s6ICcmJyxcclxuXHRcdFx0XHRkZWxldGVCbG9jazogJ0AnXHJcblx0XHRcdH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtKSB7XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHQkaW9uaWNBY3Rpb25TaGVldC5zaG93KHtcclxuXHRcdFx0XHRcdFx0dGl0bGVUZXh0OiAnQmxvY2snLFxyXG5cdFx0XHRcdFx0XHRidXR0b25zOiBbe1xyXG5cdFx0XHRcdFx0XHRcdHRleHQ6ICc8aSBjbGFzcz1cImljb24gaW9uLXNoYXJlXCI+PC9pPiBVbmJsb2NrIFVzZXIgJ1xyXG5cdFx0XHRcdFx0XHR9LCBdLFxyXG5cclxuXHRcdFx0XHRcdFx0Y2FuY2VsVGV4dDogJ0NhbmNlbCcsXHJcblx0XHRcdFx0XHRcdGNhbmNlbDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ0NBTkNFTExFRCcpO1xyXG5cdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRidXR0b25DbGlja2VkOiBmdW5jdGlvbihpbmRleCkge1xyXG5cdFx0XHRcdFx0XHRcdGlmIChpbmRleCA9PT0gMCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0YmxvY2tTZXJ2aWNlLnJlbW92ZShzY29wZS5kZWxldGVCbG9jaykudGhlbihmdW5jdGlvbihyZXMpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKHNjb3BlLmFmdGVyQ2FsbGJhY2spIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRzY29wZS5hZnRlckNhbGxiYWNrKCk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuYWxlcnQoSlNPTi5zdHJpbmdpZnkoZXJyKSk7XHJcblx0XHRcdFx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdC8qXHJcblx0ICpTZXJ2aWNlIGZvciBnZXR0aW5nIGEgc2luZ2xlIHN0b3JlIHdpdGggaXRzIGlkXHJcblx0ICovXHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBlb3BsZScpXHJcblx0XHQuc2VydmljZSgncGVvcGxlU2VydmljZScsIFtcIiRodHRwXCIsIFwiaG9tZVNlcnZpY2VcIiwgJ3VzZXJMb2NhdGlvblNlcnZpY2UnLCAnJHEnLCBQZW9wbGVTZXJ2aWNlXSk7XHJcblxyXG5cdC8qXHJcblx0ICogVGhpcyBzZXJ2aWMgaGFzIGEgZnVuY3Rpb24gbmFtZXMgZ2V0U3RvcmUgd2hpY2ggdGFrZXMgaWQgYXMgcGFyYW1ldGVyIGFuZCByZXR1cm5zIGEgcHJvbWlzZVxyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIFBlb3BsZVNlcnZpY2UoJGh0dHAsIGhvbWVTZXJ2aWNlLCB1c2VyTG9jYXRpb25TZXJ2aWNlLCAkcSkge1xyXG5cclxuXHRcdHRoaXMuZ2V0QWxsVXNlcnMgPSBnZXRBbGxVc2VycztcclxuXHRcdHRoaXMuZ2V0UmV2ZWFsZWRVc2VycyA9IGdldFJldmVhbGVkVXNlcnM7XHJcblx0XHR0aGlzLmdldE5lYXJieVVzZXJzID0gZ2V0TmVhcmJ5VXNlcnM7XHJcblx0XHR0aGlzLmdldFJlcXVlc3RlZFVzZXJzID0gZ2V0UmVxdWVzdGVkVXNlcnM7XHJcblx0XHR0aGlzLmdldFJlY2VpdmVkVXNlcnMgPSBnZXRSZWNlaXZlZFVzZXJzO1xyXG5cdFx0dGhpcy5nZXROZWFyYnlVc2VycyA9IGdldE5lYXJieVVzZXJzO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGdldEFsbFVzZXJzKHBhcmFtcykge1xyXG5cdFx0XHRwYXJhbXMuYWxsID0gdHJ1ZTtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgXCJ1c2VyL2dldFVzZXJzXCIsIHsgcGFyYW1zOiBwYXJhbXMgfSk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFJldmVhbGVkVXNlcnMocGFyYW1zKSB7XHJcblx0XHRcdHBhcmFtcy5yZXZlYWxlZCA9IHRydWU7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArIFwidXNlci9nZXRVc2Vyc1wiLCB7IHBhcmFtczogcGFyYW1zIH0pO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSZWNlaXZlZFVzZXJzKHBhcmFtcykge1xyXG5cdFx0XHRwYXJhbXMucmVjZWl2ZWQgPSB0cnVlO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyBcInVzZXIvZ2V0VXNlcnNcIiwgeyBwYXJhbXM6IHBhcmFtcyB9KTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0UmVxdWVzdGVkVXNlcnMocGFyYW1zKSB7XHJcblx0XHRcdHBhcmFtcy5yZXF1ZXN0ZWQgPSB0cnVlO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyBcInVzZXIvZ2V0VXNlcnNcIiwgeyBwYXJhbXM6IHBhcmFtcyB9KTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXRGaWx0ZXJlZFVzZXJzKGRlZmVyLHBhcmFtcyl7XHJcblx0XHRcdCRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgXCJ1c2VyL2dldFVzZXJzXCIsIHsgcGFyYW1zOiBwYXJhbXMgfSkudGhlbihmdW5jdGlvbih1c2Vycykge1xyXG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZSh1c2Vycyk7XHJcblx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRkZWZlci5yZWplY3QoZXJyKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldE5lYXJieVVzZXJzKHBhcmFtcykge1xyXG5cdFx0XHRpZiAocGFyYW1zLnBhZ2UgPT0gMSkge1xyXG5cdFx0XHRcdHVzZXJMb2NhdGlvblNlcnZpY2Uuc2V0VXNlckxvY2F0aW9uKCk7XHJcblx0XHRcdH1cclxuXHRcdFx0cGFyYW1zLm5lYXJieSA9IHRydWU7XHJcblx0XHRcdHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XHJcblx0XHRcdFxyXG5cdFx0XHR1c2VyTG9jYXRpb25TZXJ2aWNlLmdldFVzZXJMb2NhdGlvbigpLnRoZW4oZnVuY3Rpb24ocG9zaXRpb24pIHtcclxuXHRcdFx0XHRwYXJhbXMubGF0aXR1ZGUgPSBwb3NpdGlvbi5sYXRpdHVkZTtcclxuXHRcdFx0XHRwYXJhbXMubG9uZ2l0dWRlID0gcG9zaXRpb24ubG9uZ2l0dWRlO1xyXG5cdFx0XHRcdCRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgXCJ1c2VyL2dldFVzZXJzXCIsIHsgcGFyYW1zOiBwYXJhbXMgfSkudGhlbihmdW5jdGlvbih1c2Vycykge1xyXG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZSh1c2Vycyk7XHJcblx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRkZWZlci5yZWplY3QoZXJyKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0d2luZG93LmNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdFx0Z2V0RmlsdGVyZWRVc2VycyhkZWZlcixwYXJhbXMpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cdFx0fVxyXG5cclxuXHJcblxyXG5cclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wb3N0JykuXHJcblx0c2VydmljZSgndXB2b3RlU2VydmljZScsIFsnJGh0dHAnLCAnaG9tZVNlcnZpY2UnLCAgVXB2b3RlU2VydmljZV0pO1xyXG5cclxuXHJcblx0ZnVuY3Rpb24gVXB2b3RlU2VydmljZSgkaHR0cCwgaG9tZVNlcnZpY2UpIHtcclxuXHRcdFxyXG5cdFx0dGhpcy5jcmVhdGVVcHZvdGUgPSBjcmVhdGVVcHZvdGU7XHJcblx0XHR0aGlzLmRlbGV0ZVVwdm90ZSA9IGRlbGV0ZVVwdm90ZTtcclxuXHRcdHRoaXMuZ2V0VXB2b3RlID0gZ2V0VXB2b3RlO1xyXG5cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRVcHZvdGUocG9zdElkKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICd1cHZvdGUvZ2V0LycrcG9zdElkKTtcclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gY3JlYXRlVXB2b3RlKHBvc3RJZCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ3Vwdm90ZS9jcmVhdGUvJytwb3N0SWQpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGRlbGV0ZVVwdm90ZShwb3N0SWQpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICd1cHZvdGUvZGVsZXRlLycgKyBwb3N0SWQpO1xyXG5cdFx0fVxyXG5cclxuXHRcdFxyXG5cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5ob21lJylcclxuXHRcdC5jb250cm9sbGVyKFwiQXV0aGVudGljYXRpb25Db250cm9sbGVyXCIsIFtcIiRzY29wZVwiLCBcIiRhdXRoXCIsIFwiJHN0YXRlXCIsIFwidXNlckRhdGFcIiwgJ3VzZXJMb2NhdGlvblNlcnZpY2UnLCAnJGlvbmljTG9hZGluZycsICdSZXF1ZXN0c1NlcnZpY2UnLCAnJGlvbmljTW9kYWwnLCBBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gQXV0aGVudGljYXRpb25Db250cm9sbGVyKCRzY29wZSwgJGF1dGgsICRzdGF0ZSwgdXNlckRhdGEsIHVzZXJMb2NhdGlvblNlcnZpY2UsICRpb25pY0xvYWRpbmcsIFJlcXVlc3RzU2VydmljZSwgJGlvbmljTW9kYWwpIHtcclxuXHRcdHZhciBwaGMgPSB0aGlzO1xyXG5cclxuXHRcdHBoYy5pc0F1dGggPSAkYXV0aC5pc0F1dGhlbnRpY2F0ZWQoKTtcclxuXHRcdGlmIChwaGMuaXNBdXRoKSB7XHJcblx0XHRcdCRzdGF0ZS5nbygnaG9tZS5wb3N0LmFsbCcpO1xyXG5cdFx0fVxyXG5cdFx0aWYgKHdpbmRvdy5jb3Jkb3ZhKSB7XHJcblx0XHRcdHBoYy53ZWJTaWduSW4gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0cGhjLmF1dGhMb2dvdXQgPSBhdXRoTG9nb3V0O1xyXG5cdFx0cGhjLmxvYWRQb3N0TW9kYWwgPSBsb2FkUG9zdE1vZGFsO1xyXG5cclxuXHJcblx0XHRwaGMuc29jaWFsQXV0aGVudGljYXRlID0gc29jaWFsQXV0aGVudGljYXRlO1xyXG5cdFx0JHNjb3BlLmdvb2dsZVNpZ25JbiA9IGZ1bmN0aW9uKCkge1xyXG5cclxuXHJcblxyXG5cdFx0XHQkaW9uaWNMb2FkaW5nLnNob3coe1xyXG5cdFx0XHRcdHRlbXBsYXRlOiAnTG9nZ2luZyBpbi4uLidcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHR3aW5kb3cucGx1Z2lucy5nb29nbGVwbHVzLmxvZ2luKHtcclxuXHRcdFx0XHRcdHdlYkNsaWVudElkOiAnNzkyMDY4NTY1MDA3LXJkbTducmxmbWMyOWp2bHFvNWwwdGtndTZjaTB2Ym9hLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tJ1xyXG5cclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdGZ1bmN0aW9uKHVzZXJfZGF0YSkge1xyXG5cdFx0XHRcdFx0dmFyIHByb2ZpbGUgPSB7fTtcclxuXHRcdFx0XHRcdHByb2ZpbGUuaWQgPSB1c2VyX2RhdGEudXNlcklkO1xyXG5cdFx0XHRcdFx0cHJvZmlsZS5kaXNwbGF5TmFtZSA9IHVzZXJfZGF0YS5kaXNwbGF5TmFtZTtcclxuXHRcdFx0XHRcdHByb2ZpbGUuaW1hZ2VVcmwgPSB1c2VyX2RhdGEuaW1hZ2VVcmw7XHJcblx0XHRcdFx0XHRSZXF1ZXN0c1NlcnZpY2UuZ29vZ2xlU2lnbkluKHByb2ZpbGUpXHJcblx0XHRcdFx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHRcdFx0JGF1dGguc2V0VG9rZW4ocmVzcG9uc2UuZGF0YS50b2tlbik7XHJcblx0XHRcdFx0XHRcdFx0c3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uKHJlc3BvbnNlLmRhdGEudXNlcik7XHJcblx0XHRcdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKFwiZXJyb3JcIik7XHJcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0ZnVuY3Rpb24obXNnKSB7XHJcblx0XHRcdFx0XHRhbGVydChcIm1pc3NlZFwiKTtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKG1zZyk7XHJcblx0XHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdCk7XHJcblx0XHR9O1xyXG5cdFx0ZnVuY3Rpb24gc3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uKHVzZXIpIHtcclxuXHRcdFx0dXNlckRhdGEuc2V0VXNlcih1c2VyKTtcclxuXHRcdFx0dXNlckxvY2F0aW9uU2VydmljZS5zZXRVc2VyTG9jYXRpb24oKTtcclxuXHRcdFx0UmVxdWVzdHNTZXJ2aWNlLnJlZ2lzdGVyKCk7XHJcblxyXG5cdFx0XHRpZiAodXNlci5kZXZpY2VfdG9rZW4pIHtcclxuXHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUucG9zdC5wb3B1bGFyJyk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0JHN0YXRlLmdvKCdob21lLnVzZXJFZGl0UGFnZScpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gc29jaWFsQXV0aGVudGljYXRlKHByb3ZpZGVyKSB7XHJcblx0XHRcdCRpb25pY0xvYWRpbmcuc2hvdygpO1xyXG5cdFx0XHQkYXV0aC5hdXRoZW50aWNhdGUocHJvdmlkZXIpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRzdWNjZXNzZnVsQXV0aGVudGljYXRpb24ocmVzcG9uc2UuZGF0YS51c2VyKTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdC8vJGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHJcblx0XHRmdW5jdGlvbiBsb2FkUG9zdE1vZGFsKCkge1xyXG5cdFx0XHQkaW9uaWNNb2RhbC5mcm9tVGVtcGxhdGVVcmwoJ2FwcC9ob21lL3ZpZXdzL3BvbGljeS5odG1sJywge1xyXG5cdFx0XHRcdHNjb3BlOiAkc2NvcGVcclxuXHRcdFx0fSkudGhlbihmdW5jdGlvbihtb2RhbCkge1xyXG5cdFx0XHRcdCRzY29wZS5tb2RhbCA9IG1vZGFsO1xyXG5cdFx0XHRcdCRzY29wZS5tb2RhbC5zaG93KCk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHJcblx0XHRmdW5jdGlvbiBhdXRoTG9nb3V0KCkge1xyXG5cdFx0XHQkYXV0aC5sb2dvdXQoKTtcclxuXHRcdFx0dXNlckRhdGEucmVtb3ZlVXNlcigpO1xyXG5cdFx0XHQkc3RhdGUuZ28oJ2F1dGhlbnRpY2F0ZScpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5ob21lJylcclxuXHRcdC5jb250cm9sbGVyKCdIb21lQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZScsICd1c2VyRGF0YScsICdTb2NrZXQnLCAndG9hc3RyJywgJyRpb25pY1RhYnNEZWxlZ2F0ZScsJyRyb290U2NvcGUnLEhvbWVDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIEhvbWVDb250cm9sbGVyKCRzY29wZSwgJHN0YXRlLCB1c2VyRGF0YSwgU29ja2V0LCB0b2FzdHIsJGlvbmljVGFic0RlbGVnYXRlLCRyb290U2NvcGUpIHtcclxuXHRcdHZhciBoYyA9IHRoaXM7XHJcblx0XHRoYy5iYWRnZVZhbHVlID0gJyc7XHJcblx0XHRoYy5jaGF0Q2xpY2tlZCA9IGNoYXRDbGlja2VkO1xyXG5cdFx0LypcclxuXHRcdFx0Q29kZSBmb3IgaGlkaW5nIHRoZSBoZWFkZXIgb24gc2Nyb2xsIHVwIGFuZCBkb3duXHJcblx0XHQqL1xyXG5cdFx0JHJvb3RTY29wZS5zbGlkZUhlYWRlciA9IGZhbHNlO1xyXG4gIFx0XHQkcm9vdFNjb3BlLnNsaWRlSGVhZGVyUHJldmlvdXMgPSAwO1xyXG5cdFx0U29ja2V0Lm9uKFwiY29ubmVjdFwiLCBmdW5jdGlvbigpIHtcclxuXHRcdFx0U29ja2V0LmVtaXQoJ2FkZFRvU2luZ2xlUm9vbScsIHsgJ3Jvb21JZCc6IHVzZXJEYXRhLmdldFVzZXIoKS5faWQgfSk7XHJcblx0XHRcdFNvY2tldC5vbignbmV3TWVzc2FnZVJlY2VpdmVkJywgbWVzc2FnZVJlY2VpdmVkKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdGZ1bmN0aW9uIG1lc3NhZ2VSZWNlaXZlZChtZXNzYWdlKSB7XHJcblx0XHRcdHZhciBtZXNzYWdlU3RyaW5nID0gbWVzc2FnZS5tZXNzYWdlO1xyXG5cdFx0XHRpZihtZXNzYWdlLnR5cGUgJiYgbWVzc2FnZS50eXBlPT0naW1nJyl7XHJcblx0XHRcdFx0bWVzc2FnZVN0cmluZyA9ICdOZXcgaW1hZ2UnO1xyXG5cdFx0XHR9XHJcblx0XHRcdHZhciB1c2VyTmFtZSA9IG1lc3NhZ2UudXNlci5hbm9uTmFtZXx8bWVzc2FnZS51c2VyLmZhY2Vib29rTmFtZSB8fG1lc3NhZ2UudXNlci5nb29nbGVOYW1lIDtcclxuXHRcdFx0aWYgKG1lc3NhZ2UudXNlci5faWQgPT0gdXNlckRhdGEuZ2V0VXNlcigpLl9pZCkge1xyXG5cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRpZiAoJHN0YXRlLmN1cnJlbnQubmFtZSA9PSAnY2hhdEJveCcpIHtcclxuXHJcblx0XHRcdFx0XHRpZiAoJHN0YXRlLnBhcmFtcy51c2VyICE9IG1lc3NhZ2UudXNlci5faWQpIHtcclxuXHRcdFx0XHRcdFx0dG9hc3RyLmluZm8oJzxwPicgKyB1c2VyTmFtZSsgJzwvcD48cD4nICsgbWVzc2FnZVN0cmluZyArICc8L3A+Jywge1xyXG5cdFx0XHRcdFx0XHRcdGFsbG93SHRtbDogdHJ1ZSxcclxuXHRcdFx0XHRcdFx0XHRvblRhcDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0XHQkc3RhdGUuZ28oJ2NoYXRCb3gnLCB7IHVzZXI6IG1lc3NhZ2UudXNlci5faWQgfSk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHR0b2FzdHIuaW5mbygnPHA+JyArIHVzZXJOYW1lICsgJzwvcD48cD4nICsgbWVzc2FnZVN0cmluZyArICc8L3A+Jywge1xyXG5cdFx0XHRcdFx0XHRhbGxvd0h0bWw6IHRydWUsXHJcblx0XHRcdFx0XHRcdG9uVGFwOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHQkc3RhdGUuZ28oJ2NoYXRCb3gnLCB7IHVzZXI6IG1lc3NhZ2UudXNlci5faWQgfSk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0aGMuYmFkZ2VWYWx1ZSA9IDE7XHJcblxyXG5cdFx0XHRcdH1cclxuXHJcblxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRoYy5nb0ZvcndhcmQgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHJcblx0XHRcdHZhciBzZWxlY3RlZCA9ICRpb25pY1RhYnNEZWxlZ2F0ZS5zZWxlY3RlZEluZGV4KCk7XHJcblx0XHRcdGlmIChzZWxlY3RlZCAhPSAtMSkge1xyXG5cdFx0XHRcdGlmKHNlbGVjdGVkPT09MSl7XHJcblx0XHRcdFx0XHQkaW9uaWNUYWJzRGVsZWdhdGUuc2VsZWN0KHNlbGVjdGVkICsgMik7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRcdCRpb25pY1RhYnNEZWxlZ2F0ZS5zZWxlY3Qoc2VsZWN0ZWQgKyAxKTtcdFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0XHRoYy5nb0JhY2sgPSBmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdHZhciBzZWxlY3RlZCA9ICRpb25pY1RhYnNEZWxlZ2F0ZS5zZWxlY3RlZEluZGV4KCk7XHJcblx0XHRcdGlmIChzZWxlY3RlZCAhPT0gLTEgJiYgc2VsZWN0ZWQgIT09IDApIHtcclxuXHRcdFx0XHRpZihzZWxlY3RlZD09PTMpe1xyXG5cdFx0XHRcdFx0JGlvbmljVGFic0RlbGVnYXRlLnNlbGVjdChzZWxlY3RlZCAtIDIpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNle1xyXG5cdFx0XHRcdFx0JGlvbmljVGFic0RlbGVnYXRlLnNlbGVjdChzZWxlY3RlZCAtIDEpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0XHRmdW5jdGlvbiBjaGF0Q2xpY2tlZCgpIHtcclxuXHRcdFx0aGMuYmFkZ2VWYWx1ZSA9ICcnO1xyXG5cdFx0XHQvLyRzdGF0ZS5nbygnaG9tZS5jaGF0LmFsbCcpO1xyXG5cdFx0fVxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwuaG9tZScpXHJcblx0XHQuZGlyZWN0aXZlKCdkaXN0YW5jZVZpZXcnLCBbJ3Bvc3RTZXJ2aWNlJywgJyR0aW1lb3V0JywgZnVuY3Rpb24ocG9zdFNlcnZpY2UsICR0aW1lb3V0KSB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9ob21lL3ZpZXdzL2Rpc3RhbmNlVmlld1RlbXBsYXRlLmh0bWwnLFxyXG5cdFx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0XHRwb3NpdGlvbkNvcmRzOiAnPSdcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHJlcGxhY2U6IHRydWUsXHJcblx0XHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUpIHtcclxuXHRcdFx0XHRcdCR0aW1lb3V0KGdldERpc3RhbmNlLCAxMDAwKTtcclxuXHJcblx0XHRcdFx0XHRmdW5jdGlvbiBnZXREaXN0YW5jZSgpIHtcclxuXHRcdFx0XHRcdFx0aWYgKHNjb3BlLnBvc2l0aW9uQ29yZHMpIHtcclxuXHRcdFx0XHRcdFx0XHRzY29wZS5kaXN0YW5jZU9iaiA9IHtcclxuXHRcdFx0XHRcdFx0XHRcdGxhdGl0dWRlOiBzY29wZS5wb3NpdGlvbkNvcmRzWzFdLFxyXG5cdFx0XHRcdFx0XHRcdFx0bG9uZ2l0dWRlOiBzY29wZS5wb3NpdGlvbkNvcmRzWzBdLFxyXG5cclxuXHRcdFx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0XHRcdHBvc3RTZXJ2aWNlLmdldERpc3RhbmNlKHNjb3BlLmRpc3RhbmNlT2JqKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG5cdFx0XHRcdFx0XHRcdFx0c2NvcGUuZGlzdGFuY2VPYmouZGlzdGFuY2UgPSByZXMgKyAnIG1pJztcclxuXHRcdFx0XHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdFx0XHRcdHNjb3BlLmRpc3RhbmNlT2JqLmRpc3RhbmNlID0gJyc7XHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0c2NvcGUuZGlzdGFuY2VPYmogPSB7fTtcclxuXHRcdFx0XHRcdFx0XHRzY29wZS5kaXN0YW5jZU9iai5kaXN0YW5jZSA9ICcnO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblx0XHR9XSk7XHJcblx0XHQvKi5kaXJlY3RpdmUoJ2V4cGFuZGluZ1RleHRhcmVhJywgW2Z1bmN0aW9uKCkge1xyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdFx0Y29udHJvbGxlcjogZnVuY3Rpb24oJHNjb3BlLCAkZWxlbWVudCwgJGF0dHJzLCAkdGltZW91dCkge1xyXG5cdFx0XHRcdFx0JGVsZW1lbnQuY3NzKCdtaW4taGVpZ2h0JywgJzAnKTtcclxuXHRcdFx0XHRcdCRlbGVtZW50LmNzcygncmVzaXplJywgJ25vbmUnKTtcclxuXHRcdFx0XHRcdCRlbGVtZW50LmNzcygnb3ZlcmZsb3cteScsICdoaWRkZW4nKTtcclxuXHRcdFx0XHRcdHNldEhlaWdodCgwKTtcclxuXHRcdFx0XHRcdCR0aW1lb3V0KHNldEhlaWdodFRvU2Nyb2xsSGVpZ2h0KTtcclxuXHJcblx0XHRcdFx0XHRmdW5jdGlvbiBzZXRIZWlnaHQoaGVpZ2h0KSB7XHJcblx0XHRcdFx0XHRcdCRlbGVtZW50LmNzcygnaGVpZ2h0JywgaGVpZ2h0ICsgJ3B4Jyk7XHJcblx0XHRcdFx0XHRcdCRlbGVtZW50LmNzcygnbWF4LWhlaWdodCcsIGhlaWdodCArICdweCcpO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdGZ1bmN0aW9uIHNldEhlaWdodFRvU2Nyb2xsSGVpZ2h0KCkge1xyXG5cdFx0XHRcdFx0XHRzZXRIZWlnaHQoMCk7XHJcblx0XHRcdFx0XHRcdHZhciBzY3JvbGxIZWlnaHQgPSBhbmd1bGFyLmVsZW1lbnQoJGVsZW1lbnQpWzBdXHJcblx0XHRcdFx0XHRcdFx0LnNjcm9sbEhlaWdodDtcclxuXHRcdFx0XHRcdFx0aWYgKHNjcm9sbEhlaWdodCAhPT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdFx0XHRcdFx0c2V0SGVpZ2h0KHNjcm9sbEhlaWdodCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gYW5ndWxhci5lbGVtZW50KCRlbGVtZW50KVswXS52YWx1ZTtcclxuXHRcdFx0XHRcdH0sIHNldEhlaWdodFRvU2Nyb2xsSGVpZ2h0KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblx0XHR9XSkqL1xyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdHZhciBpbWFnZU1vZGFsID0gZnVuY3Rpb24oJGlvbmljTW9kYWwpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnQScsXHJcblx0XHRcdHNjb3BlOiB7XHJcblxyXG5cdFx0XHRcdGltYWdlTW9kYWw6ICdAJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRsaW5rOiBmdW5jdGlvbigkc2NvcGUsIGVsZW0pIHtcclxuXHJcblx0XHRcdFx0ZnVuY3Rpb24gc2hvd0ltYWdlTW9kYWwoaW1hZ2UpIHtcclxuXHRcdFx0XHRcdGxvYWRNb2RhbCgpLnRoZW4oZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdCRzY29wZS5jdXJyZW50SW1hZ2UgPSBpbWFnZTtcclxuXHRcdFx0XHRcdFx0JHNjb3BlLm1vZGFsLnNob3coKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGZ1bmN0aW9uIGxvYWRNb2RhbCgpIHtcclxuXHRcdFx0XHRcdHJldHVybiAkaW9uaWNNb2RhbC5mcm9tVGVtcGxhdGVVcmwoJ2FwcC9jaGF0L3ZpZXdzL2NoYXRJbWFnZU1vZGFsLmh0bWwnLCB7XHJcblx0XHRcdFx0XHRcdHNjb3BlOiAkc2NvcGVcclxuXHRcdFx0XHRcdH0pLnRoZW4oZnVuY3Rpb24obW9kYWwpIHtcclxuXHRcdFx0XHRcdFx0JHNjb3BlLm1vZGFsID0gbW9kYWw7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxlbS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdFx0XHRzaG93SW1hZ2VNb2RhbCgkc2NvcGUuaW1hZ2VNb2RhbCk7XHJcblx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0fTtcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwuaG9tZScpLmRpcmVjdGl2ZSgna2VlcFNjcm9sbCcsIFtcclxuXHRcdCckc3RhdGUnLCAnJHRpbWVvdXQnLCAnU2Nyb2xsUG9zaXRpb25zJywgJyRpb25pY1Njcm9sbERlbGVnYXRlJyxcclxuXHRcdGZ1bmN0aW9uKCRzdGF0ZSwgJHRpbWVvdXQsIFNjcm9sbFBvc2l0aW9ucywgJGlvbmljU2Nyb2xsRGVsZWdhdGUpIHtcclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRyZXN0cmljdDogJ0EnLFxyXG5cdFx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlKSB7XHJcblx0XHRcdFx0XHRzY29wZS4kb24oJyRzdGF0ZUNoYW5nZVN0YXJ0JywgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFNjcm9sbFBvc2l0aW9uc1skc3RhdGUuY3VycmVudC5uYW1lXSA9ICRpb25pY1Njcm9sbERlbGVnYXRlLmdldFNjcm9sbFBvc2l0aW9uKCk7XHJcblxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHQkdGltZW91dChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0dmFyIG9mZnNldDtcclxuXHRcdFx0XHRcdFx0b2Zmc2V0ID0gU2Nyb2xsUG9zaXRpb25zWyRzdGF0ZS5jdXJyZW50Lm5hbWVdO1xyXG5cdFx0XHRcdFx0XHRpZiAob2Zmc2V0KSB7XHJcblx0XHRcdFx0XHRcdFx0JGlvbmljU2Nyb2xsRGVsZWdhdGUuc2Nyb2xsVG8ob2Zmc2V0LmxlZnQsIG9mZnNldC50b3ApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblx0XHR9XHJcblx0XSkuZmFjdG9yeSgnU2Nyb2xsUG9zaXRpb25zJywgW1xyXG5cdFx0ZnVuY3Rpb24oKSB7XHJcblx0XHRcdHJldHVybiB7fTtcclxuXHRcdH1cclxuXHRdKS5kaXJlY3RpdmUoJ2lzRm9jdXNlZCcsIFsnJHRpbWVvdXQnLCBmdW5jdGlvbigkdGltZW91dCkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0c2NvcGU6IHsgdHJpZ2dlcjogJ0Bpc0ZvY3VzZWQnIH0sXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50KSB7XHJcblxyXG5cdFx0XHRcdHNjb3BlLiR3YXRjaCgndHJpZ2dlcicsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblxyXG5cdFx0XHRcdFx0aWYgKHZhbHVlID09PSAndHJ1ZScpIHtcclxuXHRcdFx0XHRcdFx0JHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0ZWxlbWVudFswXS5mb2N1cygpO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRlbGVtZW50Lm9uKCdibHVyJywgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0XHQvL2FsZXJ0KFwiaGVsbG9cIik7XHJcblx0XHRcdFx0XHRcdFx0XHRlbGVtZW50WzBdLmZvY3VzKCk7XHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9XSkuZGlyZWN0aXZlKCdsYXp5SW1nJywgZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHQvKiAgICAgPGxhenktaW1nIHNyYy1sYXJnZT1cImh0dHA6Ly95b3ViYWt1LmNvbS91cGxvYWRzL3BsYWNlc19pbWFnZXMvbGFyZ2Uve3tpbWd9fVwiIHNyYy1zbWFsbD1cImh0dHA6Ly95b3ViYWt1LmNvbS9hdGh1bWIucGhwP2ZpbGU9e3tpbWd9fSZzbWFsbFwiIC8+XHJcblx0XHRcdCAqL1xyXG5cdFx0XHRyZXBsYWNlOiB0cnVlLFxyXG5cdFx0XHR0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJsYXp5LWltZ1wiPjxkaXYgY2xhc3M9XCJzbVwiPjxpbWcgc3JjPVwie3tpbWdTbWFsbH19XCIgY2xhc3M9XCJzbWFsbFwiLz48L2Rpdj48ZGl2IHN0eWxlPVwicGFkZGluZy1ib3R0b206IDc1JTtcIj48L2Rpdj48aW1nIHNyYz1cInt7aW1nTGFyZ2V9fVwiIGNsYXNzPVwibGFyZ2VcIi8+PC9kaXY+JyxcclxuXHRcdFx0c2NvcGU6IHtcclxuXHRcdFx0XHRpbWdMYXJnZTogJ0BzcmNMYXJnZScsXHJcblx0XHRcdFx0aW1nU21hbGw6ICdAc3JjU21hbGwnXHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbSkge1xyXG5cdFx0XHRcdHZhciBpbWdTbWFsbCA9IG5ldyBJbWFnZSgpO1xyXG5cdFx0XHRcdHZhciBpbWdMYXJnZSA9IG5ldyBJbWFnZSgpO1xyXG5cdFx0XHRcdGltZ1NtYWxsLnNyYyA9IHNjb3BlLmltZ1NtYWxsO1xyXG5cdFx0XHRcdGltZ1NtYWxsLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0ZWxlbS5jaGlsZHJlbignLnNtJykuZmluZCgnaW1nJykuY3NzKCdvcGFjaXR5JywgJzEnKTtcclxuXHRcdFx0XHRcdGltZ0xhcmdlLnNyYyA9IHNjb3BlLmltZ0xhcmdlO1xyXG5cdFx0XHRcdFx0aW1nTGFyZ2Uub25sb2FkID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdGVsZW0uZmluZCgnaW1nJykuY3NzKCdvcGFjaXR5JywgJzEnKTtcclxuXHRcdFx0XHRcdH07XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9KS5kaXJlY3RpdmUoJ2ltYWdlTW9kYWwnLCBbJyRpb25pY01vZGFsJywgaW1hZ2VNb2RhbF0pXHJcblx0LmRpcmVjdGl2ZSgnd2F0Y2hTY3JvbGwnLFsnJHJvb3RTY29wZScsd2F0Y2hTY3JvbGxdKTtcclxuXHJcblx0ZnVuY3Rpb24gd2F0Y2hTY3JvbGwoJHJvb3RTY29wZSl7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0EnLFxyXG5cdFx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSxlbGVtKXtcclxuXHJcblx0XHRcdFx0dmFyIHN0YXJ0ID0gMDtcclxuXHRcdFx0XHR2YXIgdGhyZXNob2xkID0gMTUwO1xyXG5cdFx0XHRcdGVsZW0uYmluZCgnc2Nyb2xsJyxmdW5jdGlvbihlKXtcclxuXHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0dmFyIHNjcm9sbFRvcCA9IGUuc3JjRWxlbWVudC5zY3JvbGxUb3A7XHJcblx0XHRcdFx0XHRpZihzY3JvbGxUb3Atc3RhcnQgPiB0aHJlc2hvbGQpe1xyXG5cdFx0XHRcdFx0XHQkcm9vdFNjb3BlLnNsaWRlSGVhZGVyID0gdHJ1ZTtcclxuXHRcdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0XHQkcm9vdFNjb3BlLnNsaWRlSGVhZGVyID0gZmFsc2U7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRpZigkcm9vdFNjb3BlLnNsaWRlSGVhZGVyUHJldmlvdXMgPiBzY3JvbGxUb3AgLSBzdGFydCl7XHJcblx0XHRcdFx0XHRcdCRyb290U2NvcGUuc2xpZGVIZWFkZXIgPSBmYWxzZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdCRyb290U2NvcGUuc2xpZGVIZWFkZXJQcmV2aW91cyA9IHNjcm9sbFRvcCAtIHN0YXJ0O1xyXG5cdFx0XHRcdFx0JHJvb3RTY29wZS4kYXBwbHkoKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcil7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5ob21lJylcclxuXHRcdC5zZXJ2aWNlKCdob21lU2VydmljZScsWyckaHR0cCcsJ1VwbG9hZCcsSG9tZVNlcnZpY2VdKTtcclxuXHJcblx0XHRmdW5jdGlvbiBIb21lU2VydmljZSgkaHR0cCxVcGxvYWQpe1xyXG5cdFx0XHQvL3RoaXMuYmFzZVVSTCA9ICdodHRwczovL3BldGFsY2hhdC1pbWFuaml0aHJlZGR5LmM5dXNlcnMuaW8vJztcclxuXHRcdFx0dGhpcy5iYXNlVVJMID0gJ2h0dHBzOi8vYmFuYW5hLXN1cnByaXNlLTMxMzMyLmhlcm9rdWFwcC5jb20vJztcclxuXHRcdFx0dGhpcy5kZWxldGVVcGxvYWQgPSBkZWxldGVVcGxvYWQ7XHJcblx0XHRcdHRoaXMuc3VibWl0VXBsb2FkID0gc3VibWl0VXBsb2FkO1xyXG5cdFx0XHR0aGlzLmdldEltYWdlcyA9IGdldEltYWdlcztcclxuXHRcdFx0dmFyIHRoYXQgPSB0aGlzO1xyXG5cdFx0XHRmdW5jdGlvbiBkZWxldGVVcGxvYWQoaWQpe1xyXG5cdFx0XHRcdHJldHVybiAkaHR0cC5wb3N0KHRoYXQuYmFzZVVSTCsndXBsb2FkL2RlbGV0ZVVwbG9hZCcsIHsnZGF0YScgOiB7J3B1YmxpY19pZCc6aWR9fSApO1xyXG5cdFx0XHR9XHJcblx0XHRcdGZ1bmN0aW9uIGdldEltYWdlcyhpbWFnZVRleHQpe1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGltYWdlVGV4dCk7XHJcblx0XHRcdFx0cmV0dXJuICRodHRwLmdldCh0aGF0LmJhc2VVUkwrJ3VwbG9hZC9nZXRJbWFnZXMnLHtwYXJhbXM6e2ltYWdlVGV4dDppbWFnZVRleHR9fSk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZnVuY3Rpb24gc3VibWl0VXBsb2FkKGZpbGUpe1xyXG5cdFx0XHRcdHJldHVybiBVcGxvYWQudXBsb2FkKHtcclxuXHRcdFx0XHRcdHVybDogdGhhdC5iYXNlVVJMICsgJ3VwbG9hZC9zaW5nbGVVcGxvYWRJZCcsXHJcblx0XHRcdFx0XHRkYXRhOiB7IGZpbGU6IGZpbGUgfVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRcclxuXHRcdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5ob21lJylcclxuXHRcdFx0LnNlcnZpY2UoJ1JlcXVlc3RzU2VydmljZScsIFsnaG9tZVNlcnZpY2UnLCAnJGh0dHAnLCAnJHEnLCAnJGlvbmljTG9hZGluZycsICckY29yZG92YVB1c2hWNScsICckYXV0aCcsIFJlcXVlc3RzU2VydmljZV0pO1xyXG5cdFxyXG5cclxuXHRmdW5jdGlvbiBSZXF1ZXN0c1NlcnZpY2UoaG9tZVNlcnZpY2UsICRodHRwLCAkcSwgJGlvbmljTG9hZGluZywgJGNvcmRvdmFQdXNoVjUsICRhdXRoKSB7XHJcblxyXG5cdFx0dmFyIGJhc2VfdXJsID0gaG9tZVNlcnZpY2UuYmFzZVVSTDtcclxuXHJcblx0XHRmdW5jdGlvbiByZWdpc3RlcigpIHtcclxuXHJcblx0XHRcdHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XHJcblx0XHRcdFxyXG5cdFx0XHR2YXIgb3B0aW9ucyA9IHtcclxuXHRcdFx0XHRhbmRyb2lkOiB7XHJcblx0XHRcdFx0XHRzZW5kZXJJRDogXCI2Nzk0NjE4NDAxMTVcIixcclxuXHRcdFx0XHRcdHZpYnJhdGU6IFwidHJ1ZVwiXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRicm93c2VyOntcclxuXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRpb3M6IHtcclxuXHRcdFx0XHRcdGFsZXJ0OiBcInRydWVcIixcclxuXHRcdFx0XHRcdGJhZGdlOiBcInRydWVcIixcclxuXHRcdFx0XHRcdHNvdW5kOiBcInRydWVcIlxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0d2luZG93czoge31cclxuXHRcdFx0fTtcclxuXHRcdFx0LyppZih2aWJyYXRlKXtcclxuXHRcdFx0XHQvL29wdGlvbnMuYW5kcm9pZC52aWJyYXRlID0gdHJ1ZTtcclxuXHRcdFx0XHQvL29wdGlvbnMuYW5kcm9pZC5mb3JjZVNob3cgPXRydWU7XHJcblx0XHRcdH0qL1xyXG5cdFx0XHRcclxuXHRcdFx0JGNvcmRvdmFQdXNoVjUuaW5pdGlhbGl6ZShvcHRpb25zKS50aGVuKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdC8vIHN0YXJ0IGxpc3RlbmluZyBmb3IgbmV3IG5vdGlmaWNhdGlvbnNcclxuXHRcdFx0XHQkY29yZG92YVB1c2hWNS5vbk5vdGlmaWNhdGlvbihmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coXCJpbnNpZGVlZWUgbm90aWZpY2F0aW9uXCIpO1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coYXJndW1lbnRzKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHQvLyBzdGFydCBsaXN0ZW5pbmcgZm9yIGVycm9yc1xyXG5cdFx0XHRcdCRjb3Jkb3ZhUHVzaFY1Lm9uRXJyb3IoKTtcclxuXHJcblx0XHRcdFx0Ly8gcmVnaXN0ZXIgdG8gZ2V0IHJlZ2lzdHJhdGlvbklkXHJcblx0XHRcdFx0aWYgKCRhdXRoLmlzQXV0aGVudGljYXRlZCgpKSB7XHJcblx0XHRcdFx0XHQkY29yZG92YVB1c2hWNS5yZWdpc3RlcigpLnRoZW4oZnVuY3Rpb24ocmVnaXN0cmF0aW9uSWQpIHtcclxuXHRcdFx0XHRcdFx0JGh0dHAucG9zdChiYXNlX3VybCArICdub3RpZmljYXRpb24vcmVnaXN0ZXInLCB7ICdkZXZpY2VfdG9rZW4nOiByZWdpc3RyYXRpb25JZCB9KVxyXG5cdFx0XHRcdFx0XHRcdC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcclxuXHRcdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0XHRcdC5jYXRjaChmdW5jdGlvbihkYXRhKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3QoZGF0YSk7XHJcblx0XHRcdFx0XHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0fSk7XHJcblxyXG5cclxuXHRcdFx0cmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcblxyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ29vZ2xlU2lnbkluKHByb2ZpbGUpe1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChiYXNlX3VybCsnYXV0aGVudGljYXRlL2F1dGgvbmF0aXZlR29vZ2xlJywgeyBwcm9maWxlOiBwcm9maWxlIH0pO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0Z29vZ2xlU2lnbkluOiBnb29nbGVTaWduSW4sXHJcblx0XHRcdHJlZ2lzdGVyOiByZWdpc3RlclxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKXtcbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBAbmdkb2Mgc2VydmljZVxuICogQG5hbWUgYXV0aE1vZEFwcC51c2VyRGF0YVxuICogQGRlc2NyaXB0aW9uXG4gKiAjIHVzZXJEYXRhXG4gKiBGYWN0b3J5IGluIHRoZSBhdXRoTW9kQXBwLlxuICovXG5hbmd1bGFyLm1vZHVsZSgncGV0YWwuaG9tZScpXG4gIC5mYWN0b3J5KCd1c2VyRGF0YScsWyckd2luZG93JywnJHN0YXRlJywnJGF1dGgnLCckaHR0cCcsJ2hvbWVTZXJ2aWNlJyx1c2VyRGF0YV0pO1xuXG4gIGZ1bmN0aW9uIHVzZXJEYXRhKCR3aW5kb3csJHN0YXRlLCRhdXRoLCRodHRwLGhvbWVTZXJ2aWNlKSB7XG4gICAgdmFyIHN0b3JhZ2UgPSAkd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgICB2YXIgY2FjaGVkVXNlcj17fTtcbiAgICB2YXIgb2JqMSA9ICB7XG4gICAgICBzZXRVc2VyOiBmdW5jdGlvbiAodXNlcikge1xuICAgICAgICBcbiAgICAgICAgaWYodXNlcil7XG4gICAgICAgICAgc3RvcmFnZS5zZXRJdGVtKCd1c2VyJyxKU09OLnN0cmluZ2lmeSh1c2VyKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcblxuICAgICAgICAgIHZhciB1c2VySWQgPSAkYXV0aC5nZXRQYXlsb2FkKCkuc3ViO1xuICAgICAgICAgIGlmKHVzZXJJZCl7XG4gICAgICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwrJ3VzZXIvZ2V0LycrdXNlcklkKS50aGVuKGZ1bmN0aW9uKHJlcyl7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvKmlmKG9iajEuaXNVc2VyRXhpc3RzKCkpe1xuICAgICAgICAgICAgICAgICAgc3RvcmFnZS5yZW1vdmVJdGVtKCd1c2VyJyk7XG4gICAgICAgICAgICAgIH0qL1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgIHN0b3JhZ2Uuc2V0SXRlbSgndXNlcicsSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcblxuICAgICAgfSxcbiAgICAgIGdldFVzZXI6IGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2Uoc3RvcmFnZS5nZXRJdGVtKCd1c2VyJykpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZVVzZXI6IGZ1bmN0aW9uKCl7XG4gICAgICAgIGNhY2hlZFVzZXIgPSBudWxsO1xuICAgICAgICBzdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXInKTtcbiAgICAgIH0sXG4gICAgICBpc1VzZXJFeGlzdHM6IGZ1bmN0aW9uKCl7XG4gICAgICAgIGlmKG9iajEuZ2V0VXNlcigpKXtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gb2JqMTtcbiAgfVxufSkod2luZG93LmFuZ3VsYXIpO1xuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBvc3QnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ0FsbFBvc3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ3Bvc3RTZXJ2aWNlJywnJGlvbmljTG9hZGluZycsIEFsbFBvc3RDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIEFsbFBvc3RDb250cm9sbGVyKCRzY29wZSwgJHN0YXRlLCBwb3N0U2VydmljZSwkaW9uaWNMb2FkaW5nKSB7XHJcblx0XHR2YXIgYXBjID0gdGhpcztcclxuXHRcdGFwYy5nZXRBbGxQb3N0cyA9IGdldEFsbFBvc3RzO1xyXG5cdFx0YXBjLnB1bGxSZWZyZXNoUG9zdHMgPSBwdWxsUmVmcmVzaFBvc3RzO1xyXG5cdFx0YXBjLmxvYWRNb3JlUG9zdHMgPSBsb2FkTW9yZVBvc3RzO1xyXG5cdFx0YXBjLnBvc3RTZWFyY2hUZXh0U3VibWl0ID0gcG9zdFNlYXJjaFRleHRTdWJtaXQ7XHJcblx0XHRhcGMuc2VhcmNoQ3Jvc3NTdWJtaXQgPSBzZWFyY2hDcm9zc1N1Ym1pdDtcclxuXHRcdGFwYy5wYXJhbXMgPSB7XHJcblx0XHRcdFx0bGltaXQ6IDMsXHJcblx0XHRcdFx0cGFnZTogMVxyXG5cdFx0XHR9O1xyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gcHVsbFJlZnJlc2hQb3N0cygpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBzZWFyY2hDcm9zc1N1Ym1pdCgpe1xyXG5cdFx0XHRhcGMucG9zdFNlYXJjaFRleHQgPSAnJztcclxuXHRcdFx0YXBjLnNob3dTZWFyY2hDcm9zcyA9IGZhbHNlO1xyXG5cdFx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gcG9zdFNlYXJjaFRleHRTdWJtaXQoaW50ZXJlc3Qpe1xyXG5cdFx0XHRcclxuXHRcdFx0YXBjLnNob3dTZWFyY2hDcm9zcyA9IHRydWU7XHJcblx0XHRcdGlmKGludGVyZXN0KXtcclxuXHRcdFx0XHRhcGMucG9zdFNlYXJjaFRleHQgPSBpbnRlcmVzdDtcdFxyXG5cdFx0XHR9XHJcblx0XHRcdGlmKGFwYy5wb3N0U2VhcmNoVGV4dCl7XHJcblx0XHRcdFx0YWN0aXZhdGUoKTtcdFxyXG5cdFx0XHR9XHJcblx0XHRcdFxyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gbG9hZE1vcmVQb3N0cygpIHtcclxuXHRcdFx0YXBjLnBhcmFtcy5wYWdlICs9IDE7XHJcblx0XHRcdGdldEFsbFBvc3RzKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0QWxsUG9zdHMoKSB7XHJcblx0XHRcdGFwYy5ub1Bvc3RzID0gZmFsc2U7XHRcclxuXHRcdFx0cG9zdFNlcnZpY2UuZ2V0QWxsUG9zdHMoYXBjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGFuZ3VsYXIuZm9yRWFjaChyZXNwb25zZS5kYXRhLmRvY3MsIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0XHRhcGMucG9zdHNMaXN0LnB1c2godmFsdWUpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGFwYy5ub1Bvc3RzID0hcmVzcG9uc2UuZGF0YS50b3RhbDtcclxuXHRcdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IHRydWU7XHJcblx0XHRcdFx0aWYgKHJlc3BvbnNlLmRhdGEudG90YWwgPiBhcGMucG9zdHNMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFxyXG5cclxuXHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwuaW5maW5pdGVTY3JvbGxDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHJcblx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gZmFsc2U7XHJcblx0XHRcdGFwYy5wb3N0c0xpc3QgPSBbXTtcclxuXHRcdFx0YXBjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRsaW1pdDogNSxcclxuXHRcdFx0XHRwYWdlOiAxLFxyXG5cclxuXHRcdFx0fTtcclxuXHRcdFx0aWYoYXBjLnBvc3RTZWFyY2hUZXh0KXtcclxuXHRcdFx0XHRhcGMucGFyYW1zLmludGVyZXN0ID0gXHRhcGMucG9zdFNlYXJjaFRleHQ7XHJcblx0XHRcdH1cclxuXHRcdFx0Z2V0QWxsUG9zdHMoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBvc3QnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ0NyZWF0ZVBvc3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlJywgJ3Bvc3RTZXJ2aWNlJywnJGlvbmljTG9hZGluZycsICdob21lU2VydmljZScsQ3JlYXRlUG9zdENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gQ3JlYXRlUG9zdENvbnRyb2xsZXIoJHNjb3BlLCAkc3RhdGUsIHBvc3RTZXJ2aWNlLCRpb25pY0xvYWRpbmcsaG9tZVNlcnZpY2UpIHtcclxuXHRcdHZhciBjcGMgPSB0aGlzO1xyXG5cdFx0Y3BjLnN1Ym1pdFBvc3QgPSBzdWJtaXRQb3N0O1xyXG5cdFx0Y3BjLnBvc3QgPSB7fTtcclxuXHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0Y3BjLmdvQmFjayA9IGZ1bmN0aW9uKCl7XHJcblx0XHRcdHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcclxuXHRcdH07XHJcblx0XHQkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCl7XHJcblx0XHRcdHJldHVybiBjcGMucG9zdC5jb250ZW50O1xyXG5cdFx0fSwgZnVuY3Rpb24obmV3VmFsLCBvbGRWYWwpIHtcclxuXHRcdFx0aWYgKG5ld1ZhbCAmJiBuZXdWYWwubGVuZ3RoID4gMzAwKSB7XHJcblx0XHRcdFx0Y3BjLnBvc3QuY29udGVudCA9IG9sZFZhbDtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gc3VibWl0UG9zdCgpIHtcclxuXHRcdFx0JGlvbmljTG9hZGluZy5zaG93KCk7XHJcblx0XHRcdHBvc3RTZXJ2aWNlLnN1Ym1pdFBvc3QoY3BjLnBvc3QpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0XHQkc3RhdGUuZ28oJ2hvbWUucG9zdC5sYXRlc3QnKTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coXCJwb3N0IGNvbnRyb2xsZXIgZXJyb3JcIik7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpe1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGNwYy5zZWxlY3RSYW5kb21JbWFnZSA9IGZ1bmN0aW9uKGltZyl7XHJcblx0XHRcdGNwYy5wb3N0LmltYWdlID0gaW1nO1xyXG5cdFx0fTtcclxuXHRcdGNwYy5sb2FkUmFuZG9tSW1hZ2VzID0gZnVuY3Rpb24oaW1hZ2VUZXh0KXtcclxuXHRcdFx0Y3BjLmxvYWRpbmdSYW5kb21JbWFnZSA9IHRydWU7XHJcblx0XHRcdGNwYy5yYW5kb21JbWFnZXMgPSBbXTtcclxuXHRcdFx0aG9tZVNlcnZpY2UuZ2V0SW1hZ2VzKGltYWdlVGV4dCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcblx0XHRcdFx0Y3BjLnJhbmRvbUltYWdlcyA9IHJlc3BvbnNlLmRhdGE7XHJcblx0XHRcdFx0Y3BjLmxvYWRpbmdSYW5kb21JbWFnZSA9IGZhbHNlO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiaW1hZ2VzIGVyclwiKTtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH07XHJcblx0XHRjcGMuY2FuY2VsVXBsb2FkID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlmKGNwYy5wb3N0LmltYWdlSWQpe1xyXG5cdFx0XHRcdGhvbWVTZXJ2aWNlLmRlbGV0ZVVwbG9hZChjcGMucG9zdC5pbWFnZUlkKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuXHRcdFx0XHRcdGNwYy5wb3N0LmltYWdlID0gJyc7XHJcblx0XHRcdFx0XHRjcGMucG9zdC5pbWFnZUlkID0gJyc7XHRcdFx0XHRcdFxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRcclxuXHRcdH07XHJcblxyXG5cdFx0Y3BjLnN1Ym1pdFVwbG9hZCA9IGZ1bmN0aW9uKGZpbGUsIGVyckZpbGVzKSB7XHJcblx0XHRcdGlmKGNwYy5wb3N0LmltYWdlSWQpe1xyXG5cdFx0XHRcdGNwYy5jYW5jZWxVcGxvYWQoKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRjcGMubG9hZGluZ0ltYWdlID0gdHJ1ZTtcclxuXHRcdFx0Y3BjLmZpbGUgPSBmaWxlO1xyXG5cdFx0XHRjcGMuZXJyRmlsZSA9IGVyckZpbGVzICYmIGVyckZpbGVzWzBdO1xyXG5cdFx0XHRpZiAoY3BjLmZpbGUpIHtcclxuXHRcdFx0XHRob21lU2VydmljZS5zdWJtaXRVcGxvYWQoY3BjLmZpbGUpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdGNwYy5wb3N0LmltYWdlID0gcmVzcG9uc2UuZGF0YS5pbWFnZTtcclxuXHRcdFx0XHRcdGNwYy5wb3N0LmltYWdlSWQgPSByZXNwb25zZS5kYXRhLmltYWdlSWQ7XHJcblx0XHRcdFx0XHRjcGMubG9hZGluZ0ltYWdlID0gZmFsc2U7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHR9O1xyXG5cdFx0XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKXtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBvc3QnKVxyXG5cdFx0LmNvbnRyb2xsZXIoJ0xhdGVzdFBvc3RDb250cm9sbGVyJyxbJyRzY29wZScsJyRzdGF0ZScsJ3Bvc3RTZXJ2aWNlJywnJGlvbmljTG9hZGluZycsTGF0ZXN0UG9zdENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gTGF0ZXN0UG9zdENvbnRyb2xsZXIoJHNjb3BlLCRzdGF0ZSxwb3N0U2VydmljZSwkaW9uaWNMb2FkaW5nKXtcclxuXHRcdHZhciBhcGMgPSB0aGlzO1xyXG5cdFx0YXBjLmdldExhdGVzdFBvc3RzID0gZ2V0TGF0ZXN0UG9zdHM7XHJcblx0XHRhcGMucHVsbFJlZnJlc2hQb3N0cyA9IHB1bGxSZWZyZXNoUG9zdHM7XHJcblx0XHRhcGMubG9hZE1vcmVQb3N0cyA9IGxvYWRNb3JlUG9zdHM7XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoUG9zdHMoKSB7XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGxvYWRNb3JlUG9zdHMoKSB7XHJcblx0XHRcdGFwYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXRMYXRlc3RQb3N0cygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldExhdGVzdFBvc3RzKCkge1xyXG5cdFx0XHRwb3N0U2VydmljZS5nZXRMYXRlc3RQb3N0cyhhcGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0YW5ndWxhci5mb3JFYWNoKHJlc3BvbnNlLmRhdGEuZG9jcywgZnVuY3Rpb24odmFsdWUpIHtcclxuXHRcdFx0XHRcdGFwYy5wb3N0c0xpc3QucHVzaCh2YWx1ZSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0YXBjLm5vUG9zdHMgPSFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFwYy5wb3N0c0xpc3QubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcdFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwuaW5maW5pdGVTY3JvbGxDb21wbGV0ZScpO1xyXG5cdFx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHR9KTtcclxuXHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHJcblx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gZmFsc2U7XHJcblx0XHRcdGFwYy5wb3N0c0xpc3QgPSBbXTtcclxuXHRcdFx0YXBjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRsaW1pdDogMyxcclxuXHRcdFx0XHRwYWdlOiAxXHJcblx0XHRcdH07XHJcblx0XHRcdGdldExhdGVzdFBvc3RzKCk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7IiwiKGZ1bmN0aW9uKGFuZ3VsYXIpe1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucG9zdCcpXHJcblx0XHQuY29udHJvbGxlcignTmVhcmJ5UG9zdENvbnRyb2xsZXInLFsnJHNjb3BlJywnJHN0YXRlJywncG9zdFNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJyxOZWFyYnlQb3N0Q29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBOZWFyYnlQb3N0Q29udHJvbGxlcigkc2NvcGUsJHN0YXRlLHBvc3RTZXJ2aWNlLCRpb25pY0xvYWRpbmcpe1xyXG5cdFx0dmFyIGFwYyA9IHRoaXM7XHJcblx0XHRhcGMuZ2V0TmVhcmJ5UG9zdHMgPSBnZXROZWFyYnlQb3N0cztcclxuXHRcdGFwYy5wdWxsUmVmcmVzaFBvc3RzID0gcHVsbFJlZnJlc2hQb3N0cztcclxuXHRcdGFwYy5sb2FkTW9yZVBvc3RzID0gbG9hZE1vcmVQb3N0cztcclxuXHRcdGFwYy5yZWxlYXNlUmFuZ2UgPSByZWxlYXNlUmFuZ2U7XHJcblx0XHRhcGMuZGlzdGFuY2UgPSAxMDtcclxuXHRcdGFjdGl2YXRlKCk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gcHVsbFJlZnJlc2hQb3N0cygpIHtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiByZWxlYXNlUmFuZ2UoKXtcclxuXHRcdFx0YWN0aXZhdGUoKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGxvYWRNb3JlUG9zdHMoKSB7XHJcblx0XHRcdGFwYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXROZWFyYnlQb3N0cygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldE5lYXJieVBvc3RzKCkge1xyXG5cdFx0XHRwb3N0U2VydmljZS5nZXROZWFyYnlQb3N0cyhhcGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0YW5ndWxhci5mb3JFYWNoKHJlc3BvbnNlLmRhdGEuZG9jcywgZnVuY3Rpb24odmFsdWUpIHtcclxuXHRcdFx0XHRcdGFwYy5wb3N0c0xpc3QucHVzaCh2YWx1ZSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0YXBjLm5vUG9zdHMgPSFyZXNwb25zZS5kYXRhLnRvdGFsO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGFwYy5pbml0aWFsU2VhcmNoQ29tcGxldGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAocmVzcG9uc2UuZGF0YS50b3RhbCA+IGFwYy5wb3N0c0xpc3QubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZXtcclxuXHRcdFx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcdFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHRcclxuXHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLmluZmluaXRlU2Nyb2xsQ29tcGxldGUnKTtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IHRydWU7XHJcblx0XHRcdH0pO1xyXG5cclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0YXBjLnBvc3RzTGlzdCA9IFtdO1xyXG5cdFx0XHRhcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdGxpbWl0OiAxMCxcclxuXHRcdFx0XHRwYWdlOiAxLFxyXG5cdFx0XHRcdGRpc3RhbmNlOiBhcGMuZGlzdGFuY2VcclxuXHRcdFx0fTtcclxuXHRcdFx0Z2V0TmVhcmJ5UG9zdHMoKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcil7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wb3N0JylcclxuXHRcdC5jb250cm9sbGVyKCdQb3B1bGFyUG9zdENvbnRyb2xsZXInLFsnJHNjb3BlJywnJHN0YXRlJywncG9zdFNlcnZpY2UnLCckaW9uaWNMb2FkaW5nJyxQb3B1bGFyUG9zdENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gUG9wdWxhclBvc3RDb250cm9sbGVyKCRzY29wZSwkc3RhdGUscG9zdFNlcnZpY2UsJGlvbmljTG9hZGluZyl7XHJcblx0XHR2YXIgYXBjID0gdGhpcztcclxuXHRcdGFwYy5nZXRQb3B1bGFyUG9zdHMgPSBnZXRQb3B1bGFyUG9zdHM7XHJcblx0XHRhcGMucHVsbFJlZnJlc2hQb3N0cyA9IHB1bGxSZWZyZXNoUG9zdHM7XHJcblx0XHRhcGMubG9hZE1vcmVQb3N0cyA9IGxvYWRNb3JlUG9zdHM7XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIHB1bGxSZWZyZXNoUG9zdHMoKSB7XHJcblx0XHRcdGFjdGl2YXRlKCk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGxvYWRNb3JlUG9zdHMoKSB7XHJcblx0XHRcdGFwYy5wYXJhbXMucGFnZSArPSAxO1xyXG5cdFx0XHRnZXRQb3B1bGFyUG9zdHMoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRQb3B1bGFyUG9zdHMoKSB7XHJcblx0XHRcdHBvc3RTZXJ2aWNlLmdldFBvcHVsYXJQb3N0cyhhcGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0YW5ndWxhci5mb3JFYWNoKHJlc3BvbnNlLmRhdGEuZG9jcywgZnVuY3Rpb24odmFsdWUpIHtcclxuXHRcdFx0XHRcdGFwYy5wb3N0c0xpc3QucHVzaCh2YWx1ZSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aWYoIXJlc3BvbnNlLmRhdGEudG90YWwpe1xyXG5cdFx0XHRcdFx0YXBjLm5vUG9zdHMgPSB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRhcGMuaW5pdGlhbFNlYXJjaENvbXBsZXRlZCA9IHRydWU7XHJcblx0XHRcdFx0aWYgKHJlc3BvbnNlLmRhdGEudG90YWwgPiBhcGMucG9zdHNMaXN0Lmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0YXBjLmNhbkxvYWRNb3JlUmVzdWx0cyA9IHRydWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHRhcGMuY2FuTG9hZE1vcmVSZXN1bHRzID0gZmFsc2U7XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGFwYy5jYW5Mb2FkTW9yZVJlc3VsdHMgPSBmYWxzZTtcclxuXHRcdFx0YXBjLmluaXRpYWxTZWFyY2hDb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0YXBjLnBvc3RzTGlzdCA9IFtdO1xyXG5cdFx0XHRhcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdGxpbWl0OiAzLFxyXG5cdFx0XHRcdHBhZ2U6IDFcclxuXHRcdFx0fTtcclxuXHRcdFx0Z2V0UG9wdWxhclBvc3RzKCk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7IiwiKGZ1bmN0aW9uKGFuZ3VsYXIpe1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucG9zdCcpXHJcblx0XHQuY29udHJvbGxlcignUG9zdFBhcmVudENvbnRyb2xsZXInLFsnJHJvb3RTY29wZScsUG9zdFBhcmVudENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gUG9zdFBhcmVudENvbnRyb2xsZXIoJHJvb3RTY29wZSl7XHJcblx0XHQvLyRyb290U2NvcGUuc2xpZGVIZWFkZXIgPSB0cnVlO1xyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpOyIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wb3N0JylcclxuXHRcdC5jb250cm9sbGVyKCdTaW5nbGVQb3N0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZScsICdwb3N0U2VydmljZScsICckc3RhdGVQYXJhbXMnLCckaW9uaWNIaXN0b3J5JywndXB2b3RlU2VydmljZScsU2luZ2xlUG9zdENvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gU2luZ2xlUG9zdENvbnRyb2xsZXIoJHNjb3BlLCAkc3RhdGUsIHBvc3RTZXJ2aWNlLCRzdGF0ZVBhcmFtcywkaW9uaWNIaXN0b3J5LHVwdm90ZVNlcnZpY2UpIHtcclxuXHRcdHZhciBhcGMgPSB0aGlzO1xyXG5cdFx0YXBjLmdldFNpbmdsZVBvc3Q9IGdldFNpbmdsZVBvc3Q7XHJcblx0XHRhcGMuc3VibWl0UG9zdFVwdm90ZSA9IHN1Ym1pdFBvc3RVcHZvdGU7XHJcblx0XHRhcGMuZGVsZXRlUG9zdFVwdm90ZSA9IGRlbGV0ZVBvc3RVcHZvdGU7XHJcblx0XHRhcGMuZ2V0UG9zdERpc3RhbmNlID0gZ2V0UG9zdERpc3RhbmNlO1xyXG5cdFx0YXBjLmJhY2sgPSBmdW5jdGlvbigpe1xyXG5cdFx0XHRcclxuXHRcdFx0d2luZG93Lmhpc3RvcnkuYmFjaygpOyBcclxuXHRcdH07XHJcblx0XHRcclxuXHRcdGFjdGl2YXRlKCk7XHJcblx0XHRcclxuXHRcdGZ1bmN0aW9uIGdldFNpbmdsZVBvc3QoKSB7XHJcblx0XHRcdHBvc3RTZXJ2aWNlLmdldFBvc3QoJHN0YXRlUGFyYW1zLmlkKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0YXBjLnBvc3QgPSByZXNwb25zZS5kYXRhO1xyXG5cdFx0XHRcdGFwYy5kaXN0YW5jZU9iaiA9IHtcclxuXHRcdFx0XHRcdGxhdGl0dWRlOmFwYy5wb3N0LmxvY1sxXSxcclxuXHRcdFx0XHRcdGxvbmdpdHVkZTogYXBjLnBvc3QubG9jWzBdLFxyXG5cdFx0XHRcdFx0ZGlhdGFuY2U6IDBcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdGdldFBvc3REaXN0YW5jZSgpO1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdFxyXG5cdFx0XHR9KTtcclxuXHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBjaGVja1Bvc3RVcHZvdGUoKXtcclxuXHRcdFx0dXB2b3RlU2VydmljZS5nZXRVcHZvdGUoYXBjLmN1cnJlbnRQb3N0KS50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0YXBjLnBvc3RVcHZvdGVkID0gcmVzLmRhdGEgfHwgZmFsc2U7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBzdWJtaXRQb3N0VXB2b3RlKCl7XHJcblx0XHRcdHVwdm90ZVNlcnZpY2UuY3JlYXRlVXB2b3RlKGFwYy5jdXJyZW50UG9zdCkudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdGNoZWNrUG9zdFVwdm90ZSgpO1xyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZGVsZXRlUG9zdFVwdm90ZSgpe1xyXG5cdFx0XHR1cHZvdGVTZXJ2aWNlLmRlbGV0ZVVwdm90ZShhcGMuY3VycmVudFBvc3QpLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHRjaGVja1Bvc3RVcHZvdGUoKTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCl7XHJcblx0XHRcdGFwYy5jdXJyZW50UG9zdCA9ICRzdGF0ZVBhcmFtcy5pZDtcclxuXHRcdFx0Z2V0U2luZ2xlUG9zdCgpO1xyXG5cdFx0XHRjaGVja1Bvc3RVcHZvdGUoKTtcclxuXHRcdFx0XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXRQb3N0RGlzdGFuY2UoKXtcclxuXHRcdFx0cG9zdFNlcnZpY2UuZ2V0RGlzdGFuY2UoYXBjLmRpc3RhbmNlT2JqKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnBvc3QnKVxyXG5cdFx0LmRpcmVjdGl2ZSgncG9zdHNMaXN0JywgWyckc3RhdGUnLCAndXNlckRhdGEnLCAncG9zdFNlcnZpY2UnLCAndXB2b3RlU2VydmljZScsICckaW9uaWNNb2RhbCcscG9zdHNMaXN0XSk7XHJcblxyXG5cclxuXHRmdW5jdGlvbiBwb3N0c0xpc3QoICRzdGF0ZSwgdXNlckRhdGEsIHBvc3RTZXJ2aWNlLCB1cHZvdGVTZXJ2aWNlLCRpb25pY01vZGFsKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZXN0cmljdDogJ0UnLFxyXG5cdFx0XHR0ZW1wbGF0ZVVybDogJ2FwcC9wb3N0L3ZpZXdzL3Bvc3RzTGlzdFRlbXBsYXRlLmh0bWwnLFxyXG5cdFx0XHRzY29wZToge1xyXG5cdFx0XHRcdHBvc3RzTGlzdDogJz1wb3N0c0xpc3QnLFxyXG5cdFx0XHRcdHBvc3RTZWFyY2hUZXh0U3VibWl0OiAnJnBvc3RTZWFyY2hUZXh0U3VibWl0J1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRyZXBsYWNlOiB0cnVlLFxyXG5cdFx0XHQvL2NvbnRyb2xsZXI6IFsnc2NvcGUnLCBdXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uIChzY29wZSkge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdHNjb3BlLmdldFRpbWUgPSBmdW5jdGlvbih0aW1lKXtcclxuXHRcdFx0XHRcdHJldHVybiBtb21lbnQodGltZSkuZnJvbU5vdygpO1xyXG5cdFx0XHRcdH07XHJcblx0XHRcdFx0c2NvcGUuY3VycmVudFVzZXIgPSB1c2VyRGF0YS5nZXRVc2VyKCk7XHJcblxyXG5cdFx0XHRcdHNjb3BlLnNldFBvc3RTZWFyY2ggPSBmdW5jdGlvbihpbnRlcmVzdCl7XHJcblx0XHRcdFx0XHRpZihzY29wZS5wb3N0U2VhcmNoVGV4dFN1Ym1pdCl7XHJcblx0XHRcdFx0XHRcdHNjb3BlLnBvc3RTZWFyY2hUZXh0U3VibWl0KHtpbnRlcmVzdDppbnRlcmVzdH0pO1x0XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdHNjb3BlLnVzZXJQYWdlID0gdXNlclBhZ2U7XHJcblx0XHRcdFx0ZnVuY3Rpb24gdXNlclBhZ2UoaWQpe1xyXG5cdFx0XHRcdFx0c2NvcGUubW9kYWwuaGlkZSgpO1xyXG5cdFx0XHRcdFx0JHN0YXRlLmdvKCdob21lLnVzZXJQYWdlJywgeyB1c2VyOiBpZCB9KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZnVuY3Rpb24gbG9hZFBvc3RNb2RhbCgpIHtcclxuXHRcdFx0XHRcdHJldHVybiAkaW9uaWNNb2RhbC5mcm9tVGVtcGxhdGVVcmwoJ2FwcC9wb3N0L3ZpZXdzL3Bvc3RNb2RhbC5odG1sJywge1xyXG5cdFx0XHRcdFx0XHRzY29wZTogc2NvcGVcclxuXHRcdFx0XHRcdH0pLnRoZW4oZnVuY3Rpb24obW9kYWwpIHtcclxuXHRcdFx0XHRcdFx0c2NvcGUubW9kYWwgPSBtb2RhbDtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRzY29wZS5wb3N0TW9kYWwgPSB7fTtcclxuXHRcdFx0XHRzY29wZS5wb3N0TW9kYWwudXNlclBhZ2UgPSB1c2VyUGFnZTtcclxuXHRcdFx0XHRcclxuXHJcblx0XHRcdFx0c2NvcGUuc2hvd1Bvc3RNb2RhbCA9IGZ1bmN0aW9uKHBvc3QpIHtcclxuXHRcdFx0XHRcdHNjb3BlLnBvc3RNb2RhbC5wb3N0ID0gcG9zdDtcclxuXHRcdFx0XHRcdHNjb3BlLnBvc3RNb2RhbC5wb3N0LnZpZXdzKz0xO1xyXG5cdFx0XHRcdFx0bG9hZFBvc3RNb2RhbCgpLnRoZW4oZnVuY3Rpb24oKXtcclxuXHJcblx0XHRcdFx0XHRcdHNjb3BlLm1vZGFsLnNob3coKTtcdFxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRzY29wZS4kb24oJ21vZGFsLmhpZGRlbicsIGZ1bmN0aW9uKCkge1xyXG4gICAgXHRcdFx0XHRcdFx0XHJcbiAgICBcdFx0XHRcdFx0XHRzY29wZS5tb2RhbC5yZW1vdmUoKTtcclxuICBcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcclxuXHRcdFx0XHR9O1xyXG5cclxuXHRcdFx0XHRcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdFxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC5wb3N0JylcclxuXHRcdC5kaXJlY3RpdmUoJ3Bvc3RVcHZvdGUnLCBbJyRzdGF0ZScsICd1cHZvdGVTZXJ2aWNlJywnJHRpbWVvdXQnLHBvc3RVcHZvdGVdKTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIHBvc3RVcHZvdGUoICRzdGF0ZSwgdXB2b3RlU2VydmljZSwkdGltZW91dCkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdFx0dGVtcGxhdGVVcmw6ICdhcHAvcG9zdC92aWV3cy9wb3N0VXB2b3RlVGVtcGxhdGUuaHRtbCcsXHJcblx0XHRcdHNjb3BlOiB7XHJcblx0XHRcdFx0cG9zdElkOiAnPXBvc3RJZCcsXHJcblx0XHRcdFx0dXB2b3Rlc0xlbmd0aDogJz11cHZvdGVzTGVuZ3RoJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRyZXBsYWNlOiB0cnVlLFxyXG5cdFx0XHRsaW5rOiBmdW5jdGlvbiAoc2NvcGUpIHtcclxuXHRcdFx0XHRzY29wZS5jaGVja1Bvc3RVcHZvdGUgPSBjaGVja1Bvc3RVcHZvdGU7XHJcblx0XHRcdFx0c2NvcGUuc3VibWl0UG9zdFVwdm90ZSA9IHN1Ym1pdFBvc3RVcHZvdGU7XHJcblx0XHRcdFx0c2NvcGUuZGVsZXRlUG9zdFVwdm90ZSA9IGRlbGV0ZVBvc3RVcHZvdGU7XHJcblx0XHRcdFx0YWN0aXZhdGUoKTtcclxuXHRcdFx0XHRmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcclxuXHJcblx0XHRcdFx0XHRzY29wZS5sb2FkaW5nVXB2b3RlID0gdHJ1ZTtcclxuXHRcdFx0XHRcdGNoZWNrUG9zdFVwdm90ZSgpO1x0XHRcdFx0XHRcclxuXHRcdFx0XHR9XHJcblxyXG5cclxuXHRcdFx0XHRmdW5jdGlvbiBjaGVja1Bvc3RVcHZvdGUoKSB7XHJcblx0XHRcdFx0XHR1cHZvdGVTZXJ2aWNlLmdldFVwdm90ZShzY29wZS5wb3N0SWQpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHRzY29wZS5wb3N0VXB2b3RlZCA9IHJlcy5kYXRhO1xyXG5cdFx0XHRcdFx0XHRzY29wZS5sb2FkaW5nVXB2b3RlID0gZmFsc2U7XHRcclxuXHRcdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcImNoZWNrIGVycm9yXCIpO1xyXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRmdW5jdGlvbiBzdWJtaXRQb3N0VXB2b3RlKCkge1xyXG5cdFx0XHRcdFx0c2NvcGUucG9zdFVwdm90ZWQgPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHR1cHZvdGVTZXJ2aWNlLmNyZWF0ZVVwdm90ZShzY29wZS5wb3N0SWQpLnRoZW4oZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHRzY29wZS51cHZvdGVzTGVuZ3RoKz0xO1x0XHJcblx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKFwic3VibWl0IGVycm9yXCIpO1xyXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRmdW5jdGlvbiBkZWxldGVQb3N0VXB2b3RlKCkge1xyXG5cdFx0XHRcdFx0c2NvcGUucG9zdFVwdm90ZWQgPSBmYWxzZTtcclxuXHRcdFx0XHRcdHVwdm90ZVNlcnZpY2UuZGVsZXRlVXB2b3RlKHNjb3BlLnBvc3RJZCkudGhlbihmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdHNjb3BlLnVwdm90ZXNMZW5ndGgtPTE7XHRcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdHdpbmRvdy5hbGVydChlcnIpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcclxuXHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRcclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwucG9zdCcpLlxyXG5cdHNlcnZpY2UoJ3Bvc3RTZXJ2aWNlJywgWyckaHR0cCcsICdob21lU2VydmljZScsICd1c2VyTG9jYXRpb25TZXJ2aWNlJywgJyRxJywgUG9zdFNlcnZpY2VdKTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIFBvc3RTZXJ2aWNlKCRodHRwLCBob21lU2VydmljZSwgdXNlckxvY2F0aW9uU2VydmljZSwgJHEpIHtcclxuXHRcdHRoaXMuZ2V0QWxsUG9zdHMgPSBnZXRBbGxQb3N0cztcclxuXHRcdHRoaXMuZ2V0TmVhcmJ5UG9zdHMgPSBnZXROZWFyYnlQb3N0cztcclxuXHRcdHRoaXMuZ2V0TGF0ZXN0UG9zdHMgPSBnZXRMYXRlc3RQb3N0cztcclxuXHRcdHRoaXMuZ2V0UG9wdWxhclBvc3RzID0gZ2V0UG9wdWxhclBvc3RzO1xyXG5cdFx0dGhpcy5zdWJtaXRQb3N0ID0gc3VibWl0UG9zdDtcclxuXHRcdHRoaXMuZGVsZXRlUG9zdCA9IGRlbGV0ZVBvc3Q7XHJcblx0XHR0aGlzLmdldFBvc3QgPSBnZXRQb3N0O1xyXG5cdFx0dGhpcy5nZXREaXN0YW5jZSA9IGdldERpc3RhbmNlO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGdldEFsbFBvc3RzKHBhcmFtcykge1xyXG5cclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgJ3Bvc3QvZ2V0UG9zdHMnLCB7IHBhcmFtczogcGFyYW1zIH0pO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ2V0RmlsdGVyZWRQb3N0cyhkZWZlcixwYXJhbXMpe1xyXG5cdFx0XHQkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArIFwicG9zdC9nZXRQb3N0c1wiLCB7IHBhcmFtczogcGFyYW1zIH0pLnRoZW4oZnVuY3Rpb24ocG9zdHMpIHtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwid2l0aG91dCBwb3NpdGlvblwiKTtcclxuXHRcdFx0XHRcdGRlZmVyLnJlc29sdmUocG9zdHMpO1xyXG5cdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycjIpIHtcclxuXHRcdFx0XHRcdGRlZmVyLnJlamVjdChlcnIyKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldE5lYXJieVBvc3RzKHBhcmFtcykge1xyXG5cdFx0XHRwYXJhbXMubmVhcmJ5ID0gdHJ1ZTtcclxuXHRcdFx0dmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuXHRcdFx0XHJcblx0XHRcdGlmKHBhcmFtcy5wYWdlPT0xKXtcclxuXHRcdFx0XHR1c2VyTG9jYXRpb25TZXJ2aWNlLnNldFVzZXJMb2NhdGlvbigpO1xyXG4gICAgICBcdFx0XHR9XHJcbiAgICAgIFx0XHRcdFxyXG5cdFx0XHR1c2VyTG9jYXRpb25TZXJ2aWNlLmdldFVzZXJMb2NhdGlvbigpLnRoZW4oZnVuY3Rpb24ocG9zaXRpb24pIHtcclxuXHRcdFx0XHRwYXJhbXMubGF0aXR1ZGUgPSBwb3NpdGlvbi5sYXRpdHVkZTtcclxuXHRcdFx0XHRwYXJhbXMubG9uZ2l0dWRlID0gcG9zaXRpb24ubG9uZ2l0dWRlO1xyXG5cdFx0XHRcdCRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgXCJwb3N0L2dldFBvc3RzXCIsIHsgcGFyYW1zOiBwYXJhbXMgfSkudGhlbihmdW5jdGlvbihwb3N0cykge1xyXG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZShwb3N0cyk7XHJcblx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRkZWZlci5yZWplY3QoZXJyKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0d2luZG93LmNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdFx0Z2V0RmlsdGVyZWRQb3N0cyhkZWZlcixwYXJhbXMpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRMYXRlc3RQb3N0cyhwYXJhbXMpIHtcclxuXHRcdFx0cGFyYW1zLnNvcnQgPSAnLXRpbWUnO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncG9zdC9nZXRQb3N0cycsIHsgcGFyYW1zOiBwYXJhbXMgfSk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0UG9wdWxhclBvc3RzKHBhcmFtcykge1xyXG5cdFx0XHRwYXJhbXMuc29ydCA9ICctdXB2b3Rlc0xlbmd0aCc7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdwb3N0L2dldFBvc3RzJywgeyBwYXJhbXM6IHBhcmFtcyB9KTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBzdWJtaXRQb3N0KHBvc3QpIHtcclxuXHRcdFx0dmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJlbnRlcmVkIHN1Ym1pdCBwb3N0XCIpO1xyXG5cdFx0XHR1c2VyTG9jYXRpb25TZXJ2aWNlLmdldFVzZXJMb2NhdGlvbigpLnRoZW4oZnVuY3Rpb24ocG9zaXRpb24pIHtcclxuXHRcdFx0XHRwb3N0LmxhdGl0dWRlID0gcG9zaXRpb24ubGF0aXR1ZGU7XHJcblx0XHRcdFx0cG9zdC5sb25naXR1ZGUgPSBwb3NpdGlvbi5sb25naXR1ZGU7XHJcblxyXG5cdFx0XHRcdCRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdwb3N0L2NyZWF0ZScsIHsgcG9zdDogcG9zdCB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblxyXG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XHJcblx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRkZWZlci5yZWplY3QoZXJyKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0JGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ3Bvc3QvY3JlYXRlJywgeyBwb3N0OiBwb3N0IH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRcdGRlZmVyLnJlc29sdmUocmVzcG9uc2UpO1xyXG5cdFx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycjIpIHtcclxuXHRcdFx0XHRcdGRlZmVyLnJlamVjdChlcnIyKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdHJldHVybiBkZWZlci5wcm9taXNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGRlbGV0ZVBvc3QocG9zdElkKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5kZWxldGUoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdwb3N0L2RlbGV0ZS8nICsgcG9zdElkKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRQb3N0KHBvc3RJZCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncG9zdC9nZXQvJyArIHBvc3RJZCk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0RGlzdGFuY2UocG9zT2JqKSB7XHJcblx0XHRcdHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XHJcblx0XHRcdHZhciBsYXQxID0gcG9zT2JqLmxhdGl0dWRlO1xyXG5cdFx0XHR2YXIgbG9uMSA9IHBvc09iai5sb25naXR1ZGU7XHJcblx0XHRcdHVzZXJMb2NhdGlvblNlcnZpY2UuZ2V0VXNlckxvY2F0aW9uKCkudGhlbihmdW5jdGlvbihwb3NpdGlvbikge1xyXG5cdFx0XHRcdHZhciBsYXQyID0gcG9zaXRpb24ubGF0aXR1ZGU7XHJcblx0XHRcdFx0dmFyIGxvbjIgPSBwb3NpdGlvbi5sb25naXR1ZGU7XHJcblx0XHRcdFx0dmFyIFIgPSA2MzcxOyAvLyBSYWRpdXMgb2YgdGhlIGVhcnRoIGluIGttXHJcblx0XHRcdFx0dmFyIGRMYXQgPSBkZWcycmFkKGxhdDIgLSBsYXQxKTsgLy8gZGVnMnJhZCBiZWxvd1xyXG5cdFx0XHRcdHZhciBkTG9uID0gZGVnMnJhZChsb24yIC0gbG9uMSk7XHJcblx0XHRcdFx0dmFyIGEgPVxyXG5cdFx0XHRcdFx0TWF0aC5zaW4oZExhdCAvIDIpICogTWF0aC5zaW4oZExhdCAvIDIpICtcclxuXHRcdFx0XHRcdE1hdGguY29zKGRlZzJyYWQobGF0MSkpICogTWF0aC5jb3MoZGVnMnJhZChsYXQyKSkgKlxyXG5cdFx0XHRcdFx0TWF0aC5zaW4oZExvbiAvIDIpICogTWF0aC5zaW4oZExvbiAvIDIpO1xyXG5cdFx0XHRcdHZhciBjID0gMiAqIE1hdGguYXRhbjIoTWF0aC5zcXJ0KGEpLCBNYXRoLnNxcnQoMSAtIGEpKTtcclxuXHRcdFx0XHR2YXIgZCA9IFIgKiBjOyAvLyBEaXN0YW5jZSBpbiBrbVxyXG5cdFx0XHRcclxuXHRcdFx0XHRkZWZlci5yZXNvbHZlKE1hdGguY2VpbChkKSk7XHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZTtcclxuXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZGVnMnJhZChkZWcpIHtcclxuXHRcdFx0cmV0dXJuIGRlZyAqIChNYXRoLlBJIC8gMTgwKTtcclxuXHRcdH1cclxuXHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC51c2VyJykuXHJcblx0Y29udHJvbGxlcignVXNlckVkaXRQYWdlQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZScsICdob21lU2VydmljZScsICd1c2VyRGF0YScsICd1c2VyU2VydmljZScsICdVcGxvYWQnLCAnJGlvbmljTG9hZGluZycsIFVzZXJFZGl0UGFnZUNvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gVXNlckVkaXRQYWdlQ29udHJvbGxlcigkc2NvcGUsICRzdGF0ZSwgaG9tZVNlcnZpY2UsIHVzZXJEYXRhLCB1c2VyU2VydmljZSwgVXBsb2FkLCAkaW9uaWNMb2FkaW5nKSB7XHJcblxyXG5cdFx0dmFyIHVtcGMgPSB0aGlzO1xyXG5cclxuXHRcdHVtcGMuYWN0aXZhdGUgPSBhY3RpdmF0ZTtcclxuXHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFVzZXIoKSB7XHJcblx0XHRcdHVtcGMudXNlciA9IHVzZXJEYXRhLmdldFVzZXIoKTtcclxuXHRcdFx0JHNjb3BlLmVkaXRGb3JtLnVzZXIgPSB1bXBjLnVzZXI7XHJcblx0XHRcdGlmICh1bXBjLnVzZXIuaW50ZXJlc3RzLmxlbmd0aCkge1xyXG5cdFx0XHRcdCRzY29wZS5lZGl0Rm9ybS51c2VyLmludGVyZXN0cyA9ICchJyArIHVtcGMudXNlci5pbnRlcmVzdHMuam9pbignIScpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdCRpb25pY0xvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHQkc2NvcGUuZWRpdEZvcm0gPSB7fTtcclxuXHRcdFx0Z2V0VXNlcigpO1xyXG5cdFx0XHRcclxuXHRcdH1cclxuXHJcblx0XHQkc2NvcGUuZWRpdEZvcm0uc3VibWl0VXNlciA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHQkaW9uaWNMb2FkaW5nLnNob3coKTtcclxuXHRcdFx0XHJcblx0XHRcdHVzZXJTZXJ2aWNlLnVwZGF0ZVVzZXIoJHNjb3BlLmVkaXRGb3JtLnVzZXIpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcblx0XHRcdFx0d2luZG93LmFsZXJ0KFwidXBkYXRlZCB1c2VyXCIpO1xyXG5cdFx0XHRcdCRzdGF0ZS5nbygnaG9tZS51c2VyLnVzZXJNZVBhZ2UnKTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKXtcclxuXHRcdFx0XHRcclxuXHRcdFx0fSkuZmluYWxseShmdW5jdGlvbigpe1xyXG5cdFx0XHRcdHVzZXJEYXRhLnNldFVzZXIoKTtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cdFx0JHNjb3BlLmVkaXRGb3JtLnVwbG9hZFVzZXJQaWN0dXJlID0gZnVuY3Rpb24oZmlsZSwgZXJyRmlsZXMpIHtcclxuXHRcdFx0JHNjb3BlLmxvYWRpbmdJbWFnZSA9IHRydWU7XHJcblx0XHRcdHVtcGMuZmlsZSA9IGZpbGU7XHJcblx0XHRcdHVtcGMuZXJyRmlsZSA9IGVyckZpbGVzICYmIGVyckZpbGVzWzBdO1xyXG5cdFx0XHRpZiAoZmlsZSkge1xyXG5cdFx0XHRcdHVtcGMuZmlsZS51cGxvYWQgPSBVcGxvYWQudXBsb2FkKHtcclxuXHRcdFx0XHRcdHVybDogaG9tZVNlcnZpY2UuYmFzZVVSTCArICd1cGxvYWQvc2luZ2xlVXBsb2FkJyxcclxuXHRcdFx0XHRcdGRhdGE6IHsgZmlsZTogdW1wYy5maWxlIH1cclxuXHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0dW1wYy5maWxlLnVwbG9hZC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHR1bXBjLmZpbGUucmVzdWx0ID0gcmVzcG9uc2UuZGF0YTtcclxuXHRcdFx0XHRcdCRzY29wZS5lZGl0Rm9ybS51c2VyLnBpY3R1cmUgPSByZXNwb25zZS5kYXRhO1xyXG5cdFx0XHRcdFx0JHNjb3BlLmxvYWRpbmdJbWFnZSA9IGZhbHNlO1xyXG5cclxuXHJcblxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0fTtcclxuXHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnVzZXInKS5cclxuXHRjb250cm9sbGVyKCdVc2VyTWVQYWdlQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZScsICckYXV0aCcsJ3VzZXJEYXRhJywgJ3Blb3BsZVNlcnZpY2UnLCdwb3N0U2VydmljZScsJyR3aW5kb3cnLCAnJGlvbmljTG9hZGluZycsVXNlck1lUGFnZUNvbnRyb2xsZXJdKTtcclxuXHJcblx0ZnVuY3Rpb24gVXNlck1lUGFnZUNvbnRyb2xsZXIoJHNjb3BlLCAkc3RhdGUsICRhdXRoLHVzZXJEYXRhLCBwZW9wbGVTZXJ2aWNlLHBvc3RTZXJ2aWNlLCR3aW5kb3csJGlvbmljTG9hZGluZykge1xyXG5cclxuXHRcdHZhciB1bXBjID0gdGhpcztcclxuXHRcdHVtcGMubG9nb3V0ID0gbG9nb3V0O1xyXG5cdFx0dW1wYy5hY3RpdmF0ZSA9IGFjdGl2YXRlO1xyXG5cdFx0dW1wYy5hY3RpdmVUYWIgPSAxO1xyXG5cdFx0dW1wYy5hY3RpdmF0ZVRhYiA9IGFjdGl2YXRlVGFiO1xyXG5cdFx0dW1wYy5pc1RhYkFjdGl2ZSA9IGlzVGFiQWN0aXZlO1xyXG5cdFx0dW1wYy5vcGVuRmFjZWJvb2sgPSBvcGVuRmFjZWJvb2s7XHJcblx0XHRhY3RpdmF0ZSgpO1xyXG5cdFx0ZnVuY3Rpb24gb3BlbkZhY2Vib29rKGlkKXtcclxuXHRcdFx0JHdpbmRvdy5vcGVuKCdodHRwczovL3d3dy5mYWNlYm9vay5jb20vJytpZCwgJ19zeXN0ZW0nKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdldFVzZXIoKSB7XHJcblx0XHRcdHVzZXJEYXRhLnNldFVzZXIoKS50aGVuKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHVtcGMudXNlciA9IHVzZXJEYXRhLmdldFVzZXIoKTtcclxuXHJcblx0XHRcdH0pLmNhdGNoKGZ1bmN0aW9uKGVycil7XHJcblx0XHRcdFx0d2luZG93LmNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pLmZpbmFsbHkoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHQkaW9uaWNMb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ2V0VXNlclBvc3RzKCl7XHJcblx0XHRcdHVtcGMucGFyYW1zID0ge1xyXG5cdFx0XHRcdHBhZ2U6IDEsXHJcblx0XHRcdFx0bGltaXQ6IDEwMCxcclxuXHRcdFx0XHR1c2VyOiB1c2VyRGF0YS5nZXRVc2VyKCkuX2lkXHJcblx0XHRcdH07XHJcblx0XHRcdHBvc3RTZXJ2aWNlLmdldExhdGVzdFBvc3RzKHVtcGMucGFyYW1zKS50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcblx0XHRcdFx0dW1wYy5wb3N0c0xpc3QgPSByZXMuZGF0YS5kb2NzO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlVGFiKHRhYkluZGV4KXtcclxuXHRcdFx0dW1wYy5hY3RpdmVUYWIgPSB0YWJJbmRleDtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGlzVGFiQWN0aXZlKHRhYkluZGV4KXtcclxuXHRcdFx0cmV0dXJuIHRhYkluZGV4ID09PSB1bXBjLmFjdGl2ZVRhYjtcclxuXHRcdH1cclxuXHRcdFxyXG5cclxuXHRcdGZ1bmN0aW9uIGxvZ291dCgpIHtcclxuXHRcdFx0JGF1dGgubG9nb3V0KCk7XHJcblx0XHRcdCRzdGF0ZS5nbygnYXV0aGVudGljYXRlJyk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWN0aXZhdGUoKSB7XHJcblx0XHRcdGdldFVzZXIoKTtcclxuXHRcdFx0Z2V0UmVxdWVzdGVkTGlzdCgpO1xyXG5cdFx0XHQkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xyXG5cdFx0XHRnZXRVc2VyUG9zdHMoKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBnZXRSZXF1ZXN0ZWRMaXN0KCkge1xyXG5cdFx0XHRwZW9wbGVTZXJ2aWNlLmdldFJlcXVlc3RlZFVzZXJzKHsgcGFnZTogMSwgbGltaXQ6IDI1IH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHR1bXBjLnBlb3BsZUxpc3QgPSByZXNwb25zZS5kYXRhLmRvY3M7XHJcblx0XHRcdFx0dW1wYy50b3RhbCA9IHJlc3BvbnNlLmRhdGEudG90YWw7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7XHJcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC51c2VyJykuXHJcblx0Y29udHJvbGxlcignVXNlclBhZ2VDb250cm9sbGVyJywgWyckc3RhdGUnLCAnJGF1dGgnLCAndXNlclNlcnZpY2UnLCAncmV2ZWFsU2VydmljZScsJyRzdGF0ZVBhcmFtcycsICdmcmllbmRzJywncG9zdFNlcnZpY2UnLCckd2luZG93JywnJGlvbmljTG9hZGluZycsVXNlclBhZ2VDb250cm9sbGVyXSk7XHJcblxyXG5cdGZ1bmN0aW9uIFVzZXJQYWdlQ29udHJvbGxlcigkc3RhdGUsICRhdXRoLCB1c2VyU2VydmljZSwgcmV2ZWFsU2VydmljZSwkc3RhdGVQYXJhbXMsZnJpZW5kcyxwb3N0U2VydmljZSwkd2luZG93LCRpb25pY0xvYWRpbmcpIHtcclxuXHJcblx0XHR2YXIgdXBjID0gdGhpcztcclxuXHRcdHVwYy5jaGVja1JldmVhbCA9IGNoZWNrUmV2ZWFsO1xyXG5cdFx0dXBjLmdvQmFjayA9IGdvQmFjaztcclxuXHRcdHVwYy5hY3RpdmF0ZVRhYiA9IGFjdGl2YXRlVGFiO1xyXG5cdFx0dXBjLmlzVGFiQWN0aXZlID0gaXNUYWJBY3RpdmU7XHJcblx0XHR1cGMub3BlbkZhY2Vib29rID0gb3BlbkZhY2Vib29rO1xyXG5cdFx0YWN0aXZhdGUoKTtcclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gb3BlbkZhY2Vib29rKGlkKXtcclxuXHRcdFx0JHdpbmRvdy5vcGVuKCdodHRwczovL3d3dy5mYWNlYm9vay5jb20vJytpZCwgJ19zeXN0ZW0nKTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xyXG5cdFx0XHRnZXRVc2VyKCk7XHJcblx0XHRcdHVwYy5yZXZlYWxDaG9pY2UgPSBmcmllbmRzO1xyXG5cdFx0XHR1cGMuYWN0aXZlVGFiID0gMTtcclxuXHRcdFx0Z2V0VXNlclBvc3RzKCk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXRVc2VyUG9zdHMoKXtcclxuXHRcdFx0dXBjLnBhcmFtcyA9IHtcclxuXHRcdFx0XHRwYWdlOiAxLFxyXG5cdFx0XHRcdGxpbWl0OiAxMDAsXHJcblx0XHRcdFx0dXNlcjogJHN0YXRlUGFyYW1zLnVzZXJcclxuXHRcdFx0fTtcclxuXHRcdFx0cG9zdFNlcnZpY2UuZ2V0TGF0ZXN0UG9zdHModXBjLnBhcmFtcykudGhlbihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRcdHVwYy5wb3N0c0xpc3QgPSByZXMuZGF0YS5kb2NzO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGFjdGl2YXRlVGFiKHRhYkluZGV4KXtcclxuXHRcdFx0dXBjLmFjdGl2ZVRhYiA9IHRhYkluZGV4O1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gaXNUYWJBY3RpdmUodGFiSW5kZXgpe1xyXG5cdFx0XHRyZXR1cm4gdGFiSW5kZXggPT09IHVwYy5hY3RpdmVUYWI7XHJcblx0XHR9XHJcblx0XHRcclxuXHRcdGZ1bmN0aW9uIGNoZWNrUmV2ZWFsKCl7XHJcblx0XHRcdHJldmVhbFNlcnZpY2UuY2hlY2soJHN0YXRlUGFyYW1zLnVzZXIpLnRoZW4oZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHR1cGMucmV2ZWFsQ2hvaWNlID0gcmVzLmRhdGEuc3RhdHVzO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGdvQmFjaygpe1xyXG5cdFx0XHQkd2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZ2V0VXNlcigpIHtcclxuXHJcblx0XHRcdHVzZXJTZXJ2aWNlLmdldFVzZXIoJHN0YXRlUGFyYW1zLnVzZXIpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHR1cGMudXNlciA9IHJlc3BvbnNlLmRhdGE7XHJcblx0XHRcdFx0XHJcblxyXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpe1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdFxyXG5cdFx0XHR9KS5maW5hbGx5KGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0JGlvbmljTG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwudXNlcicpLlxyXG5cdGNvbnRyb2xsZXIoJ1VzZXJQYWdlUG9zdHNDb250cm9sbGVyJywgWyckc3RhdGUnLCAgJyRzdGF0ZVBhcmFtcycsICdmcmllbmRzJyxVc2VyUGFnZVBvc3RzQ29udHJvbGxlcl0pO1xyXG5cclxuXHRmdW5jdGlvbiBVc2VyUGFnZVBvc3RzQ29udHJvbGxlcigkc3RhdGUsICAkc3RhdGVQYXJhbXMsZnJpZW5kcykge1xyXG5cdFx0YWxlcnQoZnJpZW5kcyk7XHJcblxyXG5cclxuXHRcdFxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcil7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC51c2VyJykuXHJcblx0XHRjb250cm9sbGVyKCdVc2VyUGFyZW50Q29udHJvbGxlcicsW1VzZXJQYXJlbnRDb250cm9sbGVyXSk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gVXNlclBhcmVudENvbnRyb2xsZXIoKXtcclxuXHRcdFx0XHJcblx0XHR9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTsiLCIoZnVuY3Rpb24oYW5ndWxhcil7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cdGFuZ3VsYXIubW9kdWxlKCdwZXRhbC51c2VyJylcclxuXHRcdC5kaXJlY3RpdmUoJ2Jsb2NrZWRMaXN0JyxbJ2Jsb2NrU2VydmljZScsYmxvY2tlZExpc3RdKTtcclxuXHJcblx0ZnVuY3Rpb24gYmxvY2tlZExpc3QoYmxvY2tTZXJ2aWNlKXtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlc3RyaWN0OiAnRScsXHJcblx0XHRcdHJlcGxhY2U6IHRydWUsXHJcblx0XHRcdHRlbXBsYXRlVXJsOiAnYXBwL3VzZXIvdmlld3MvYmxvY2tlZExpc3QuaHRtbCcsXHJcblx0XHRcdGxpbms6IGZ1bmN0aW9uKHNjb3BlKXtcclxuXHRcdFx0XHRzY29wZS5hZnRlckNhbGxiYWNrID0gZnVuY3Rpb24oaW5kZXgpe1xyXG5cdFx0XHRcdFx0c2NvcGUucGVvcGxlTGlzdC5zcGxpY2UoaW5kZXgsMSk7XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0XHRibG9ja1NlcnZpY2UuZ2V0QmxvY2tzKCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcblx0XHRcdFx0XHR3aW5kb3cuY29uc29sZS5sb2cocmVzcG9uc2UpO1xyXG5cdFx0XHRcdFx0c2NvcGUucGVvcGxlTGlzdCA9IHJlc3BvbnNlLmRhdGE7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7IiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnVzZXInKS5cclxuXHRzZXJ2aWNlKCdibG9ja1NlcnZpY2UnLCBbJyRodHRwJywgJ2hvbWVTZXJ2aWNlJyxCbG9ja1NlcnZpY2VdKTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIEJsb2NrU2VydmljZSgkaHR0cCwgaG9tZVNlcnZpY2UpIHtcclxuXHRcdHRoaXMuY3JlYXRlID0gY3JlYXRlO1xyXG5cdFx0dGhpcy5yZW1vdmUgPSByZW1vdmU7XHJcblx0XHR0aGlzLmdldEJsb2NrcyA9IGdldEJsb2NrcztcclxuXHRcdHRoaXMuY2hlY2sgPSBjaGVjaztcclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gY3JlYXRlKGlkKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAnYmxvY2svY3JlYXRlJywgeyBzZWNvbmRVc2VyOiBpZCB9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIHJlbW92ZShpZCkge1x0XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAnYmxvY2svZGVsZXRlJywgeyBzZWNvbmRVc2VyOiBpZCB9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGNoZWNrKGlkKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdibG9jay9nZXQvJytpZCk7XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBnZXRCbG9ja3MoKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdibG9jay9nZXRCbG9ja3MvJyk7XHJcblx0XHR9XHJcblx0fVxyXG59KSh3aW5kb3cuYW5ndWxhcik7IiwiKGZ1bmN0aW9uKGFuZ3VsYXIpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3BldGFsLnVzZXInKS5cclxuXHRzZXJ2aWNlKCdyZXZlYWxTZXJ2aWNlJywgWyckaHR0cCcsICdob21lU2VydmljZScsUmV2ZWFsU2VydmljZV0pO1xyXG5cclxuXHJcblx0ZnVuY3Rpb24gUmV2ZWFsU2VydmljZSgkaHR0cCwgaG9tZVNlcnZpY2UpIHtcclxuXHRcdHRoaXMuaW5pdGlhdGUgPSBpbml0aWF0ZTtcclxuXHRcdHRoaXMuYWNjZXB0ID0gYWNjZXB0O1xyXG5cdFx0dGhpcy5pZ25vcmUgPSBpZ25vcmU7XHJcblx0XHR0aGlzLmNhbmNlbCA9IGNhbmNlbDtcclxuXHRcdHRoaXMucmVjZWl2ZWQgPSByZWNlaXZlZDtcclxuXHRcdHRoaXMucmVxdWVzdGVkID0gcmVxdWVzdGVkO1xyXG5cdFx0dGhpcy5yZXZlYWxlZCA9IHJldmVhbGVkO1xyXG5cdFx0dGhpcy5maW5pc2ggPSBmaW5pc2g7XHJcblx0XHR0aGlzLmNoZWNrID0gY2hlY2s7XHJcblxyXG5cdFx0ZnVuY3Rpb24gZ2V0UGFyYW1zKGlkKXtcclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHQnc2Vjb25kVXNlcic6IGlkXHJcblx0XHRcdH07XHJcblx0XHR9XHJcblx0XHRmdW5jdGlvbiBpbml0aWF0ZShpZCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ3JldmVhbC9pbml0aWF0ZScsIHsgc2Vjb25kVXNlcjogaWQgfSk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gYWNjZXB0KGlkKSB7XHJcblx0XHRcdFxyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ3JldmVhbC9hY2NlcHQnLCB7IHNlY29uZFVzZXI6IGlkIH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGlnbm9yZShpZCkge1xyXG5cdFx0XHRcclxuXHRcdFx0cmV0dXJuICRodHRwLnBvc3QoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdyZXZlYWwvaWdub3JlJywgeyBzZWNvbmRVc2VyOiBpZCB9KTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBjYW5jZWwoaWQpIHtcclxuXHRcdFx0XHJcblx0XHRcdHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncmV2ZWFsL2NhbmNlbCcsIHsgc2Vjb25kVXNlcjogaWQgfSk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gcmVjZWl2ZWQoaWQpIHtcclxuXHRcdFx0dmFyIHBhcmFtcyA9IGdldFBhcmFtcyhpZCk7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdyZXZlYWwvcmVjZWl2ZWQnLCB7cGFyYW1zOnBhcmFtc30pO1xyXG5cdFx0XHRcdFxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIHJlcXVlc3RlZChpZCkge1xyXG5cdFx0XHR2YXIgcGFyYW1zID0gZ2V0UGFyYW1zKGlkKTtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgJ3JldmVhbC9yZXF1ZXN0ZWQnLCB7cGFyYW1zOnBhcmFtc30pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIHJldmVhbGVkKGlkKSB7XHJcblx0XHRcdHZhciBwYXJhbXMgPSBnZXRQYXJhbXMoaWQpO1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAuZ2V0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAncmV2ZWFsL3JldmVhbGVkJywge3BhcmFtczpwYXJhbXN9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGZpbmlzaChpZCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdChob21lU2VydmljZS5iYXNlVVJMICsgJ3JldmVhbC9maW5pc2gnLCB7c2Vjb25kVXNlcjogaWR9KTtcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGNoZWNrKGlkKXtcclxuXHRcdFx0dmFyIHBhcmFtcyA9IGdldFBhcmFtcyhpZCk7XHJcblx0XHRcdHJldHVybiAkaHR0cC5nZXQoaG9tZVNlcnZpY2UuYmFzZVVSTCArICdyZXZlYWwvY2hlY2snLCB7cGFyYW1zOnBhcmFtc30pO1x0XHJcblx0XHR9XHJcblxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpOyIsIihmdW5jdGlvbihhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cclxuXHRhbmd1bGFyLm1vZHVsZSgncGV0YWwudXNlcicpXHJcblx0XHQuc2VydmljZSgndXNlckxvY2F0aW9uU2VydmljZScsIFsnJGNvcmRvdmFHZW9sb2NhdGlvbicsICd1c2VyU2VydmljZScsICckcScsICckaHR0cCcsICd0b2FzdHInLCBVc2VyTG9jYXRpb25TZXJ2aWNlXSk7XHJcblxyXG5cclxuXHRmdW5jdGlvbiBVc2VyTG9jYXRpb25TZXJ2aWNlKCRjb3Jkb3ZhR2VvbG9jYXRpb24sIHVzZXJTZXJ2aWNlLCAkcSwgJGh0dHAsIHRvYXN0cikge1xyXG5cdFx0dGhpcy5nZXRVc2VyTG9jYXRpb24gPSBnZXRVc2VyTG9jYXRpb247XHJcblx0XHR0aGlzLnNldFVzZXJMb2NhdGlvbiA9IHNldFVzZXJMb2NhdGlvbjtcclxuXHJcblx0XHRmdW5jdGlvbiBnZXRVc2VyTG9jYXRpb24oKSB7XHJcblx0XHRcdFxyXG5cdFx0XHR2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG5cdFx0XHR2YXIgb3B0aW9ucyA9IHsgdGltZW91dDogMzAwMCwgZW5hYmxlSGlnaEFjY3VyYWN5OiBmYWxzZSB9O1xyXG5cclxuXHRcdFx0JGNvcmRvdmFHZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24ob3B0aW9ucykudGhlbihmdW5jdGlvbihwb3NpdGlvbikge1xyXG5cdFx0XHRcdHZhciBwb3NpdGlvbnMgPSB7IGxhdGl0dWRlOiBwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGUsIGxvbmdpdHVkZTogcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZSB9O1xyXG5cdFx0XHRcdGRlZmVycmVkLnJlc29sdmUocG9zaXRpb25zKTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JGh0dHAucG9zdCgnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vZ2VvbG9jYXRpb24vdjEvZ2VvbG9jYXRlP2tleT1BSXphU3lBNWJxdkNwMXdZWDdGR0tpRHlkM3cwRHp2SlpvUHdRclEnKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHR2YXIgY29vcmRzID0ge1xyXG5cdFx0XHRcdFx0XHRsYXRpdHVkZTogcmVzcG9uc2UuZGF0YS5sb2NhdGlvbi5sYXQsXHJcblx0XHRcdFx0XHRcdGxvbmdpdHVkZTogcmVzcG9uc2UuZGF0YS5sb2NhdGlvbi5sbmdcclxuXHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKGNvb3Jkcyk7XHJcblx0XHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHR3aW5kb3cuY29uc29sZS5sb2coXCJlcnJvciBmcm9tIGdvb2dsZVwiKTtcclxuXHRcdFx0XHRcdHdpbmRvdy5jb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0KCdOb3QgYWJsZSB0byBhY2NlcyB5b3VyIGxvY2F0aW9uLk1ha2Ugc3VyZSBsb2NhdGlvbiBpcyBlbmFibGVkLicpO1xyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0fSk7XHJcblx0XHRcdHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIHNldFVzZXJMb2NhdGlvbigpIHtcclxuXHRcdFx0dmFyIG9wdGlvbnMgPSB7IHRpbWVvdXQ6IDMwMDAsIGVuYWJsZUhpZ2hBY2N1cmFjeTogZmFsc2UgfTtcclxuXHRcdFx0JGNvcmRvdmFHZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24ob3B0aW9ucykudGhlbihmdW5jdGlvbihwb3NpdGlvbikge1xyXG5cdFx0XHRcdHZhciBwb3NpdGlvbnMgPSB7IGxhdGl0dWRlOiBwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGUsIGxvbmdpdHVkZTogcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZSB9O1xyXG5cdFx0XHRcdHVzZXJTZXJ2aWNlLnVwZGF0ZVVzZXIocG9zaXRpb25zKTtcclxuXHRcdFx0fSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0JGh0dHAucG9zdCgnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vZ2VvbG9jYXRpb24vdjEvZ2VvbG9jYXRlP2tleT1BSXphU3lBNWJxdkNwMXdZWDdGR0tpRHlkM3cwRHp2SlpvUHdRclEnKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRcdFx0XHR2YXIgY29vcmRzID0ge1xyXG5cdFx0XHRcdFx0XHRsYXRpdHVkZTogcmVzcG9uc2UuZGF0YS5sb2NhdGlvbi5sYXQsXHJcblx0XHRcdFx0XHRcdGxvbmdpdHVkZTogcmVzcG9uc2UuZGF0YS5sb2NhdGlvbi5sbmdcclxuXHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHR1c2VyU2VydmljZS51cGRhdGVVc2VyKGNvb3Jkcyk7XHJcblx0XHRcdFx0XHRcclxuXHRcdFx0XHR9KS5jYXRjaChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdGlmIChlcnIuY29kZSA9PSAzKSB7XHJcblx0XHRcdFx0XHRcdFx0dG9hc3RyLndhcm5pbmcoJ05vdCBhYmxlIHRvIGFjY2VzIHlvdXIgbG9jYXRpb24uTWFrZSBzdXJlIGxvY2F0aW9uIGlzIGVuYWJsZWQuJywgJ1dhcm5pbmcnLCB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0bWF4T3BlbmVkOiAxLFxyXG5cdFx0XHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChlcnIuY29kZSA9PSAyIHx8IGVyci5jb2RlID09IDEpIHtcclxuXHRcdFx0XHRcdFx0XHR0b2FzdHIud2FybmluZygnTm90IGFibGUgdG8gYWNjZXMgeW91ciBsb2NhdGlvbi5NYWtlIHN1cmUgbG9jYXRpb24gaXMgZW5hYmxlZC4nLCAnV2FybmluZycsIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRtYXhPcGVuZWQ6IDEsXHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cclxuXHJcblxyXG5cdH1cclxufSkod2luZG93LmFuZ3VsYXIpO1xyXG4iLCIoZnVuY3Rpb24oYW5ndWxhcikge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICAvKlxyXG4gICAqU2VydmljZSBmb3IgZ2V0dGluZyBhIHNpbmdsZSBzdG9yZSB3aXRoIGl0cyBpZFxyXG4gICAqL1xyXG4gIGFuZ3VsYXIubW9kdWxlKCdwZXRhbC51c2VyJylcclxuICAgIC5zZXJ2aWNlKCd1c2VyU2VydmljZScsIFtcIiRodHRwXCIsIFwiaG9tZVNlcnZpY2VcIiwgVXNlclNlcnZpY2VdKTtcclxuXHJcbiAgLypcclxuICAgKiBUaGlzIHNlcnZpYyBoYXMgYSBmdW5jdGlvbiBuYW1lcyBnZXRTdG9yZSB3aGljaCB0YWtlcyBpZCBhcyBwYXJhbWV0ZXIgYW5kIHJldHVybnMgYSBwcm9taXNlXHJcbiAgICovXHJcbiAgZnVuY3Rpb24gVXNlclNlcnZpY2UoJGh0dHAsIGhvbWVTZXJ2aWNlKSB7XHJcbiAgICB0aGlzLnVwZGF0ZVVzZXIgPSB1cGRhdGVVc2VyO1xyXG4gICAgXHJcbiAgICB0aGlzLmdldFVzZXIgPSBnZXRVc2VyO1xyXG4gICAgXHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIGdldFVzZXIoaWQpIHtcclxuICAgICAgcmV0dXJuICRodHRwLmdldChob21lU2VydmljZS5iYXNlVVJMICsgXCJ1c2VyL2dldC9cIiArIGlkKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gdXBkYXRlVXNlcih1c2VyKSB7XHJcbiAgICAgIHJldHVybiAkaHR0cC5wb3N0KGhvbWVTZXJ2aWNlLmJhc2VVUkwgKyAndXNlci91cGRhdGUvJywgeyB1c2VyOiB1c2VyIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcblxyXG5cclxuICB9XHJcbn0pKHdpbmRvdy5hbmd1bGFyKTtcclxuIl19
